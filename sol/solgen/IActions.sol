// SPDX-License-Identifier: MIT
pragma solidity >=0.8.0;

/* Autogenerated file. Do not edit manually. */

struct ActionData_Initialize {
    uint16 width;
    uint16 height;
}

struct ActionData_CreateUnit {
    uint8 playerId;
    uint8 unitType;
    uint16 x;
    uint16 y;
}

struct ActionData_AssignUnit {
    uint8 playerId;
    uint8 unitId;
    uint64 command;
    uint64 commandExtra;
    uint8 commandMeta;
}

struct ActionData_PlaceBuilding {
    uint8 playerId;
    uint8 buildingType;
    uint16 x;
    uint16 y;
}

struct ActionData_AddPlayer {
    uint16 spawnAreaX;
    uint16 spawnAreaY;
    uint8 spawnAreaWidth;
    uint8 spawnAreaHeight;
    uint16 workerPortX;
    uint16 workerPortY;
}

struct ActionData_AddUnitPrototype {
    uint8 layer;
    uint16 resourceCost;
    uint8 computeCost;
    uint8 spawnTime;
    uint8 maxIntegrity;
    uint8 landStrength;
    uint8 hoverStrength;
    uint8 airStrength;
    uint8 attackRange;
    uint8 attackCooldown;
    bool isAssault;
    bool isConfrontational;
    bool isWorker;
}

struct ActionData_AddBuildingPrototype {
    uint8 width;
    uint8 height;
    uint16 resourceCost;
    uint16 resourceCapacity;
    uint8 computeCapacity;
    uint8 resourceMine;
    uint8 mineTime;
    uint8 maxIntegrity;
    uint8 buildingTime;
    bool isArmory;
    bool isEnvironment;
}

interface IActions {
    event ActionExecuted(bytes4 actionId, bytes data);

    function tick() external;

    function purge() external;

    function initialize(ActionData_Initialize memory action) external;
    function start() external;
    function createUnit(ActionData_CreateUnit memory action) external;
    function assignUnit(ActionData_AssignUnit memory action) external;
    function placeBuilding(ActionData_PlaceBuilding memory action) external;
    function addPlayer(ActionData_AddPlayer memory action) external;
    function addUnitPrototype(
        ActionData_AddUnitPrototype memory action
    ) external;
    function addBuildingPrototype(
        ActionData_AddBuildingPrototype memory action
    ) external;
}
