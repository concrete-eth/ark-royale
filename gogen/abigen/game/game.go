// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ActionDataAddBuildingPrototype is an auto generated low-level Go binding around an user-defined struct.
type ActionDataAddBuildingPrototype struct {
	Width            uint8
	Height           uint8
	ResourceCost     uint16
	ResourceCapacity uint16
	ComputeCapacity  uint8
	ResourceMine     uint8
	MineTime         uint8
	MaxIntegrity     uint8
	BuildingTime     uint8
	IsArmory         bool
	IsEnvironment    bool
}

// ActionDataAddPlayer is an auto generated low-level Go binding around an user-defined struct.
type ActionDataAddPlayer struct {
	SpawnAreaX      uint16
	SpawnAreaY      uint16
	SpawnAreaWidth  uint8
	SpawnAreaHeight uint8
	WorkerPortX     uint16
	WorkerPortY     uint16
}

// ActionDataAddUnitPrototype is an auto generated low-level Go binding around an user-defined struct.
type ActionDataAddUnitPrototype struct {
	Layer             uint8
	ResourceCost      uint16
	ComputeCost       uint8
	SpawnTime         uint8
	MaxIntegrity      uint8
	LandStrength      uint8
	HoverStrength     uint8
	AirStrength       uint8
	AttackRange       uint8
	AttackCooldown    uint8
	IsAssault         bool
	IsConfrontational bool
	IsWorker          bool
}

// ActionDataAssignUnit is an auto generated low-level Go binding around an user-defined struct.
type ActionDataAssignUnit struct {
	PlayerId     uint8
	UnitId       uint8
	Command      uint64
	CommandExtra uint64
	CommandMeta  uint8
}

// ActionDataCreateUnit is an auto generated low-level Go binding around an user-defined struct.
type ActionDataCreateUnit struct {
	PlayerId uint8
	UnitType uint8
	X        uint16
	Y        uint16
}

// ActionDataInitialize is an auto generated low-level Go binding around an user-defined struct.
type ActionDataInitialize struct {
	Width  uint16
	Height uint16
}

// ActionDataPlaceBuilding is an auto generated low-level Go binding around an user-defined struct.
type ActionDataPlaceBuilding struct {
	PlayerId     uint8
	BuildingType uint8
	X            uint16
	Y            uint16
}

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"fallback\",\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"addBuildingPrototype\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_AddBuildingPrototype\",\"components\":[{\"name\":\"width\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"height\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"resourceCost\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"resourceCapacity\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"computeCapacity\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"resourceMine\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"mineTime\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"maxIntegrity\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"buildingTime\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"isArmory\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"isEnvironment\",\"type\":\"bool\",\"internalType\":\"bool\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"addPlayer\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_AddPlayer\",\"components\":[{\"name\":\"spawnAreaX\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"spawnAreaY\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"spawnAreaWidth\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"spawnAreaHeight\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"workerPortX\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"workerPortY\",\"type\":\"uint16\",\"internalType\":\"uint16\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"addUnitPrototype\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_AddUnitPrototype\",\"components\":[{\"name\":\"layer\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"resourceCost\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"computeCost\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"spawnTime\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"maxIntegrity\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"landStrength\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"hoverStrength\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"airStrength\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"attackRange\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"attackCooldown\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"isAssault\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"isConfrontational\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"isWorker\",\"type\":\"bool\",\"internalType\":\"bool\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"assignUnit\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_AssignUnit\",\"components\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"unitId\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"command\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"commandExtra\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"commandMeta\",\"type\":\"uint8\",\"internalType\":\"uint8\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"createUnit\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_CreateUnit\",\"components\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"unitType\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"x\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"y\",\"type\":\"uint16\",\"internalType\":\"uint16\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"executeMultipleActions\",\"inputs\":[{\"name\":\"actionIds\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"actionCount\",\"type\":\"uint8[]\",\"internalType\":\"uint8[]\"},{\"name\":\"actionData\",\"type\":\"bytes[]\",\"internalType\":\"bytes[]\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"getPlayerAddress\",\"inputs\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getPlayerId\",\"inputs\":[{\"name\":\"playerAddress\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"_logic\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"data\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_Initialize\",\"components\":[{\"name\":\"width\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"height\",\"type\":\"uint16\",\"internalType\":\"uint16\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"lastTickBlockNumber\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"placeBuilding\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_PlaceBuilding\",\"components\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"buildingType\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"x\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"y\",\"type\":\"uint16\",\"internalType\":\"uint16\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"proxy\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"purge\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"start\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"tick\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"ActionExecuted\",\"inputs\":[{\"name\":\"actionId\",\"type\":\"bytes4\",\"indexed\":false,\"internalType\":\"bytes4\"},{\"name\":\"data\",\"type\":\"bytes\",\"indexed\":false,\"internalType\":\"bytes\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint64\",\"indexed\":false,\"internalType\":\"uint64\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"InvalidInitialization\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"NotInitializing\",\"inputs\":[]}]",
	Bin: "0x6080604052348015600f57600080fd5b506137ef8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063d0b3617111610097578063eaba983711610066578063eaba9837146101f2578063ec55688914610200578063f8613b5914610213578063ff2801981461022157610100565b8063d0b361711461018e578063d1f57894146101a1578063d74de075146101b4578063e2ce0beb146101c757610100565b80637b6add86116100d35780637b6add8614610140578063982d778d1461014e578063be9a65551461015c578063c4ae16a81461016457610100565b80630f4c47cb1461010a578063143ca15f1461011d5780633eaf5d9f1461013057806370f0c35114610138575b610108610238565b005b6101086101183660046120a5565b6102ad565b61010861012b36600461219a565b6102e7565b610108610362565b6101086102ad565b6101086101183660046121cf565b6101086101183660046122cd565b61010861064f565b6101776101723660046123b1565b6106ac565b60405160ff90911681526020015b60405180910390f35b61010861019c366004612569565b610719565b6101086101af36600461264e565b6107bf565b6101086101c236600461219a565b610932565b6101da6101d536600461269d565b6109a9565b6040516001600160a01b039091168152602001610185565b6101086101183660046126ba565b6000546101da906001600160a01b031681565b6101086101c2366004612710565b61022a60025481565b604051908152602001610185565b6000546001600160a01b03166102955760405162461bcd60e51b815260206004820152601d60248201527f4172636850726f787941646d696e3a2070726f7879206e6f742073657400000060448201526064015b60405180910390fd5b6000546102aa906001600160a01b03166109dc565b50565b60405162461bcd60e51b815260206004820152600f60248201526e1b9bdd081a5b5c1b195b595b9d1959608a1b604482015260640161028c565b805160036102f66001836127a0565b60ff1660028110610309576103096127bf565b01546001600160a01b031633146103555760405162461bcd60e51b815260206004820152601060248201526f23b0b6b29d1037b7363ca83630bcb2b960811b604482015260640161028c565b61035e82610a02565b5050565b61036a610cc5565b600180540361037557565b60015b60028160ff16116102aa5760006103906002836127eb565b61039b90600161280d565b6000805460405163eed886d960e01b815260ff841660048201526001602482015292935090916001600160a01b039091169063eed886d99060440160c060405180830381865afa1580156103f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104179190612847565b6080015190508060ff1660000361042f57505061063d565b600080546040516301473f3960e21b815260ff861660048201526001600160a01b039091169063051cfce49060240161020060405180830381865afa15801561047c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a091906128c8565b6101600151905060045b8160ff168160ff16116106385760008054604051623be62d60e11b815260ff8089166004830152841660248201526001600160a01b03909116906277cc5a9060440161016060405180830381865afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e9190612a07565b9050806060015160ff166003146105455750610626565b60e081015160201c63ffffffff1660008190036106235764010000000162ff0000601088901b161761059e6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b60ff808a168252851660208201526001600160401b038216604080830191909152600054905163f8613b5960e01b81526001600160a01b039091169063f8613b59906105ee908490600401612ad6565b600060405180830381600087803b15801561060857600080fd5b505af115801561061c573d6000803e3d6000fd5b5050505050505b50505b8061063081612b28565b9150506104aa565b505050505b8061064781612b28565b915050610378565b6003600001546001600160a01b031633146106a25760405162461bcd60e51b815260206004820152601360248201527247616d653a206f6e6c79506c617965724f6e6560681b604482015260640161028c565b6106aa610d62565b565b6000805b60028160ff16101561071057826001600160a01b031660038260ff16600281106106dc576106dc6127bf565b01546001600160a01b0316036106fe576106f781600161280d565b9392505050565b8061070881612b28565b9150506106b0565b50600092915050565b6000805b84518110156107b857600084828151811061073a5761073a6127bf565b602002602001015160ff16905060008390505b6107578285612b47565b8110156107a25761079a878481518110610773576107736127bf565b602002602001015186838151811061078d5761078d6127bf565b6020026020010151610da3565b60010161074d565b506107ad8184612b47565b92505060010161071d565b5050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156108045750825b90506000826001600160401b031660011480156108205750303b155b90508115801561082e575080155b1561084c5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561087657845460ff60401b1916600160401b1785555b6000308860405161088690611f21565b6001600160a01b03928316815291166020820152606060408201819052600090820152608001604051809103906000f0801580156108c8573d6000803e3d6000fd5b5090506108d481610f6d565b6108dd87611056565b506002600155831561092957845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b805160036109416001836127a0565b60ff1660028110610954576109546127bf565b01546001600160a01b031633146109a05760405162461bcd60e51b815260206004820152601060248201526f23b0b6b29d1037b7363ca83630bcb2b960811b604482015260640161028c565b61035e826102ad565b600060036109b86001846127a0565b60ff16600281106109cb576109cb6127bf565b01546001600160a01b031692915050565b60603660008037600080366000855afa3d6000803e8080156109fd573d6000f35b3d6000fd5b60005460405163143ca15f60e01b81526001600160a01b039091169063143ca15f90610a32908490600401612b5a565b600060405180830381600087803b158015610a4c57600080fd5b505af1158015610a60573d6000803e3d6000fd5b50505050610a956040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b815160ff168082526000546040516301473f3960e21b815260048101929092526001600160a01b03169063051cfce49060240161020060405180830381865afa158015610ae6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b0a91906128c8565b610160015160ff16602082015281516000908190610b2a906002906127eb565b610b3590600161280d565b905060108160ff166001600160401b0316901b821791506003846060015161ffff1610158015610b6e57506004846060015161ffff1611155b15610b825764010000000190911790610c4b565b60006003856060015161ffff161015610b9d57506001610ba1565b5060025b60008054604051623be62d60e11b815260ff8086166004830152841660248201526001600160a01b03909116906277cc5a9060440161016060405180830381865afa158015610bf4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c189190612a07565b6060015190508060ff16600503610c385764010000000190931792610c48565b60ff821690931764020000000017925b50505b6001600160401b038216604080850191909152600054905163f8613b5960e01b81526001600160a01b039091169063f8613b5990610c8d908690600401612ad6565b600060405180830381600087803b158015610ca757600080fd5b505af1158015610cbb573d6000803e3d6000fd5b5050505050505050565b6002544311610d075760405162461bcd60e51b815260206004820152600e60248201526d185b1c9958591e481d1a58dad95960921b604482015260640161028c565b60008054604080516370f0c35160e01b815290516001600160a01b03909216926370f0c3519260048084019382900301818387803b158015610d4857600080fd5b505af1158015610d5c573d6000803e3d6000fd5b50505050565b600080546040805163be9a655560e01b815290516001600160a01b039092169263be9a65559260048084019382900301818387803b158015610d4857600080fd5b8163ffffffff16633eaf5d9f03610dbc5761035e610362565b8163ffffffff166370f0c35103610dd55761035e6102ad565b8163ffffffff1663eaba983703610e0c57600081806020019051810190610dfc9190612bc1565b9050610e07816102ad565b505050565b8163ffffffff1663be9a655503610e255761035e61064f565b8163ffffffff1663143ca15f03610e5757600081806020019051810190610e4c9190612c53565b9050610e07816102e7565b8163ffffffff1663f8613b5903610e8957600081806020019051810190610e7e9190612c6f565b9050610e0781610932565b8163ffffffff1663d74de07503610eb057600081806020019051810190610e7e9190612c53565b8163ffffffff16630f4c47cb03610ed757600081806020019051810190610dfc9190612cdd565b8163ffffffff16637b6add8603610efe57600081806020019051810190610dfc9190612d5e565b8163ffffffff1663982d778d03610f2557600081806020019051810190610dfc9190612e51565b60405162461bcd60e51b815260206004820152601d60248201527f456e747279706f696e743a20496e76616c696420616374696f6e204944000000604482015260640161028c565b6001600160a01b038116610fd15760405162461bcd60e51b815260206004820152602560248201527f4172636850726f787941646d696e3a20696e76616c69642070726f7879206164604482015264647265737360d81b606482015260840161028c565b6000546001600160a01b0316156110345760405162461bcd60e51b815260206004820152602160248201527f4172636850726f787941646d696e3a2070726f787920616c72656164792073656044820152601d60fa1b606482015260840161028c565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b604080518082018252600f8152600860208201908152600054925163eaba983760e01b8152825161ffff90811660048301529151909116602482015290916001600160a01b03169063eaba983790604401600060405180830381600087803b1580156110c157600080fd5b505af11580156110d5573d6000803e3d6000fd5b50506000546110ef92506001600160a01b03169050611182565b600054611104906001600160a01b0316611607565b60008280602001905181019061111a9190612f0e565b9050611125816117ec565b61112d611867565b600080546040805163be9a655560e01b815290516001600160a01b039092169263be9a65559260048084019382900301818387803b15801561116e57600080fd5b505af1158015610929573d6000803e3d6000fd5b806001600160a01b0316637b6add86604051806101a00160405280600260038111156111b0576111b0612fa7565b60ff168152606460208201526001604080830182905260026060840181905260196080850152600560a0850152600060c08501819052600360e0808701919091526101008601839052610120860192909252610140850184905261016085019390935261018090930191909152519083901b6001600160e01b031916815261123b9190600401612fbd565b600060405180830381600087803b15801561125557600080fd5b505af1158015611269573d6000803e3d6000fd5b50505050806001600160a01b0316637b6add86604051806101a001604052806000600381111561129b5761129b612fa7565b60ff168152609660208201526001604080830182905260046060840181905260646080850152600560a0850152600a60c0850152600f60e080860191909152610100850182905260036101208601526000610140860181905261016086019490945261018090940192909252519184901b6001600160e01b0319168252611323929101612fbd565b600060405180830381600087803b15801561133d57600080fd5b505af1158015611351573d6000803e3d6000fd5b50505050806001600160a01b0316637b6add86604051806101a001604052806000600381111561138357611383612fa7565b60ff16815261012c602082015260016040808301919091526008606083015260966080830152600a60a0830152600060c08301819052600360e080850182905261010085019190915260046101208501819052610140850183905261016085018390526101809094019190915290519084901b6001600160e01b031916815261140d929101612fbd565b600060405180830381600087803b15801561142757600080fd5b505af115801561143b573d6000803e3d6000fd5b50505050806001600160a01b0316637b6add86604051806101a001604052806000600381111561146d5761146d612fa7565b60ff16815261012c6020820152600060408083018290526008606084015260966080840152600360a0840181905260c0840183905260e080850182905261010085019190915260016101208501819052610140850184905261016085015261018090930191909152519083901b6001600160e01b03191681526114f39190600401612fbd565b600060405180830381600087803b15801561150d57600080fd5b505af1158015611521573d6000803e3d6000fd5b50505050806001600160a01b0316637b6add86604051806101a001604052806001600381111561155357611553612fa7565b60ff16815260006020820181905260408083018290526060830182905260016080840181905260a0840183905260c0840183905260e08085018490526101008501849052610120850184905261014085019390935261016084018190526101809093019290925290519083901b6001600160e01b03191681526115d99190600401612fbd565b600060405180830381600087803b1580156115f357600080fd5b505af11580156107b8573d6000803e3d6000fd5b604080516101608101825260028082526020820152600081830181905261012c60608301526008608083015260a0820181905260c0820181905260fa60e083015261010082018190526101208201819052610140820152905163982d778d60e01b81526001600160a01b0383169163982d778d9161168891906004016130af565b600060405180830381600087803b1580156116a257600080fd5b505af11580156116b6573d6000803e3d6000fd5b505060408051610160810182526001808252602082018190526000828401819052606083018190526080830181905260a0830181905260c0830181905260e083018190526101008301819052610120830152610140820152905163982d778d60e01b81526001600160a01b038516935063982d778d925061173a91906004016130af565b600060405180830381600087803b15801561175457600080fd5b505af1158015611768573d6000803e3d6000fd5b5050604080516101608101825260018082526020820181905260008284018190526060830181905260808301819052601960a084015260c0830181905260e083018190526101008301819052610120830152610140820152905163982d778d60e01b81526001600160a01b038516935063982d778d92506115d991906004016130af565b60005b81518160ff16101561035e5761180361193e565b818160ff1681518110611818576118186127bf565b602002602001015160038260ff1660028110611836576118366127bf565b0180546001600160a01b0319166001600160a01b03929092169190911790558061185f81612b28565b9150506117ef565b60006118756002600f61317e565b60ff16905060005b600860ff8216101561035e578060ff16600114806118ab57506118a2600260086127a0565b60ff168160ff16145b6119365760008054604080516080810182529283526002602084015261ffff85168382015260ff841660608401525163d74de07560e01b81526001600160a01b039091169163d74de075916119039190600401612b5a565b600060405180830381600087803b15801561191d57600080fd5b505af1158015611931573d6000803e3d6000fd5b505050505b60010161187d565b60008060009054906101000a90046001600160a01b03166001600160a01b031663422f7e1d6040518163ffffffff1660e01b815260040161010060405180830381865afa158015611993573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906119b791906131a0565b604001516119c690600161280d565b90506000806119d483611ef1565b9150915060008360ff166001036119ed57506002611a0a565b6119f96002600f61317e565b611a0490600161280d565b60ff1690505b600080546040805160c08101825261ffff8516815260208101939093526001600160a01b0390911691630f4c47cb9181016002611a4881600f61317e565b611a5291906127a0565b60ff9081168252600860208084019190915288821660408085019190915288831660609485015280516001600160e01b031960e088901b168152855161ffff90811660048301529286015183166024820152908501518316604482015292840151909116606483015260808301518116608483015260a09092015190911660a482015260c401600060405180830381600087803b158015611af257600080fd5b505af1158015611b06573d6000803e3d6000fd5b50506000546040805160808101825260ff8981168252600160208301528881168284015287166060820152905163d74de07560e01b81526001600160a01b03909216935063d74de0759250611b5d91600401612b5a565b600060405180830381600087803b158015611b7757600080fd5b505af1158015611b8b573d6000803e3d6000fd5b505050508260ff16600003611ba35760029250611bb2565b611baf6003600f6127a0565b92505b6000546040805160808101825260ff87811682526004602083018190529087168284015260016060830152915163143ca15f60e01b81526001600160a01b039093169263143ca15f92611c06929101612b5a565b600060405180830381600087803b158015611c2057600080fd5b505af1158015611c34573d6000803e3d6000fd5b50506000546040805160808101825260ff8981168252600460208301528816918101919091526001600160a01b03909116925063143ca15f915060608101611c7e600260086127a0565b60ff1690526040516001600160e01b031960e084901b168152611ca49190600401612b5a565b600060405180830381600087803b158015611cbe57600080fd5b505af1158015611cd2573d6000803e3d6000fd5b50505050600080600184611ce691906127a0565b60ff1690506000808290508760ff16600103611d09576000935060029150611d2c565b611d156001600f6127a0565b60ff169350611d266003600f6127a0565b60ff1691505b60008054604080516080810182529283526003602084015261ffff80881684830152861660608401525163d74de07560e01b81526001600160a01b039091169163d74de07591611d7f9190600401612b5a565b600060405180830381600087803b158015611d9957600080fd5b505af1158015611dad573d6000803e3d6000fd5b50506000546040805160808101825260ff8d1681526005602082015261ffff8088168284015286166060820152905163143ca15f60e01b81526001600160a01b03909216935063143ca15f9250611e0691600401612b5a565b600060405180830381600087803b158015611e2057600080fd5b505af1158015611e34573d6000803e3d6000fd5b50505050611e696040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b60ff89168082526003602083015262010000176040808301829052600054905163f8613b5960e01b81526001600160a01b039091169063f8613b5990611eb3908590600401612ad6565b600060405180830381600087803b158015611ecd57600080fd5b505af1158015611ee1573d6000803e3d6000fd5b5050505050505050505050505050565b6000808260ff16600103611f0b5750600092600392509050565b611f176002600f6127a0565b9360039350915050565b6105508061326a83390190565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715611f6657611f66611f2e565b60405290565b604051608081016001600160401b0381118282101715611f6657611f66611f2e565b6040516101a081016001600160401b0381118282101715611f6657611f66611f2e565b60405161016081016001600160401b0381118282101715611f6657611f66611f2e565b604080519081016001600160401b0381118282101715611f6657611f66611f2e565b60405160a081016001600160401b0381118282101715611f6657611f66611f2e565b60405161020081016001600160401b0381118282101715611f6657611f66611f2e565b604051601f8201601f191681016001600160401b038111828210171561206357612063611f2e565b604052919050565b61ffff811681146102aa57600080fd5b80356120868161206b565b919050565b60ff811681146102aa57600080fd5b80356120868161208b565b600060c082840312156120b757600080fd5b6120bf611f44565b82356120ca8161206b565b815260208301356120da8161206b565b602082015260408301356120ed8161208b565b604082015260608301356121008161208b565b606082015260808301356121138161206b565b608082015260a08301356121268161206b565b60a08201529392505050565b60006080828403121561214457600080fd5b61214c611f6c565b905081356121598161208b565b815260208201356121698161208b565b6020820152604082013561217c8161206b565b6040820152606082013561218f8161206b565b606082015292915050565b6000608082840312156121ac57600080fd5b6106f78383612132565b80151581146102aa57600080fd5b8035612086816121b6565b60006101a082840312156121e257600080fd5b6121ea611f8e565b6121f38361209a565b81526122016020840161207b565b60208201526122126040840161209a565b60408201526122236060840161209a565b60608201526122346080840161209a565b608082015261224560a0840161209a565b60a082015261225660c0840161209a565b60c082015261226760e0840161209a565b60e082015261010061227a81850161209a565b9082015261012061228c84820161209a565b9082015261014061229e8482016121c4565b908201526101606122b08482016121c4565b908201526101806122c28482016121c4565b908201529392505050565b600061016082840312156122e057600080fd5b6122e8611fb1565b6122f18361209a565b81526122ff6020840161209a565b60208201526123106040840161207b565b60408201526123216060840161207b565b60608201526123326080840161209a565b608082015261234360a0840161209a565b60a082015261235460c0840161209a565b60c082015261236560e0840161209a565b60e082015261010061237881850161209a565b9082015261012061238a8482016121c4565b908201526101406122c28482016121c4565b6001600160a01b03811681146102aa57600080fd5b6000602082840312156123c357600080fd5b81356106f78161239c565b60006001600160401b038211156123e7576123e7611f2e565b5060051b60200190565b63ffffffff811681146102aa57600080fd5b600082601f83011261241457600080fd5b81356020612429612424836123ce565b61203b565b8083825260208201915060208460051b87010193508684111561244b57600080fd5b602086015b848110156124705780356124638161208b565b8352918301918301612450565b509695505050505050565b600082601f83011261248c57600080fd5b81356001600160401b038111156124a5576124a5611f2e565b6124b8601f8201601f191660200161203b565b8181528460208386010111156124cd57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f8301126124fb57600080fd5b8135602061250b612424836123ce565b82815260059290921b8401810191818101908684111561252a57600080fd5b8286015b848110156124705780356001600160401b0381111561254d5760008081fd5b61255b8986838b010161247b565b84525091830191830161252e565b60008060006060848603121561257e57600080fd5b83356001600160401b038082111561259557600080fd5b818601915086601f8301126125a957600080fd5b813560206125b9612424836123ce565b82815260059290921b8401810191818101908a8411156125d857600080fd5b948201945b838610156125ff5785356125f0816123f1565b825294820194908201906125dd565b9750508701359250508082111561261557600080fd5b61262187838801612403565b9350604086013591508082111561263757600080fd5b50612644868287016124ea565b9150509250925092565b6000806040838503121561266157600080fd5b823561266c8161239c565b915060208301356001600160401b0381111561268757600080fd5b6126938582860161247b565b9150509250929050565b6000602082840312156126af57600080fd5b81356106f78161208b565b6000604082840312156126cc57600080fd5b6126d4611fd4565b82356126df8161206b565b815260208301356126ef8161206b565b60208201529392505050565b6001600160401b03811681146102aa57600080fd5b600060a0828403121561272257600080fd5b61272a611ff6565b82356127358161208b565b815260208301356127458161208b565b60208201526040830135612758816126fb565b6040820152606083013561276b816126fb565b6060820152608083013561277e8161208b565b60808201529392505050565b634e487b7160e01b600052601160045260246000fd5b60ff82811682821603908111156127b9576127b961278a565b92915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b600060ff8316806127fe576127fe6127d5565b8060ff84160691505092915050565b60ff81811683821601908111156127b9576127b961278a565b80516120868161206b565b80516120868161208b565b8051612086816123f1565b600060c0828403121561285957600080fd5b612861611f44565b825161286c8161206b565b8152602083015161287c8161206b565b6020820152604083015161288f8161208b565b604082015260608301516128a28161208b565b606082015260808301516128b58161208b565b608082015260a0830151612126816123f1565b600061020082840312156128db57600080fd5b6128e3612018565b6128ec83612826565b81526128fa60208401612826565b602082015261290b60408401612831565b604082015261291c60608401612831565b606082015261292d60808401612826565b608082015261293e60a08401612826565b60a082015261294f60c08401612826565b60c082015261296060e08401612826565b60e0820152610100612973818501612831565b90820152610120612985848201612831565b90820152610140612997848201612831565b908201526101606129a9848201612831565b908201526101806129bb848201612831565b908201526101a06129cd848201612831565b908201526101c06129df848201612831565b908201526101e06122c2848201612831565b8051612086816126fb565b8051612086816121b6565b60006101608284031215612a1a57600080fd5b612a22611fb1565b612a2b83612826565b8152612a3960208401612826565b6020820152612a4a60408401612831565b6040820152612a5b60608401612831565b6060820152612a6c60808401612831565b6080820152612a7d60a08401612831565b60a0820152612a8e60c0840161283c565b60c0820152612a9f60e084016129f1565b60e0820152610100612ab28185016129f1565b90820152610120612ac4848201612831565b908201526101406122c28482016129fc565b600060a08201905060ff835116825260ff602084015116602083015260408301516001600160401b038082166040850152806060860151166060850152505060ff608084015116608083015292915050565b600060ff821660ff8103612b3e57612b3e61278a565b60010192915050565b808201808211156127b9576127b961278a565b608081016127b9828460ff815116825260ff6020820151166020830152604081015161ffff808216604085015280606084015116606085015250505050565b81811015612bb35760208186018101518583015201612b99565b506000920191825250919050565b600060408284031215612bd357600080fd5b612bdb611fd4565b8251612be68161206b565b815260208301516126ef8161206b565b600060808284031215612c0857600080fd5b612c10611f6c565b90508151612c1d8161208b565b81526020820151612c2d8161208b565b60208201526040820151612c408161206b565b6040820152606082015161218f8161206b565b600060808284031215612c6557600080fd5b6106f78383612bf6565b600060a08284031215612c8157600080fd5b612c89611ff6565b8251612c948161208b565b81526020830151612ca48161208b565b60208201526040830151612cb7816126fb565b60408201526060830151612cca816126fb565b6060820152608083015161277e8161208b565b600060c08284031215612cef57600080fd5b612cf7611f44565b8251612d028161206b565b81526020830151612d128161206b565b60208201526040830151612d258161208b565b60408201526060830151612d388161208b565b60608201526080830151612d4b8161206b565b608082015260a08301516121268161206b565b60006101a08284031215612d7157600080fd5b612d79611f8e565b612d8283612831565b8152612d9060208401612826565b6020820152612da160408401612831565b6040820152612db260608401612831565b6060820152612dc360808401612831565b6080820152612dd460a08401612831565b60a0820152612de560c08401612831565b60c0820152612df660e08401612831565b60e0820152610100612e09818501612831565b90820152610120612e1b848201612831565b90820152610140612e2d8482016129fc565b90820152610160612e3f8482016129fc565b908201526101806122c28482016129fc565b60006101608284031215612e6457600080fd5b612e6c611fb1565b612e7583612831565b8152612e8360208401612831565b6020820152612e9460408401612826565b6040820152612ea560608401612826565b6060820152612eb660808401612831565b6080820152612ec760a08401612831565b60a0820152612ed860c08401612831565b60c0820152612ee960e08401612831565b60e0820152610100612efc818501612831565b90820152610120612ac48482016129fc565b60006020808385031215612f2157600080fd5b82516001600160401b03811115612f3757600080fd5b8301601f81018513612f4857600080fd5b8051612f56612424826123ce565b81815260059190911b82018301908381019087831115612f7557600080fd5b928401925b82841015612f9c578351612f8d8161239c565b82529284019290840190612f7a565b979650505050505050565b634e487b7160e01b600052602160045260246000fd5b815160ff1681526101a081016020830151612fde602084018261ffff169052565b506040830151612ff3604084018260ff169052565b506060830151613008606084018260ff169052565b50608083015161301d608084018260ff169052565b5060a083015161303260a084018260ff169052565b5060c083015161304760c084018260ff169052565b5060e083015161305c60e084018260ff169052565b506101008381015160ff908116918401919091526101208085015190911690830152610140808401511515908301526101608084015115159083015261018080840151801515828501525b505092915050565b815160ff168152610160810160208301516130cf602084018260ff169052565b5060408301516130e5604084018261ffff169052565b5060608301516130fb606084018261ffff169052565b506080830151613110608084018260ff169052565b5060a083015161312560a084018260ff169052565b5060c083015161313a60c084018260ff169052565b5060e083015161314f60e084018260ff169052565b506101008381015160ff16908301526101208084015115159083015261014080840151801515828501526130a7565b600060ff831680613191576131916127d5565b8060ff84160491505092915050565b60006101008083850312156131b457600080fd5b604051908101906001600160401b03821181831017156131d6576131d6611f2e565b81604052835191506131e78261206b565b8181526131f660208501612826565b602082015261320760408501612831565b604082015261321860608501612831565b606082015261322960808501612831565b608082015261323a60a085016129fc565b60a082015261324b60c085016129fc565b60c082015261325c60e0850161283c565b60e082015294935050505056fe60806040526040516105503803806105508339810160408190526100229161030d565b818161002e8282610042565b5061003a9050836100a1565b5050506103f9565b61004b8261010f565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115610095576100908282610153565b505050565b61009d6101ca565b5050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6100e1600080516020610530833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a161010c816101eb565b50565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080846001600160a01b03168460405161017091906103dd565b600060405180830381855af49150503d80600081146101ab576040519150601f19603f3d011682016040523d82523d6000602084013e6101b0565b606091505b5090925090506101c185838361022f565b95945050505050565b34156101e95760405163b398979f60e01b815260040160405180910390fd5b565b6001600160a01b03811661021a57604051633173bdd160e11b8152600060048201526024015b60405180910390fd5b80600080516020610530833981519152610132565b6060826102445761023f8261028e565b610287565b815115801561025b57506001600160a01b0384163b155b1561028457604051639996b31560e01b81526001600160a01b0385166004820152602401610211565b50805b9392505050565b80511561029e5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b03811681146102ce57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103045781810151838201526020016102ec565b50506000910152565b60008060006060848603121561032257600080fd5b61032b846102b7565b9250610339602085016102b7565b60408501519092506001600160401b038082111561035657600080fd5b818601915086601f83011261036a57600080fd5b81518181111561037c5761037c6102d3565b604051601f8201601f19908116603f011681019083821181831017156103a4576103a46102d3565b816040528281528960208487010111156103bd57600080fd5b6103ce8360208301602088016102e9565b80955050505050509250925092565b600082516103ef8184602087016102e9565b9190910192915050565b610128806104086000396000f3fe608060405233301480602757506012603a565b6001600160a01b0316336001600160a01b0316145b156033576031606d565b005b603130607b565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b6079607560a0565b60ad565b565b60603660008037600080366000855afa3d6000803e808015609b573d6000f35b3d6000fd5b600060a860cb565b905090565b3660008037600080366000845af43d6000803e808015609b573d6000f35b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc605e56fea264697066735822122057dec10b14e1b5a2675fb25a09f631b5267e5914398ef99beeb1950e80f3910b64736f6c63430008190033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103a2646970667358221220ed35e03d4a85a613c29405b855accf95e955a8a39a43b37c68b1188ad0896d6064736f6c63430008190033",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// GetPlayerAddress is a free data retrieval call binding the contract method 0xe2ce0beb.
//
// Solidity: function getPlayerAddress(uint8 playerId) view returns(address)
func (_Contract *ContractCaller) GetPlayerAddress(opts *bind.CallOpts, playerId uint8) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getPlayerAddress", playerId)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetPlayerAddress is a free data retrieval call binding the contract method 0xe2ce0beb.
//
// Solidity: function getPlayerAddress(uint8 playerId) view returns(address)
func (_Contract *ContractSession) GetPlayerAddress(playerId uint8) (common.Address, error) {
	return _Contract.Contract.GetPlayerAddress(&_Contract.CallOpts, playerId)
}

// GetPlayerAddress is a free data retrieval call binding the contract method 0xe2ce0beb.
//
// Solidity: function getPlayerAddress(uint8 playerId) view returns(address)
func (_Contract *ContractCallerSession) GetPlayerAddress(playerId uint8) (common.Address, error) {
	return _Contract.Contract.GetPlayerAddress(&_Contract.CallOpts, playerId)
}

// GetPlayerId is a free data retrieval call binding the contract method 0xc4ae16a8.
//
// Solidity: function getPlayerId(address playerAddress) view returns(uint8)
func (_Contract *ContractCaller) GetPlayerId(opts *bind.CallOpts, playerAddress common.Address) (uint8, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getPlayerId", playerAddress)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetPlayerId is a free data retrieval call binding the contract method 0xc4ae16a8.
//
// Solidity: function getPlayerId(address playerAddress) view returns(uint8)
func (_Contract *ContractSession) GetPlayerId(playerAddress common.Address) (uint8, error) {
	return _Contract.Contract.GetPlayerId(&_Contract.CallOpts, playerAddress)
}

// GetPlayerId is a free data retrieval call binding the contract method 0xc4ae16a8.
//
// Solidity: function getPlayerId(address playerAddress) view returns(uint8)
func (_Contract *ContractCallerSession) GetPlayerId(playerAddress common.Address) (uint8, error) {
	return _Contract.Contract.GetPlayerId(&_Contract.CallOpts, playerAddress)
}

// LastTickBlockNumber is a free data retrieval call binding the contract method 0xff280198.
//
// Solidity: function lastTickBlockNumber() view returns(uint256)
func (_Contract *ContractCaller) LastTickBlockNumber(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "lastTickBlockNumber")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// LastTickBlockNumber is a free data retrieval call binding the contract method 0xff280198.
//
// Solidity: function lastTickBlockNumber() view returns(uint256)
func (_Contract *ContractSession) LastTickBlockNumber() (*big.Int, error) {
	return _Contract.Contract.LastTickBlockNumber(&_Contract.CallOpts)
}

// LastTickBlockNumber is a free data retrieval call binding the contract method 0xff280198.
//
// Solidity: function lastTickBlockNumber() view returns(uint256)
func (_Contract *ContractCallerSession) LastTickBlockNumber() (*big.Int, error) {
	return _Contract.Contract.LastTickBlockNumber(&_Contract.CallOpts)
}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Contract *ContractCaller) Proxy(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "proxy")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Contract *ContractSession) Proxy() (common.Address, error) {
	return _Contract.Contract.Proxy(&_Contract.CallOpts)
}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Contract *ContractCallerSession) Proxy() (common.Address, error) {
	return _Contract.Contract.Proxy(&_Contract.CallOpts)
}

// AddBuildingPrototype is a paid mutator transaction binding the contract method 0x982d778d.
//
// Solidity: function addBuildingPrototype((uint8,uint8,uint16,uint16,uint8,uint8,uint8,uint8,uint8,bool,bool) action) returns()
func (_Contract *ContractTransactor) AddBuildingPrototype(opts *bind.TransactOpts, action ActionDataAddBuildingPrototype) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "addBuildingPrototype", action)
}

// AddBuildingPrototype is a paid mutator transaction binding the contract method 0x982d778d.
//
// Solidity: function addBuildingPrototype((uint8,uint8,uint16,uint16,uint8,uint8,uint8,uint8,uint8,bool,bool) action) returns()
func (_Contract *ContractSession) AddBuildingPrototype(action ActionDataAddBuildingPrototype) (*types.Transaction, error) {
	return _Contract.Contract.AddBuildingPrototype(&_Contract.TransactOpts, action)
}

// AddBuildingPrototype is a paid mutator transaction binding the contract method 0x982d778d.
//
// Solidity: function addBuildingPrototype((uint8,uint8,uint16,uint16,uint8,uint8,uint8,uint8,uint8,bool,bool) action) returns()
func (_Contract *ContractTransactorSession) AddBuildingPrototype(action ActionDataAddBuildingPrototype) (*types.Transaction, error) {
	return _Contract.Contract.AddBuildingPrototype(&_Contract.TransactOpts, action)
}

// AddPlayer is a paid mutator transaction binding the contract method 0x0f4c47cb.
//
// Solidity: function addPlayer((uint16,uint16,uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactor) AddPlayer(opts *bind.TransactOpts, action ActionDataAddPlayer) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "addPlayer", action)
}

// AddPlayer is a paid mutator transaction binding the contract method 0x0f4c47cb.
//
// Solidity: function addPlayer((uint16,uint16,uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractSession) AddPlayer(action ActionDataAddPlayer) (*types.Transaction, error) {
	return _Contract.Contract.AddPlayer(&_Contract.TransactOpts, action)
}

// AddPlayer is a paid mutator transaction binding the contract method 0x0f4c47cb.
//
// Solidity: function addPlayer((uint16,uint16,uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactorSession) AddPlayer(action ActionDataAddPlayer) (*types.Transaction, error) {
	return _Contract.Contract.AddPlayer(&_Contract.TransactOpts, action)
}

// AddUnitPrototype is a paid mutator transaction binding the contract method 0x7b6add86.
//
// Solidity: function addUnitPrototype((uint8,uint16,uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8,bool,bool,bool) action) returns()
func (_Contract *ContractTransactor) AddUnitPrototype(opts *bind.TransactOpts, action ActionDataAddUnitPrototype) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "addUnitPrototype", action)
}

// AddUnitPrototype is a paid mutator transaction binding the contract method 0x7b6add86.
//
// Solidity: function addUnitPrototype((uint8,uint16,uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8,bool,bool,bool) action) returns()
func (_Contract *ContractSession) AddUnitPrototype(action ActionDataAddUnitPrototype) (*types.Transaction, error) {
	return _Contract.Contract.AddUnitPrototype(&_Contract.TransactOpts, action)
}

// AddUnitPrototype is a paid mutator transaction binding the contract method 0x7b6add86.
//
// Solidity: function addUnitPrototype((uint8,uint16,uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8,bool,bool,bool) action) returns()
func (_Contract *ContractTransactorSession) AddUnitPrototype(action ActionDataAddUnitPrototype) (*types.Transaction, error) {
	return _Contract.Contract.AddUnitPrototype(&_Contract.TransactOpts, action)
}

// AssignUnit is a paid mutator transaction binding the contract method 0xf8613b59.
//
// Solidity: function assignUnit((uint8,uint8,uint64,uint64,uint8) action) returns()
func (_Contract *ContractTransactor) AssignUnit(opts *bind.TransactOpts, action ActionDataAssignUnit) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "assignUnit", action)
}

// AssignUnit is a paid mutator transaction binding the contract method 0xf8613b59.
//
// Solidity: function assignUnit((uint8,uint8,uint64,uint64,uint8) action) returns()
func (_Contract *ContractSession) AssignUnit(action ActionDataAssignUnit) (*types.Transaction, error) {
	return _Contract.Contract.AssignUnit(&_Contract.TransactOpts, action)
}

// AssignUnit is a paid mutator transaction binding the contract method 0xf8613b59.
//
// Solidity: function assignUnit((uint8,uint8,uint64,uint64,uint8) action) returns()
func (_Contract *ContractTransactorSession) AssignUnit(action ActionDataAssignUnit) (*types.Transaction, error) {
	return _Contract.Contract.AssignUnit(&_Contract.TransactOpts, action)
}

// CreateUnit is a paid mutator transaction binding the contract method 0x143ca15f.
//
// Solidity: function createUnit((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactor) CreateUnit(opts *bind.TransactOpts, action ActionDataCreateUnit) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "createUnit", action)
}

// CreateUnit is a paid mutator transaction binding the contract method 0x143ca15f.
//
// Solidity: function createUnit((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractSession) CreateUnit(action ActionDataCreateUnit) (*types.Transaction, error) {
	return _Contract.Contract.CreateUnit(&_Contract.TransactOpts, action)
}

// CreateUnit is a paid mutator transaction binding the contract method 0x143ca15f.
//
// Solidity: function createUnit((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactorSession) CreateUnit(action ActionDataCreateUnit) (*types.Transaction, error) {
	return _Contract.Contract.CreateUnit(&_Contract.TransactOpts, action)
}

// ExecuteMultipleActions is a paid mutator transaction binding the contract method 0xd0b36171.
//
// Solidity: function executeMultipleActions(uint32[] actionIds, uint8[] actionCount, bytes[] actionData) returns()
func (_Contract *ContractTransactor) ExecuteMultipleActions(opts *bind.TransactOpts, actionIds []uint32, actionCount []uint8, actionData [][]byte) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "executeMultipleActions", actionIds, actionCount, actionData)
}

// ExecuteMultipleActions is a paid mutator transaction binding the contract method 0xd0b36171.
//
// Solidity: function executeMultipleActions(uint32[] actionIds, uint8[] actionCount, bytes[] actionData) returns()
func (_Contract *ContractSession) ExecuteMultipleActions(actionIds []uint32, actionCount []uint8, actionData [][]byte) (*types.Transaction, error) {
	return _Contract.Contract.ExecuteMultipleActions(&_Contract.TransactOpts, actionIds, actionCount, actionData)
}

// ExecuteMultipleActions is a paid mutator transaction binding the contract method 0xd0b36171.
//
// Solidity: function executeMultipleActions(uint32[] actionIds, uint8[] actionCount, bytes[] actionData) returns()
func (_Contract *ContractTransactorSession) ExecuteMultipleActions(actionIds []uint32, actionCount []uint8, actionData [][]byte) (*types.Transaction, error) {
	return _Contract.Contract.ExecuteMultipleActions(&_Contract.TransactOpts, actionIds, actionCount, actionData)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _logic, bytes data) returns()
func (_Contract *ContractTransactor) Initialize(opts *bind.TransactOpts, _logic common.Address, data []byte) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "initialize", _logic, data)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _logic, bytes data) returns()
func (_Contract *ContractSession) Initialize(_logic common.Address, data []byte) (*types.Transaction, error) {
	return _Contract.Contract.Initialize(&_Contract.TransactOpts, _logic, data)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _logic, bytes data) returns()
func (_Contract *ContractTransactorSession) Initialize(_logic common.Address, data []byte) (*types.Transaction, error) {
	return _Contract.Contract.Initialize(&_Contract.TransactOpts, _logic, data)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xeaba9837.
//
// Solidity: function initialize((uint16,uint16) action) returns()
func (_Contract *ContractTransactor) Initialize0(opts *bind.TransactOpts, action ActionDataInitialize) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "initialize0", action)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xeaba9837.
//
// Solidity: function initialize((uint16,uint16) action) returns()
func (_Contract *ContractSession) Initialize0(action ActionDataInitialize) (*types.Transaction, error) {
	return _Contract.Contract.Initialize0(&_Contract.TransactOpts, action)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xeaba9837.
//
// Solidity: function initialize((uint16,uint16) action) returns()
func (_Contract *ContractTransactorSession) Initialize0(action ActionDataInitialize) (*types.Transaction, error) {
	return _Contract.Contract.Initialize0(&_Contract.TransactOpts, action)
}

// PlaceBuilding is a paid mutator transaction binding the contract method 0xd74de075.
//
// Solidity: function placeBuilding((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactor) PlaceBuilding(opts *bind.TransactOpts, action ActionDataPlaceBuilding) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "placeBuilding", action)
}

// PlaceBuilding is a paid mutator transaction binding the contract method 0xd74de075.
//
// Solidity: function placeBuilding((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractSession) PlaceBuilding(action ActionDataPlaceBuilding) (*types.Transaction, error) {
	return _Contract.Contract.PlaceBuilding(&_Contract.TransactOpts, action)
}

// PlaceBuilding is a paid mutator transaction binding the contract method 0xd74de075.
//
// Solidity: function placeBuilding((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactorSession) PlaceBuilding(action ActionDataPlaceBuilding) (*types.Transaction, error) {
	return _Contract.Contract.PlaceBuilding(&_Contract.TransactOpts, action)
}

// Purge is a paid mutator transaction binding the contract method 0x70f0c351.
//
// Solidity: function purge() returns()
func (_Contract *ContractTransactor) Purge(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "purge")
}

// Purge is a paid mutator transaction binding the contract method 0x70f0c351.
//
// Solidity: function purge() returns()
func (_Contract *ContractSession) Purge() (*types.Transaction, error) {
	return _Contract.Contract.Purge(&_Contract.TransactOpts)
}

// Purge is a paid mutator transaction binding the contract method 0x70f0c351.
//
// Solidity: function purge() returns()
func (_Contract *ContractTransactorSession) Purge() (*types.Transaction, error) {
	return _Contract.Contract.Purge(&_Contract.TransactOpts)
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_Contract *ContractTransactor) Start(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "start")
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_Contract *ContractSession) Start() (*types.Transaction, error) {
	return _Contract.Contract.Start(&_Contract.TransactOpts)
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_Contract *ContractTransactorSession) Start() (*types.Transaction, error) {
	return _Contract.Contract.Start(&_Contract.TransactOpts)
}

// Tick is a paid mutator transaction binding the contract method 0x3eaf5d9f.
//
// Solidity: function tick() returns()
func (_Contract *ContractTransactor) Tick(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "tick")
}

// Tick is a paid mutator transaction binding the contract method 0x3eaf5d9f.
//
// Solidity: function tick() returns()
func (_Contract *ContractSession) Tick() (*types.Transaction, error) {
	return _Contract.Contract.Tick(&_Contract.TransactOpts)
}

// Tick is a paid mutator transaction binding the contract method 0x3eaf5d9f.
//
// Solidity: function tick() returns()
func (_Contract *ContractTransactorSession) Tick() (*types.Transaction, error) {
	return _Contract.Contract.Tick(&_Contract.TransactOpts)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Contract *ContractTransactor) Fallback(opts *bind.TransactOpts, calldata []byte) (*types.Transaction, error) {
	return _Contract.contract.RawTransact(opts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Contract *ContractSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Contract.Contract.Fallback(&_Contract.TransactOpts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Contract *ContractTransactorSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Contract.Contract.Fallback(&_Contract.TransactOpts, calldata)
}

// ContractActionExecutedIterator is returned from FilterActionExecuted and is used to iterate over the raw logs and unpacked data for ActionExecuted events raised by the Contract contract.
type ContractActionExecutedIterator struct {
	Event *ContractActionExecuted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractActionExecutedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractActionExecuted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractActionExecuted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractActionExecutedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractActionExecutedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractActionExecuted represents a ActionExecuted event raised by the Contract contract.
type ContractActionExecuted struct {
	ActionId [4]byte
	Data     []byte
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterActionExecuted is a free log retrieval operation binding the contract event 0x45065f461aede1b904079823f6d858e465fa8c25fcf1654bb4a89e6dee320a1a.
//
// Solidity: event ActionExecuted(bytes4 actionId, bytes data)
func (_Contract *ContractFilterer) FilterActionExecuted(opts *bind.FilterOpts) (*ContractActionExecutedIterator, error) {

	logs, sub, err := _Contract.contract.FilterLogs(opts, "ActionExecuted")
	if err != nil {
		return nil, err
	}
	return &ContractActionExecutedIterator{contract: _Contract.contract, event: "ActionExecuted", logs: logs, sub: sub}, nil
}

// WatchActionExecuted is a free log subscription operation binding the contract event 0x45065f461aede1b904079823f6d858e465fa8c25fcf1654bb4a89e6dee320a1a.
//
// Solidity: event ActionExecuted(bytes4 actionId, bytes data)
func (_Contract *ContractFilterer) WatchActionExecuted(opts *bind.WatchOpts, sink chan<- *ContractActionExecuted) (event.Subscription, error) {

	logs, sub, err := _Contract.contract.WatchLogs(opts, "ActionExecuted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractActionExecuted)
				if err := _Contract.contract.UnpackLog(event, "ActionExecuted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseActionExecuted is a log parse operation binding the contract event 0x45065f461aede1b904079823f6d858e465fa8c25fcf1654bb4a89e6dee320a1a.
//
// Solidity: event ActionExecuted(bytes4 actionId, bytes data)
func (_Contract *ContractFilterer) ParseActionExecuted(log types.Log) (*ContractActionExecuted, error) {
	event := new(ContractActionExecuted)
	if err := _Contract.contract.UnpackLog(event, "ActionExecuted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the Contract contract.
type ContractInitializedIterator struct {
	Event *ContractInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractInitialized represents a Initialized event raised by the Contract contract.
type ContractInitialized struct {
	Version uint64
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_Contract *ContractFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractInitializedIterator, error) {

	logs, sub, err := _Contract.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractInitializedIterator{contract: _Contract.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_Contract *ContractFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractInitialized) (event.Subscription, error) {

	logs, sub, err := _Contract.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractInitialized)
				if err := _Contract.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_Contract *ContractFilterer) ParseInitialized(log types.Log) (*ContractInitialized, error) {
	event := new(ContractInitialized)
	if err := _Contract.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
