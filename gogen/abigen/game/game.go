// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ActionDataCreateUnit is an auto generated low-level Go binding around an user-defined struct.
type ActionDataCreateUnit struct {
	PlayerId uint8
	UnitType uint8
	X        uint16
	Y        uint16
}

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"fallback\",\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"archTick\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"createUnit\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_CreateUnit\",\"components\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"unitType\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"x\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"y\",\"type\":\"uint16\",\"internalType\":\"uint16\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"getPlayerAddress\",\"inputs\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getPlayerId\",\"inputs\":[{\"name\":\"playerAddress\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"_logic\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"data\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"lastTickBlockNumber\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"proxy\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"start\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"tick\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint64\",\"indexed\":false,\"internalType\":\"uint64\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"InvalidInitialization\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"NotInitializing\",\"inputs\":[]}]",
	Bin: "0x6080604052348015600f57600080fd5b50612b9b8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063c4ae16a811610066578063c4ae16a8146100c8578063d1f57894146100f2578063e2ce0beb14610105578063ec55688914610130578063ff2801981461014357610093565b8063143ca15f1461009d5780633eaf5d9f146100b0578063b8546a7d146100b8578063be9a6555146100c0575b61009b61015a565b005b61009b6100ab366004611c50565b6101cf565b61009b61024a565b61009b6105da565b61009b6105e4565b6100db6100d6366004611ce9565b61063f565b60405160ff90911681526020015b60405180910390f35b61009b610100366004611d06565b6106ac565b610118610113366004611dad565b61081e565b6040516001600160a01b0390911681526020016100e9565b600054610118906001600160a01b031681565b61014c60025481565b6040519081526020016100e9565b6000546001600160a01b03166101b75760405162461bcd60e51b815260206004820152601d60248201527f4172636850726f787941646d696e3a2070726f7879206e6f742073657400000060448201526064015b60405180910390fd5b6000546101cc906001600160a01b0316610851565b50565b805160036101de600183611de0565b60ff16600281106101f1576101f1611df9565b01546001600160a01b0316331461023d5760405162461bcd60e51b815260206004820152601060248201526f23b0b6b29d1037b7363ca83630bcb2b960811b60448201526064016101ae565b61024682610877565b5050565b6000306127105a61025b9190611e0f565b60408051600481526024810182526020810180516001600160e01b031663b8546a7d60e01b179052905161028f9190611e22565b60006040518083038160008787f1925050503d80600081146102cd576040519150601f19603f3d011682016040523d82523d6000602084013e6102d2565b606091505b50509050806102e057600080fd5b6002600154036102ed5750565b60015b60028160ff1611610246576127105a1015610309575050565b600061031482610b89565b6000805460405163eed886d960e01b815260ff841660048201526001602482015292935090916001600160a01b039091169063eed886d99060440160c060405180830381865afa15801561036c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103909190611e80565b6080015190508060ff166000036103a85750506105c8565b600080546040516301473f3960e21b815260ff861660048201526001600160a01b039091169063051cfce4906024016102a060405180830381865afa1580156103f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104199190611f28565b6101e00151905060045b8160ff168160ff16116105c3576127105a101561044257505050505050565b60008054604051623be62d60e11b815260ff8089166004830152841660248201526001600160a01b03909116906277cc5a9060440161016060405180830381865afa158015610495573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104b991906120dd565b606081015190915060ff166003146104d157506105b1565b60006104e08260e00151610ba7565b50909150600090508160028111156104fa576104fa6121ac565b036105ae576040805160a081018252600091810182905260608101829052608081019190915260ff888116825284166020820152610539876001610bdc565b6001600160401b0316604080830191909152600054905163f8613b5960e01b81526001600160a01b039091169063f8613b599061057a9084906004016121c2565b600060405180830381600087803b15801561059457600080fd5b505af11580156105a8573d6000803e3d6000fd5b50505050505b50505b806105bb81612214565b915050610423565b505050505b806105d281612214565b9150506102f0565b6105e2610bf0565b565b6003600001546001600160a01b031633146106375760405162461bcd60e51b815260206004820152601360248201527247616d653a206f6e6c79506c617965724f6e6560681b60448201526064016101ae565b6105e2610d51565b6000805b60028160ff1610156106a357826001600160a01b031660038260ff166002811061066f5761066f611df9565b01546001600160a01b0316036106915761068a816001612233565b9392505050565b8061069b81612214565b915050610643565b50600092915050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156106f15750825b90506000826001600160401b0316600114801561070d5750303b155b90508115801561071b575080155b156107395760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561076357845460ff60401b1916600160401b1785555b6000308860405161077390611b92565b6001600160a01b03928316815291166020820152606060408201819052600090820152608001604051809103906000f0801580156107b5573d6000803e3d6000fd5b5090506107c181610dac565b6107ca87610e95565b5060018055831561081557845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b6000600361082d600184611de0565b60ff166002811061084057610840611df9565b01546001600160a01b031692915050565b60603660008037600080366000855afa3d6000803e808015610872573d6000f35b3d6000fd5b600460ff16816020015160ff16036108dc5760405162461bcd60e51b815260206004820152602260248201527f47616d653a206f6e6c792066696768746572732063616e206265206372656174604482015261195960f21b60648201526084016101ae565b60005460405163143ca15f60e01b81526001600160a01b039091169063143ca15f9061090c90849060040161224c565b600060405180830381600087803b15801561092657600080fd5b505af115801561093a573d6000803e3d6000fd5b5050505061096f6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b815160ff168082526000546040516301473f3960e21b815260048101929092526001600160a01b03169063051cfce4906024016102a060405180830381865afa1580156109c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109e49190611f28565b6101e0015160ff16602082015281516000906109ff90610b89565b90506000600360ff16846060015161ffff1610158015610a2b5750600460ff16846060015161ffff1611155b15610a4257610a3b826001610bdc565b9050610b0f565b6000600360ff16856060015161ffff161015610a6057506002610a64565b5060035b60008054604051623be62d60e11b815260ff8087166004830152841660248201526001600160a01b03909116906277cc5a9060440161016060405180830381865afa158015610ab7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610adb91906120dd565b60600151905060041960ff821601610aff57610af8846001610bdc565b9250610b0c565b610b098483610edd565b92505b50505b6001600160401b038116604080850191909152600054905163f8613b5960e01b81526001600160a01b039091169063f8613b5990610b519086906004016121c2565b600060405180830381600087803b158015610b6b57600080fd5b505af1158015610b7f573d6000803e3d6000fd5b5050505050505050565b6000610b9660028361228b565b610ba1906001612233565b92915050565b600080808060ff602086901c166002811115610bc557610bc56121ac565b95601086901c65ffffffffffff1695945092505050565b600061068a60018460ff168460ff16610eed565b6002544311610c325760405162461bcd60e51b815260206004820152600e60248201526d185b1c9958591e481d1a58dad95960921b60448201526064016101ae565b600260015403610c9b5760008054604080516370f0c35160e01b815290516001600160a01b03909216926370f0c3519260048084019382900301818387803b158015610c7d57600080fd5b505af1158015610c91573d6000803e3d6000fd5b5050600180555050565b600080546001600160a01b03166127105a610cb69190611e0f565b60408051600481526024810182526020810180516001600160e01b0316633eaf5d9f60e01b1790529051610cea9190611e22565b60006040518083038160008787f1925050503d8060008114610d28576040519150601f19603f3d011682016040523d82523d6000602084013e610d2d565b606091505b505090508015610d3a5750565b6175305a1015610d4c57600260015550565b600080fd5b600080546040805163be9a655560e01b815290516001600160a01b039092169263be9a65559260048084019382900301818387803b158015610d9257600080fd5b505af1158015610da6573d6000803e3d6000fd5b50505050565b6001600160a01b038116610e105760405162461bcd60e51b815260206004820152602560248201527f4172636850726f787941646d696e3a20696e76616c69642070726f7879206164604482015264647265737360d81b60648201526084016101ae565b6000546001600160a01b031615610e735760405162461bcd60e51b815260206004820152602160248201527f4172636850726f787941646d696e3a2070726f787920616c72656164792073656044820152601d60fa1b60648201526084016101ae565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600054610eaa906001600160a01b0316610f2e565b600054610ebf906001600160a01b03166113de565b600054610ed4906001600160a01b03166115c3565b6101cc816115d9565b600061068a60028460ff168460ff165b6000806020856002811115610f0457610f046121ac565b6001600160401b0316901b1760109390931b63ffff0000169290921761ffff919091161792915050565b806001600160a01b031663a5e592f4604051806101c0016040528060006003811115610f5c57610f5c6121ac565b60ff168152609660208201526001604080830182905260046060840181905260646080850152600560a0850152600a60c0850152600f60e080860191909152610100850182905260036101208601526000610140860181905261016086018590526101808601526101a090940192909252519184901b6001600160e01b0319168252610fe99291016122bb565b600060405180830381600087803b15801561100357600080fd5b505af1158015611017573d6000803e3d6000fd5b50505050806001600160a01b031663a5e592f4604051806101c0016040528060026003811115611049576110496121ac565b60ff168152606460208201526001604080830182905260026060840181905260196080850152600560a0850152600060c08501819052600360e0808701919091526101008601839052610120860192909252610140850184905261016085018490526101808501526101a090930191909152519083901b6001600160e01b03191681526110d991906004016122bb565b600060405180830381600087803b1580156110f357600080fd5b505af1158015611107573d6000803e3d6000fd5b50505050806001600160a01b031663a5e592f4604051806101c0016040528060006003811115611139576111396121ac565b60ff16815261012c6020820152600160408083018290526008606084015260966080840152600a60a0840152600060c08401819052600360e080860182905261010086019190915260046101208601819052610140860183905261016086018390526101808601929092526101a090940192909252519184901b6001600160e01b03191682526111ca9291016122bb565b600060405180830381600087803b1580156111e457600080fd5b505af11580156111f8573d6000803e3d6000fd5b50505050806001600160a01b031663a5e592f4604051806101c001604052806001600381111561122a5761122a6121ac565b60ff16815260006020820181905260408083018290526060830182905260016080840181905260a0840183905260c0840183905260e080850184905261010085018490526101208501849052610140850193909352610160840181905261018084018190526101a09093019290925290519083901b6001600160e01b03191681526112b891906004016122bb565b600060405180830381600087803b1580156112d257600080fd5b505af11580156112e6573d6000803e3d6000fd5b50505050806001600160a01b031663a5e592f4604051806101c0016040528060006003811115611318576113186121ac565b60ff16815261012c6020820152600060408083018290526008606084015260966080840152600360a0840181905260c0840183905260e080850182905261010085019190915260016101208501819052610140850184905261016085018190526101808501939093526101a090930191909152519083901b6001600160e01b03191681526113a991906004016122bb565b600060405180830381600087803b1580156113c357600080fd5b505af11580156113d7573d6000803e3d6000fd5b5050505050565b604080516101608101825260028082526020820152600081830181905261012c60608301526008608083015260a0820181905260c0820181905260fa60e083015261010082018190526101208201819052610140820152905163982d778d60e01b81526001600160a01b0383169163982d778d9161145f91906004016123ba565b600060405180830381600087803b15801561147957600080fd5b505af115801561148d573d6000803e3d6000fd5b505060408051610160810182526001808252602082018190526000828401819052606083018190526080830181905260a0830181905260c0830181905260e083018190526101008301819052610120830152610140820152905163982d778d60e01b81526001600160a01b038516935063982d778d925061151191906004016123ba565b600060405180830381600087803b15801561152b57600080fd5b505af115801561153f573d6000803e3d6000fd5b5050604080516101608101825260018082526020820181905260008284018190526060830181905260808301819052601960a084015260c0830181905260e083018190526101008301819052610120830152610140820152905163982d778d60e01b81526001600160a01b038516935063982d778d92506113a991906004016123ba565b6115d081600f600861168b565b6101cc816116dd565b6000818060200190518101906115ef9190612489565b905060005b81518160ff16101561168657600054611622906001600160a01b031661161b836001612233565b6003611764565b818160ff168151811061163757611637611df9565b602002602001015160038260ff166002811061165557611655611df9565b0180546001600160a01b0319166001600160a01b03929092169190911790558061167e81612214565b9150506115f4565b505050565b60408051808201825261ffff848116825283811660208301908152925163eaba983760e01b81528251821660048201529251166024830152906001600160a01b0385169063eaba983790604401610b51565b6116ee816000600260076000611a18565b6116ff816000600260076002611a18565b611710816000600260076003611a18565b611721816000600260076004611a18565b611732816000600260076005611a18565b6117428160006002600780611a18565b611753816000600360006002611a18565b6101cc8160006003600e6002611a18565b6040805161016081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e08101829052610100810182905261012081019190915260ff82811661014083015283166001036118f057600280825260006020830181905260056040808501919091526008606085015260808401829052600360a0850181905260c0850184905260e085019390935261010084019190915261012083019190915251635076c06b60e01b81526001600160a01b03851690635076c06b9061184490849060040161253a565b600060405180830381600087803b15801561185e57600080fd5b505af1158015611872573d6000803e3d6000fd5b505050506118868460018060006003611a18565b611897846001600460026003611aa6565b6118a78460018062010007611afa565b6118b8846001600560026001611aa6565b6118c9846001600262020001611afa565b6118da846001600560026006611aa6565b6118eb846001600362020006611afa565b610da6565b8260ff16600203610d4c5760088082526000602083015260056040808401919091526060830191909152600d6080830152600360a08301819052600260c0840181905260e0840152600e61010084015261012083015251635076c06b60e01b81526001600160a01b03851690635076c06b9061197090849060040161253a565b600060405180830381600087803b15801561198a57600080fd5b505af115801561199e573d6000803e3d6000fd5b505050506119b38460026001600d6003611a18565b6119c48460026004600c6003611aa6565b6119d5846002600162010008611afa565b6119e68460026005600c6001611aa6565b6119f684600280620c0001611afa565b611a078460026005600c6006611aa6565b6118eb8460026003620c0006611afa565b6040805160808101825260ff86811682528516602082015261ffff8481168284015283166060820152905163d74de07560e01b81526001600160a01b0387169063d74de07590611a6c90849060040161224c565b600060405180830381600087803b158015611a8657600080fd5b505af1158015611a9a573d6000803e3d6000fd5b50505050505050505050565b6040805160808101825260ff86811682528516602082015261ffff8481168284015283166060820152905163143ca15f60e01b81526001600160a01b0387169063143ca15f90611a6c90849060040161224c565b6040805160a081018252600060608201819052608082015260ff8581168252841660208201526001600160401b03831681830152905163f8613b5960e01b81526001600160a01b0386169063f8613b5990611b599084906004016121c2565b600060405180830381600087803b158015611b7357600080fd5b505af1158015611b87573d6000803e3d6000fd5b505050505050505050565b6105508061261683390190565b634e487b7160e01b600052604160045260246000fd5b6040516102a081016001600160401b0381118282101715611bd857611bd8611b9f565b60405290565b60405161016081016001600160401b0381118282101715611bd857611bd8611b9f565b604051601f8201601f191681016001600160401b0381118282101715611c2957611c29611b9f565b604052919050565b60ff811681146101cc57600080fd5b61ffff811681146101cc57600080fd5b600060808284031215611c6257600080fd5b604051608081018181106001600160401b0382111715611c8457611c84611b9f565b6040528235611c9281611c31565b81526020830135611ca281611c31565b60208201526040830135611cb581611c40565b60408201526060830135611cc881611c40565b60608201529392505050565b6001600160a01b03811681146101cc57600080fd5b600060208284031215611cfb57600080fd5b813561068a81611cd4565b60008060408385031215611d1957600080fd5b8235611d2481611cd4565b91506020838101356001600160401b0380821115611d4157600080fd5b818601915086601f830112611d5557600080fd5b813581811115611d6757611d67611b9f565b611d79601f8201601f19168501611c01565b91508082528784828501011115611d8f57600080fd5b80848401858401376000848284010152508093505050509250929050565b600060208284031215611dbf57600080fd5b813561068a81611c31565b634e487b7160e01b600052601160045260246000fd5b60ff8281168282160390811115610ba157610ba1611dca565b634e487b7160e01b600052603260045260246000fd5b81810381811115610ba157610ba1611dca565b6000825160005b81811015611e435760208186018101518583015201611e29565b506000920191825250919050565b8051611e5c81611c40565b919050565b8051611e5c81611c31565b805163ffffffff81168114611e5c57600080fd5b600060c08284031215611e9257600080fd5b60405160c081018181106001600160401b0382111715611eb457611eb4611b9f565b6040528251611ec281611c40565b81526020830151611ed281611c40565b60208201526040830151611ee581611c31565b60408201526060830151611ef881611c31565b60608201526080830151611f0b81611c31565b6080820152611f1c60a08401611e6c565b60a08201529392505050565b60006102a08284031215611f3b57600080fd5b611f43611bb5565b611f4c83611e51565b8152611f5a60208401611e51565b6020820152611f6b60408401611e61565b6040820152611f7c60608401611e61565b6060820152611f8d60808401611e51565b6080820152611f9e60a08401611e51565b60a0820152611faf60c08401611e61565b60c0820152611fc060e08401611e61565b60e0820152610100611fd3818501611e51565b90820152610120611fe5848201611e51565b90820152610140611ff7848201611e51565b90820152610160612009848201611e51565b9082015261018061201b848201611e61565b908201526101a061202d848201611e61565b908201526101c061203f848201611e61565b908201526101e0612051848201611e61565b90820152610200612063848201611e61565b90820152610220612075848201611e61565b90820152610240612087848201611e61565b90820152610260612099848201611e61565b908201526102806120ab848201611e61565b908201529392505050565b80516001600160401b0381168114611e5c57600080fd5b80518015158114611e5c57600080fd5b600061016082840312156120f057600080fd5b6120f8611bde565b61210183611e51565b815261210f60208401611e51565b602082015261212060408401611e61565b604082015261213160608401611e61565b606082015261214260808401611e61565b608082015261215360a08401611e61565b60a082015261216460c08401611e6c565b60c082015261217560e084016120b6565b60e08201526101006121888185016120b6565b9082015261012061219a848201611e61565b908201526101406120ab8482016120cd565b634e487b7160e01b600052602160045260246000fd5b600060a08201905060ff835116825260ff602084015116602083015260408301516001600160401b038082166040850152806060860151166060850152505060ff608084015116608083015292915050565b600060ff821660ff810361222a5761222a611dca565b60010192915050565b60ff8181168382160190811115610ba157610ba1611dca565b60808101610ba1828460ff815116825260ff6020820151166020830152604081015161ffff808216604085015280606084015116606085015250505050565b600060ff8316806122ac57634e487b7160e01b600052601260045260246000fd5b8060ff84160691505092915050565b815160ff1681526101c0810160208301516122dc602084018261ffff169052565b5060408301516122f1604084018260ff169052565b506060830151612306606084018260ff169052565b50608083015161231b608084018260ff169052565b5060a083015161233060a084018260ff169052565b5060c083015161234560c084018260ff169052565b5060e083015161235a60e084018260ff169052565b506101008381015160ff9081169184019190915261012080850151909116908301526101408084015115159083015261016080840151151590830152610180808401511515908301526101a080840151801515828501525b505092915050565b815160ff168152610160810160208301516123da602084018260ff169052565b5060408301516123f0604084018261ffff169052565b506060830151612406606084018261ffff169052565b50608083015161241b608084018260ff169052565b5060a083015161243060a084018260ff169052565b5060c083015161244560c084018260ff169052565b5060e083015161245a60e084018260ff169052565b506101008381015160ff16908301526101208084015115159083015261014080840151801515828501526123b2565b6000602080838503121561249c57600080fd5b82516001600160401b03808211156124b357600080fd5b818501915085601f8301126124c757600080fd5b8151818111156124d9576124d9611b9f565b8060051b91506124ea848301611c01565b818152918301840191848101908884111561250457600080fd5b938501935b8385101561252e578451925061251e83611cd4565b8282529385019390850190612509565b98975050505050505050565b815161ffff1681526101608101602083015161255c602084018261ffff169052565b506040830151612571604084018260ff169052565b506060830151612586606084018260ff169052565b50608083015161259c608084018261ffff169052565b5060a08301516125b260a084018261ffff169052565b5060c08301516125c760c084018260ff169052565b5060e08301516125dc60e084018260ff169052565b506101008381015161ffff81168483015250506101208381015161ffff81168483015250506101408381015160ff8116848301526123b256fe60806040526040516105503803806105508339810160408190526100229161030d565b818161002e8282610042565b5061003a9050836100a1565b5050506103f9565b61004b8261010f565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115610095576100908282610153565b505050565b61009d6101ca565b5050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6100e1600080516020610530833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a161010c816101eb565b50565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080846001600160a01b03168460405161017091906103dd565b600060405180830381855af49150503d80600081146101ab576040519150601f19603f3d011682016040523d82523d6000602084013e6101b0565b606091505b5090925090506101c185838361022f565b95945050505050565b34156101e95760405163b398979f60e01b815260040160405180910390fd5b565b6001600160a01b03811661021a57604051633173bdd160e11b8152600060048201526024015b60405180910390fd5b80600080516020610530833981519152610132565b6060826102445761023f8261028e565b610287565b815115801561025b57506001600160a01b0384163b155b1561028457604051639996b31560e01b81526001600160a01b0385166004820152602401610211565b50805b9392505050565b80511561029e5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b03811681146102ce57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103045781810151838201526020016102ec565b50506000910152565b60008060006060848603121561032257600080fd5b61032b846102b7565b9250610339602085016102b7565b60408501519092506001600160401b038082111561035657600080fd5b818601915086601f83011261036a57600080fd5b81518181111561037c5761037c6102d3565b604051601f8201601f19908116603f011681019083821181831017156103a4576103a46102d3565b816040528281528960208487010111156103bd57600080fd5b6103ce8360208301602088016102e9565b80955050505050509250925092565b600082516103ef8184602087016102e9565b9190910192915050565b610128806104086000396000f3fe608060405233301480602757506012603a565b6001600160a01b0316336001600160a01b0316145b156033576031606d565b005b603130607b565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b6079607560a0565b60ad565b565b60603660008037600080366000855afa3d6000803e808015609b573d6000f35b3d6000fd5b600060a860cb565b905090565b3660008037600080366000845af43d6000803e808015609b573d6000f35b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc605e56fea264697066735822122057dec10b14e1b5a2675fb25a09f631b5267e5914398ef99beeb1950e80f3910b64736f6c63430008190033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103a264697066735822122070350b7e902e63075a264fab13578d4535d60a4c4ad9db572bc837c2834b9e8f64736f6c63430008190033",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// GetPlayerAddress is a free data retrieval call binding the contract method 0xe2ce0beb.
//
// Solidity: function getPlayerAddress(uint8 playerId) view returns(address)
func (_Contract *ContractCaller) GetPlayerAddress(opts *bind.CallOpts, playerId uint8) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getPlayerAddress", playerId)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetPlayerAddress is a free data retrieval call binding the contract method 0xe2ce0beb.
//
// Solidity: function getPlayerAddress(uint8 playerId) view returns(address)
func (_Contract *ContractSession) GetPlayerAddress(playerId uint8) (common.Address, error) {
	return _Contract.Contract.GetPlayerAddress(&_Contract.CallOpts, playerId)
}

// GetPlayerAddress is a free data retrieval call binding the contract method 0xe2ce0beb.
//
// Solidity: function getPlayerAddress(uint8 playerId) view returns(address)
func (_Contract *ContractCallerSession) GetPlayerAddress(playerId uint8) (common.Address, error) {
	return _Contract.Contract.GetPlayerAddress(&_Contract.CallOpts, playerId)
}

// GetPlayerId is a free data retrieval call binding the contract method 0xc4ae16a8.
//
// Solidity: function getPlayerId(address playerAddress) view returns(uint8)
func (_Contract *ContractCaller) GetPlayerId(opts *bind.CallOpts, playerAddress common.Address) (uint8, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getPlayerId", playerAddress)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetPlayerId is a free data retrieval call binding the contract method 0xc4ae16a8.
//
// Solidity: function getPlayerId(address playerAddress) view returns(uint8)
func (_Contract *ContractSession) GetPlayerId(playerAddress common.Address) (uint8, error) {
	return _Contract.Contract.GetPlayerId(&_Contract.CallOpts, playerAddress)
}

// GetPlayerId is a free data retrieval call binding the contract method 0xc4ae16a8.
//
// Solidity: function getPlayerId(address playerAddress) view returns(uint8)
func (_Contract *ContractCallerSession) GetPlayerId(playerAddress common.Address) (uint8, error) {
	return _Contract.Contract.GetPlayerId(&_Contract.CallOpts, playerAddress)
}

// LastTickBlockNumber is a free data retrieval call binding the contract method 0xff280198.
//
// Solidity: function lastTickBlockNumber() view returns(uint256)
func (_Contract *ContractCaller) LastTickBlockNumber(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "lastTickBlockNumber")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// LastTickBlockNumber is a free data retrieval call binding the contract method 0xff280198.
//
// Solidity: function lastTickBlockNumber() view returns(uint256)
func (_Contract *ContractSession) LastTickBlockNumber() (*big.Int, error) {
	return _Contract.Contract.LastTickBlockNumber(&_Contract.CallOpts)
}

// LastTickBlockNumber is a free data retrieval call binding the contract method 0xff280198.
//
// Solidity: function lastTickBlockNumber() view returns(uint256)
func (_Contract *ContractCallerSession) LastTickBlockNumber() (*big.Int, error) {
	return _Contract.Contract.LastTickBlockNumber(&_Contract.CallOpts)
}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Contract *ContractCaller) Proxy(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "proxy")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Contract *ContractSession) Proxy() (common.Address, error) {
	return _Contract.Contract.Proxy(&_Contract.CallOpts)
}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Contract *ContractCallerSession) Proxy() (common.Address, error) {
	return _Contract.Contract.Proxy(&_Contract.CallOpts)
}

// ArchTick is a paid mutator transaction binding the contract method 0xb8546a7d.
//
// Solidity: function archTick() returns()
func (_Contract *ContractTransactor) ArchTick(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "archTick")
}

// ArchTick is a paid mutator transaction binding the contract method 0xb8546a7d.
//
// Solidity: function archTick() returns()
func (_Contract *ContractSession) ArchTick() (*types.Transaction, error) {
	return _Contract.Contract.ArchTick(&_Contract.TransactOpts)
}

// ArchTick is a paid mutator transaction binding the contract method 0xb8546a7d.
//
// Solidity: function archTick() returns()
func (_Contract *ContractTransactorSession) ArchTick() (*types.Transaction, error) {
	return _Contract.Contract.ArchTick(&_Contract.TransactOpts)
}

// CreateUnit is a paid mutator transaction binding the contract method 0x143ca15f.
//
// Solidity: function createUnit((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactor) CreateUnit(opts *bind.TransactOpts, action ActionDataCreateUnit) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "createUnit", action)
}

// CreateUnit is a paid mutator transaction binding the contract method 0x143ca15f.
//
// Solidity: function createUnit((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractSession) CreateUnit(action ActionDataCreateUnit) (*types.Transaction, error) {
	return _Contract.Contract.CreateUnit(&_Contract.TransactOpts, action)
}

// CreateUnit is a paid mutator transaction binding the contract method 0x143ca15f.
//
// Solidity: function createUnit((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactorSession) CreateUnit(action ActionDataCreateUnit) (*types.Transaction, error) {
	return _Contract.Contract.CreateUnit(&_Contract.TransactOpts, action)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _logic, bytes data) returns()
func (_Contract *ContractTransactor) Initialize(opts *bind.TransactOpts, _logic common.Address, data []byte) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "initialize", _logic, data)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _logic, bytes data) returns()
func (_Contract *ContractSession) Initialize(_logic common.Address, data []byte) (*types.Transaction, error) {
	return _Contract.Contract.Initialize(&_Contract.TransactOpts, _logic, data)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _logic, bytes data) returns()
func (_Contract *ContractTransactorSession) Initialize(_logic common.Address, data []byte) (*types.Transaction, error) {
	return _Contract.Contract.Initialize(&_Contract.TransactOpts, _logic, data)
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_Contract *ContractTransactor) Start(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "start")
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_Contract *ContractSession) Start() (*types.Transaction, error) {
	return _Contract.Contract.Start(&_Contract.TransactOpts)
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_Contract *ContractTransactorSession) Start() (*types.Transaction, error) {
	return _Contract.Contract.Start(&_Contract.TransactOpts)
}

// Tick is a paid mutator transaction binding the contract method 0x3eaf5d9f.
//
// Solidity: function tick() returns()
func (_Contract *ContractTransactor) Tick(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "tick")
}

// Tick is a paid mutator transaction binding the contract method 0x3eaf5d9f.
//
// Solidity: function tick() returns()
func (_Contract *ContractSession) Tick() (*types.Transaction, error) {
	return _Contract.Contract.Tick(&_Contract.TransactOpts)
}

// Tick is a paid mutator transaction binding the contract method 0x3eaf5d9f.
//
// Solidity: function tick() returns()
func (_Contract *ContractTransactorSession) Tick() (*types.Transaction, error) {
	return _Contract.Contract.Tick(&_Contract.TransactOpts)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Contract *ContractTransactor) Fallback(opts *bind.TransactOpts, calldata []byte) (*types.Transaction, error) {
	return _Contract.contract.RawTransact(opts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Contract *ContractSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Contract.Contract.Fallback(&_Contract.TransactOpts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Contract *ContractTransactorSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Contract.Contract.Fallback(&_Contract.TransactOpts, calldata)
}

// ContractInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the Contract contract.
type ContractInitializedIterator struct {
	Event *ContractInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractInitialized represents a Initialized event raised by the Contract contract.
type ContractInitialized struct {
	Version uint64
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_Contract *ContractFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractInitializedIterator, error) {

	logs, sub, err := _Contract.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractInitializedIterator{contract: _Contract.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_Contract *ContractFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractInitialized) (event.Subscription, error) {

	logs, sub, err := _Contract.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractInitialized)
				if err := _Contract.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_Contract *ContractFilterer) ParseInitialized(log types.Log) (*ContractInitialized, error) {
	event := new(ContractInitialized)
	if err := _Contract.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
