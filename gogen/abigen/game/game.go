// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ActionDataAddBuildingPrototype is an auto generated low-level Go binding around an user-defined struct.
type ActionDataAddBuildingPrototype struct {
	Width            uint8
	Height           uint8
	ResourceCost     uint16
	ResourceCapacity uint16
	ComputeCapacity  uint8
	ResourceMine     uint8
	MineTime         uint8
	MaxIntegrity     uint8
	BuildingTime     uint8
	IsArmory         bool
	IsEnvironment    bool
}

// ActionDataAddPlayer is an auto generated low-level Go binding around an user-defined struct.
type ActionDataAddPlayer struct {
	SpawnAreaX      uint16
	SpawnAreaY      uint16
	SpawnAreaWidth  uint8
	SpawnAreaHeight uint8
	WorkerPortX     uint16
	WorkerPortY     uint16
}

// ActionDataAddUnitPrototype is an auto generated low-level Go binding around an user-defined struct.
type ActionDataAddUnitPrototype struct {
	Layer             uint8
	ResourceCost      uint16
	ComputeCost       uint8
	SpawnTime         uint8
	MaxIntegrity      uint8
	LandStrength      uint8
	HoverStrength     uint8
	AirStrength       uint8
	AttackRange       uint8
	AttackCooldown    uint8
	IsAssault         bool
	IsConfrontational bool
	IsWorker          bool
}

// ActionDataAssignUnit is an auto generated low-level Go binding around an user-defined struct.
type ActionDataAssignUnit struct {
	PlayerId     uint8
	UnitId       uint8
	Command      uint64
	CommandExtra uint64
	CommandMeta  uint8
}

// ActionDataCreateUnit is an auto generated low-level Go binding around an user-defined struct.
type ActionDataCreateUnit struct {
	PlayerId uint8
	UnitType uint8
	X        uint16
	Y        uint16
}

// ActionDataInitialize is an auto generated low-level Go binding around an user-defined struct.
type ActionDataInitialize struct {
	Width  uint16
	Height uint16
}

// ActionDataPlaceBuilding is an auto generated low-level Go binding around an user-defined struct.
type ActionDataPlaceBuilding struct {
	PlayerId     uint8
	BuildingType uint8
	X            uint16
	Y            uint16
}

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"fallback\",\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"addBuildingPrototype\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_AddBuildingPrototype\",\"components\":[{\"name\":\"width\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"height\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"resourceCost\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"resourceCapacity\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"computeCapacity\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"resourceMine\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"mineTime\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"maxIntegrity\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"buildingTime\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"isArmory\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"isEnvironment\",\"type\":\"bool\",\"internalType\":\"bool\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"addPlayer\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_AddPlayer\",\"components\":[{\"name\":\"spawnAreaX\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"spawnAreaY\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"spawnAreaWidth\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"spawnAreaHeight\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"workerPortX\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"workerPortY\",\"type\":\"uint16\",\"internalType\":\"uint16\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"addUnitPrototype\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_AddUnitPrototype\",\"components\":[{\"name\":\"layer\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"resourceCost\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"computeCost\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"spawnTime\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"maxIntegrity\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"landStrength\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"hoverStrength\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"airStrength\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"attackRange\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"attackCooldown\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"isAssault\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"isConfrontational\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"isWorker\",\"type\":\"bool\",\"internalType\":\"bool\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"assignUnit\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_AssignUnit\",\"components\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"unitId\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"command\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"commandExtra\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"commandMeta\",\"type\":\"uint8\",\"internalType\":\"uint8\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"createUnit\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_CreateUnit\",\"components\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"unitType\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"x\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"y\",\"type\":\"uint16\",\"internalType\":\"uint16\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"executeMultipleActions\",\"inputs\":[{\"name\":\"actionIds\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"actionCount\",\"type\":\"uint8[]\",\"internalType\":\"uint8[]\"},{\"name\":\"actionData\",\"type\":\"bytes[]\",\"internalType\":\"bytes[]\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"getPlayerAddress\",\"inputs\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getPlayerId\",\"inputs\":[{\"name\":\"playerAddress\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"_logic\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"data\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_Initialize\",\"components\":[{\"name\":\"width\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"height\",\"type\":\"uint16\",\"internalType\":\"uint16\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"lastTickBlockNumber\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"placeBuilding\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_PlaceBuilding\",\"components\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"buildingType\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"x\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"y\",\"type\":\"uint16\",\"internalType\":\"uint16\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"proxy\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"start\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"tick\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"ActionExecuted\",\"inputs\":[{\"name\":\"actionId\",\"type\":\"bytes4\",\"indexed\":false,\"internalType\":\"bytes4\"},{\"name\":\"data\",\"type\":\"bytes\",\"indexed\":false,\"internalType\":\"bytes\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint64\",\"indexed\":false,\"internalType\":\"uint64\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"InvalidInitialization\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"NotInitializing\",\"inputs\":[]}]",
	Bin: "0x6080604052348015600f57600080fd5b5061371f8061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063d0b3617111610097578063eaba983711610066578063eaba9837146101df578063ec556889146101ed578063f8613b5914610200578063ff2801981461020e576100f5565b8063d0b361711461017b578063d1f578941461018e578063d74de075146101a1578063e2ce0beb146101b4576100f5565b80637b6add86116100d35780637b6add861461012d578063982d778d1461013b578063be9a655514610149578063c4ae16a814610151576100f5565b80630f4c47cb146100ff578063143ca15f146101125780633eaf5d9f14610125575b6100fd610225565b005b6100fd61010d366004611ffd565b61029a565b6100fd6101203660046120f2565b6102d0565b6100fd61034b565b6100fd61010d366004612127565b6100fd61010d366004612225565b6100fd610648565b61016461015f366004612309565b6106a5565b60405160ff90911681526020015b60405180910390f35b6100fd6101893660046124c1565b610712565b6100fd61019c3660046125a6565b6107b8565b6100fd6101af3660046120f2565b610926565b6101c76101c23660046125f5565b61099d565b6040516001600160a01b039091168152602001610172565b6100fd61010d366004612612565b6000546101c7906001600160a01b031681565b6100fd6101af366004612668565b61021760015481565b604051908152602001610172565b6000546001600160a01b03166102825760405162461bcd60e51b815260206004820152601d60248201527f4172636850726f787941646d696e3a2070726f7879206e6f742073657400000060448201526064015b60405180910390fd5b600054610297906001600160a01b03166109d0565b50565b60405162461bcd60e51b815260206004820152600b60248201526a1b9bdd08185b1b1bddd95960aa1b6044820152606401610279565b805160026102df6001836126f8565b60ff16600281106102f2576102f2612717565b01546001600160a01b0316331461033e5760405162461bcd60e51b815260206004820152601060248201526f23b0b6b29d1037b7363ca83630bcb2b960811b6044820152606401610279565b610347826109f6565b5050565b6000805460408051633eaf5d9f60e01b815290516001600160a01b0390921692633eaf5d9f9260048084019382900301818387803b15801561038c57600080fd5b505af11580156103a0573d6000803e3d6000fd5b506001925050505b60028160ff16116102975760006103c0600283612743565b6103cb906001612765565b6000805460405163eed886d960e01b815260ff841660048201526001602482015292935090916001600160a01b039091169063eed886d99060440160c060405180830381865afa158015610423573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610447919061279f565b6080015190508060ff1660000361045f575050610636565b600080546040516301473f3960e21b815260ff861660048201526001600160a01b039091169063051cfce49060240161020060405180830381865afa1580156104ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104d09190612820565b6101600151905060045b8160ff168160ff16116106315760008054604051623be62d60e11b815260ff8089166004830152841660248201526001600160a01b03909116906277cc5a9060440161016060405180830381865afa15801561053a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061055e919061295f565b60e00151905063ffffffff602082901c16600081900361061c576040805160a0810182526000606082018190526080820181905260ff8a811683528616602083015264010000000162ff000060108b901b16178284018190529054925163f8613b5960e01b815290945090916001600160a01b03169063f8613b59906105e8908490600401612a2e565b600060405180830381600087803b15801561060257600080fd5b505af1158015610616573d6000803e3d6000fd5b50505050505b5050808061062990612a80565b9150506104da565b505050505b8061064081612a80565b9150506103a8565b6002600001546001600160a01b0316331461069b5760405162461bcd60e51b815260206004820152601360248201527247616d653a206f6e6c79506c617965724f6e6560681b6044820152606401610279565b6106a3610cb9565b565b6000805b60028160ff16101561070957826001600160a01b031660028260ff16600281106106d5576106d5612717565b01546001600160a01b0316036106f7576106f0816001612765565b9392505050565b8061070181612a80565b9150506106a9565b50600092915050565b6000805b84518110156107b157600084828151811061073357610733612717565b602002602001015160ff16905060008390505b6107508285612a9f565b81101561079b5761079387848151811061076c5761076c612717565b602002602001015186838151811061078657610786612717565b6020026020010151610d14565b600101610746565b506107a68184612a9f565b925050600101610716565b5050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156107fd5750825b90506000826001600160401b031660011480156108195750303b155b905081158015610827575080155b156108455760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561086f57845460ff60401b1916600160401b1785555b6000308860405161087f90611e79565b6001600160a01b03928316815291166020820152606060408201819052600090820152608001604051809103906000f0801580156108c1573d6000803e3d6000fd5b5090506108cd81610ec5565b6108d687610fae565b50831561091d57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b805160026109356001836126f8565b60ff166002811061094857610948612717565b01546001600160a01b031633146109945760405162461bcd60e51b815260206004820152601060248201526f23b0b6b29d1037b7363ca83630bcb2b960811b6044820152606401610279565b6103478261029a565b600060026109ac6001846126f8565b60ff16600281106109bf576109bf612717565b01546001600160a01b031692915050565b60603660008037600080366000855afa3d6000803e8080156109f1573d6000f35b3d6000fd5b60005460405163143ca15f60e01b81526001600160a01b039091169063143ca15f90610a26908490600401612ab2565b600060405180830381600087803b158015610a4057600080fd5b505af1158015610a54573d6000803e3d6000fd5b50505050610a896040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b815160ff168082526000546040516301473f3960e21b815260048101929092526001600160a01b03169063051cfce49060240161020060405180830381865afa158015610ada573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610afe9190612820565b610160015160ff16602082015281516000908190610b1e90600290612743565b610b29906001612765565b905060108160ff166001600160401b0316901b821791506003846060015161ffff1610158015610b6257506004846060015161ffff1611155b15610b765764010000000190911790610c3f565b60006003856060015161ffff161015610b9157506001610b95565b5060025b60008054604051623be62d60e11b815260ff8086166004830152841660248201526001600160a01b03909116906277cc5a9060440161016060405180830381865afa158015610be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0c919061295f565b6060015190508060ff16600503610c2c5764010000000190931792610c3c565b60ff821690931764020000000017925b50505b6001600160401b038216604080850191909152600054905163f8613b5960e01b81526001600160a01b039091169063f8613b5990610c81908690600401612a2e565b600060405180830381600087803b158015610c9b57600080fd5b505af1158015610caf573d6000803e3d6000fd5b5050505050505050565b600080546040805163be9a655560e01b815290516001600160a01b039092169263be9a65559260048084019382900301818387803b158015610cfa57600080fd5b505af1158015610d0e573d6000803e3d6000fd5b50505050565b8163ffffffff16633eaf5d9f03610d2d5761034761034b565b8163ffffffff1663eaba983703610d6457600081806020019051810190610d549190612af1565b9050610d5f8161029a565b505050565b8163ffffffff1663be9a655503610d7d57610347610648565b8163ffffffff1663143ca15f03610daf57600081806020019051810190610da49190612b83565b9050610d5f816102d0565b8163ffffffff1663f8613b5903610de157600081806020019051810190610dd69190612b9f565b9050610d5f81610926565b8163ffffffff1663d74de07503610e0857600081806020019051810190610dd69190612b83565b8163ffffffff16630f4c47cb03610e2f57600081806020019051810190610d549190612c0d565b8163ffffffff16637b6add8603610e5657600081806020019051810190610d549190612c8e565b8163ffffffff1663982d778d03610e7d57600081806020019051810190610d549190612d81565b60405162461bcd60e51b815260206004820152601d60248201527f456e747279706f696e743a20496e76616c696420616374696f6e2049440000006044820152606401610279565b6001600160a01b038116610f295760405162461bcd60e51b815260206004820152602560248201527f4172636850726f787941646d696e3a20696e76616c69642070726f7879206164604482015264647265737360d81b6064820152608401610279565b6000546001600160a01b031615610f8c5760405162461bcd60e51b815260206004820152602160248201527f4172636850726f787941646d696e3a2070726f787920616c72656164792073656044820152601d60fa1b6064820152608401610279565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b604080518082018252600f8152600860208201908152600054925163eaba983760e01b8152825161ffff90811660048301529151909116602482015290916001600160a01b03169063eaba983790604401600060405180830381600087803b15801561101957600080fd5b505af115801561102d573d6000803e3d6000fd5b505060005461104792506001600160a01b031690506110da565b60005461105c906001600160a01b031661155f565b6000828060200190518101906110729190612e3e565b905061107d81611744565b6110856117bf565b600080546040805163be9a655560e01b815290516001600160a01b039092169263be9a65559260048084019382900301818387803b1580156110c657600080fd5b505af115801561091d573d6000803e3d6000fd5b806001600160a01b0316637b6add86604051806101a001604052806002600381111561110857611108612ed7565b60ff168152606460208201526001604080830182905260026060840181905260196080850152600560a0850152600060c08501819052600360e0808701919091526101008601839052610120860192909252610140850184905261016085019390935261018090930191909152519083901b6001600160e01b03191681526111939190600401612eed565b600060405180830381600087803b1580156111ad57600080fd5b505af11580156111c1573d6000803e3d6000fd5b50505050806001600160a01b0316637b6add86604051806101a00160405280600060038111156111f3576111f3612ed7565b60ff168152609660208201526001604080830182905260046060840181905260646080850152600560a0850152600a60c0850152600f60e080860191909152610100850182905260036101208601526000610140860181905261016086019490945261018090940192909252519184901b6001600160e01b031916825261127b929101612eed565b600060405180830381600087803b15801561129557600080fd5b505af11580156112a9573d6000803e3d6000fd5b50505050806001600160a01b0316637b6add86604051806101a00160405280600060038111156112db576112db612ed7565b60ff16815261012c6020820152600160408083018290526008606084015260966080840152600f60a0840152600060c08401819052600560e0808601919091526003610100860152600661012086015261014085018290526101608501939093526101809093019290925290519083901b6001600160e01b03191681526113659190600401612eed565b600060405180830381600087803b15801561137f57600080fd5b505af1158015611393573d6000803e3d6000fd5b50505050806001600160a01b0316637b6add86604051806101a00160405280600060038111156113c5576113c5612ed7565b60ff16815261012c6020820152600060408083018290526008606084015260966080840152600360a0840181905260c0840183905260e080850182905261010085019190915260016101208501819052610140850184905261016085015261018090930191909152519083901b6001600160e01b031916815261144b9190600401612eed565b600060405180830381600087803b15801561146557600080fd5b505af1158015611479573d6000803e3d6000fd5b50505050806001600160a01b0316637b6add86604051806101a00160405280600160038111156114ab576114ab612ed7565b60ff16815260006020820181905260408083018290526060830182905260016080840181905260a0840183905260c0840183905260e08085018490526101008501849052610120850184905261014085019390935261016084018190526101809093019290925290519083901b6001600160e01b03191681526115319190600401612eed565b600060405180830381600087803b15801561154b57600080fd5b505af11580156107b1573d6000803e3d6000fd5b6040805161016081018252600280825260208201526000818301819052610bb860608301526008608083015260a0820181905260c0820181905260fa60e083015261010082018190526101208201819052610140820152905163982d778d60e01b81526001600160a01b0383169163982d778d916115e09190600401612fdf565b600060405180830381600087803b1580156115fa57600080fd5b505af115801561160e573d6000803e3d6000fd5b505060408051610160810182526001808252602082018190526000828401819052606083018190526080830181905260a0830181905260c0830181905260e083018190526101008301819052610120830152610140820152905163982d778d60e01b81526001600160a01b038516935063982d778d92506116929190600401612fdf565b600060405180830381600087803b1580156116ac57600080fd5b505af11580156116c0573d6000803e3d6000fd5b5050604080516101608101825260018082526020820181905260008284018190526060830181905260808301819052601960a084015260c0830181905260e083018190526101008301819052610120830152610140820152905163982d778d60e01b81526001600160a01b038516935063982d778d92506115319190600401612fdf565b60005b81518160ff1610156103475761175b611896565b818160ff168151811061177057611770612717565b602002602001015160028260ff166002811061178e5761178e612717565b0180546001600160a01b0319166001600160a01b0392909216919091179055806117b781612a80565b915050611747565b60006117cd6002600f6130ae565b60ff16905060005b600860ff82161015610347578060ff166001148061180357506117fa600260086126f8565b60ff168160ff16145b61188e5760008054604080516080810182529283526002602084015261ffff85168382015260ff841660608401525163d74de07560e01b81526001600160a01b039091169163d74de0759161185b9190600401612ab2565b600060405180830381600087803b15801561187557600080fd5b505af1158015611889573d6000803e3d6000fd5b505050505b6001016117d5565b60008060009054906101000a90046001600160a01b03166001600160a01b031663422f7e1d6040518163ffffffff1660e01b815260040161010060405180830381865afa1580156118eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061190f91906130d0565b6040015161191e906001612765565b905060008061192c83611e49565b9150915060008360ff1660010361194557506002611962565b6119516002600f6130ae565b61195c906001612765565b60ff1690505b600080546040805160c08101825261ffff8516815260208101939093526001600160a01b0390911691630f4c47cb91810160026119a081600f6130ae565b6119aa91906126f8565b60ff9081168252600860208084019190915288821660408085019190915288831660609485015280516001600160e01b031960e088901b168152855161ffff90811660048301529286015183166024820152908501518316604482015292840151909116606483015260808301518116608483015260a09092015190911660a482015260c401600060405180830381600087803b158015611a4a57600080fd5b505af1158015611a5e573d6000803e3d6000fd5b50506000546040805160808101825260ff8981168252600160208301528881168284015287166060820152905163d74de07560e01b81526001600160a01b03909216935063d74de0759250611ab591600401612ab2565b600060405180830381600087803b158015611acf57600080fd5b505af1158015611ae3573d6000803e3d6000fd5b505050508260ff16600003611afb5760029250611b0a565b611b076003600f6126f8565b92505b6000546040805160808101825260ff87811682526004602083018190529087168284015260016060830152915163143ca15f60e01b81526001600160a01b039093169263143ca15f92611b5e929101612ab2565b600060405180830381600087803b158015611b7857600080fd5b505af1158015611b8c573d6000803e3d6000fd5b50506000546040805160808101825260ff8981168252600460208301528816918101919091526001600160a01b03909116925063143ca15f915060608101611bd6600260086126f8565b60ff1690526040516001600160e01b031960e084901b168152611bfc9190600401612ab2565b600060405180830381600087803b158015611c1657600080fd5b505af1158015611c2a573d6000803e3d6000fd5b50505050600080600184611c3e91906126f8565b60ff1690506000808290508760ff16600103611c61576000935060029150611c84565b611c6d6001600f6126f8565b60ff169350611c7e6003600f6126f8565b60ff1691505b60008054604080516080810182529283526003602084015261ffff80881684830152861660608401525163d74de07560e01b81526001600160a01b039091169163d74de07591611cd79190600401612ab2565b600060405180830381600087803b158015611cf157600080fd5b505af1158015611d05573d6000803e3d6000fd5b50506000546040805160808101825260ff8d1681526005602082015261ffff8088168284015286166060820152905163143ca15f60e01b81526001600160a01b03909216935063143ca15f9250611d5e91600401612ab2565b600060405180830381600087803b158015611d7857600080fd5b505af1158015611d8c573d6000803e3d6000fd5b50505050611dc16040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b60ff89168082526003602083015262010000176040808301829052600054905163f8613b5960e01b81526001600160a01b039091169063f8613b5990611e0b908590600401612a2e565b600060405180830381600087803b158015611e2557600080fd5b505af1158015611e39573d6000803e3d6000fd5b5050505050505050505050505050565b6000808260ff16600103611e635750600092600392509050565b611e6f6002600f6126f8565b9360039350915050565b6105508061319a83390190565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715611ebe57611ebe611e86565b60405290565b604051608081016001600160401b0381118282101715611ebe57611ebe611e86565b6040516101a081016001600160401b0381118282101715611ebe57611ebe611e86565b60405161016081016001600160401b0381118282101715611ebe57611ebe611e86565b604080519081016001600160401b0381118282101715611ebe57611ebe611e86565b60405160a081016001600160401b0381118282101715611ebe57611ebe611e86565b60405161020081016001600160401b0381118282101715611ebe57611ebe611e86565b604051601f8201601f191681016001600160401b0381118282101715611fbb57611fbb611e86565b604052919050565b61ffff8116811461029757600080fd5b8035611fde81611fc3565b919050565b60ff8116811461029757600080fd5b8035611fde81611fe3565b600060c0828403121561200f57600080fd5b612017611e9c565b823561202281611fc3565b8152602083013561203281611fc3565b6020820152604083013561204581611fe3565b6040820152606083013561205881611fe3565b6060820152608083013561206b81611fc3565b608082015260a083013561207e81611fc3565b60a08201529392505050565b60006080828403121561209c57600080fd5b6120a4611ec4565b905081356120b181611fe3565b815260208201356120c181611fe3565b602082015260408201356120d481611fc3565b604082015260608201356120e781611fc3565b606082015292915050565b60006080828403121561210457600080fd5b6106f0838361208a565b801515811461029757600080fd5b8035611fde8161210e565b60006101a0828403121561213a57600080fd5b612142611ee6565b61214b83611ff2565b815261215960208401611fd3565b602082015261216a60408401611ff2565b604082015261217b60608401611ff2565b606082015261218c60808401611ff2565b608082015261219d60a08401611ff2565b60a08201526121ae60c08401611ff2565b60c08201526121bf60e08401611ff2565b60e08201526101006121d2818501611ff2565b908201526101206121e4848201611ff2565b908201526101406121f684820161211c565b9082015261016061220884820161211c565b9082015261018061221a84820161211c565b908201529392505050565b6000610160828403121561223857600080fd5b612240611f09565b61224983611ff2565b815261225760208401611ff2565b602082015261226860408401611fd3565b604082015261227960608401611fd3565b606082015261228a60808401611ff2565b608082015261229b60a08401611ff2565b60a08201526122ac60c08401611ff2565b60c08201526122bd60e08401611ff2565b60e08201526101006122d0818501611ff2565b908201526101206122e284820161211c565b9082015261014061221a84820161211c565b6001600160a01b038116811461029757600080fd5b60006020828403121561231b57600080fd5b81356106f0816122f4565b60006001600160401b0382111561233f5761233f611e86565b5060051b60200190565b63ffffffff8116811461029757600080fd5b600082601f83011261236c57600080fd5b8135602061238161237c83612326565b611f93565b8083825260208201915060208460051b8701019350868411156123a357600080fd5b602086015b848110156123c85780356123bb81611fe3565b83529183019183016123a8565b509695505050505050565b600082601f8301126123e457600080fd5b81356001600160401b038111156123fd576123fd611e86565b612410601f8201601f1916602001611f93565b81815284602083860101111561242557600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261245357600080fd5b8135602061246361237c83612326565b82815260059290921b8401810191818101908684111561248257600080fd5b8286015b848110156123c85780356001600160401b038111156124a55760008081fd5b6124b38986838b01016123d3565b845250918301918301612486565b6000806000606084860312156124d657600080fd5b83356001600160401b03808211156124ed57600080fd5b818601915086601f83011261250157600080fd5b8135602061251161237c83612326565b82815260059290921b8401810191818101908a84111561253057600080fd5b948201945b8386101561255757853561254881612349565b82529482019490820190612535565b9750508701359250508082111561256d57600080fd5b6125798783880161235b565b9350604086013591508082111561258f57600080fd5b5061259c86828701612442565b9150509250925092565b600080604083850312156125b957600080fd5b82356125c4816122f4565b915060208301356001600160401b038111156125df57600080fd5b6125eb858286016123d3565b9150509250929050565b60006020828403121561260757600080fd5b81356106f081611fe3565b60006040828403121561262457600080fd5b61262c611f2c565b823561263781611fc3565b8152602083013561264781611fc3565b60208201529392505050565b6001600160401b038116811461029757600080fd5b600060a0828403121561267a57600080fd5b612682611f4e565b823561268d81611fe3565b8152602083013561269d81611fe3565b602082015260408301356126b081612653565b604082015260608301356126c381612653565b606082015260808301356126d681611fe3565b60808201529392505050565b634e487b7160e01b600052601160045260246000fd5b60ff8281168282160390811115612711576127116126e2565b92915050565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601260045260246000fd5b600060ff8316806127565761275661272d565b8060ff84160691505092915050565b60ff8181168382160190811115612711576127116126e2565b8051611fde81611fc3565b8051611fde81611fe3565b8051611fde81612349565b600060c082840312156127b157600080fd5b6127b9611e9c565b82516127c481611fc3565b815260208301516127d481611fc3565b602082015260408301516127e781611fe3565b604082015260608301516127fa81611fe3565b6060820152608083015161280d81611fe3565b608082015260a083015161207e81612349565b6000610200828403121561283357600080fd5b61283b611f70565b6128448361277e565b81526128526020840161277e565b602082015261286360408401612789565b604082015261287460608401612789565b60608201526128856080840161277e565b608082015261289660a0840161277e565b60a08201526128a760c0840161277e565b60c08201526128b860e0840161277e565b60e08201526101006128cb818501612789565b908201526101206128dd848201612789565b908201526101406128ef848201612789565b90820152610160612901848201612789565b90820152610180612913848201612789565b908201526101a0612925848201612789565b908201526101c0612937848201612789565b908201526101e061221a848201612789565b8051611fde81612653565b8051611fde8161210e565b6000610160828403121561297257600080fd5b61297a611f09565b6129838361277e565b81526129916020840161277e565b60208201526129a260408401612789565b60408201526129b360608401612789565b60608201526129c460808401612789565b60808201526129d560a08401612789565b60a08201526129e660c08401612794565b60c08201526129f760e08401612949565b60e0820152610100612a0a818501612949565b90820152610120612a1c848201612789565b9082015261014061221a848201612954565b600060a08201905060ff835116825260ff602084015116602083015260408301516001600160401b038082166040850152806060860151166060850152505060ff608084015116608083015292915050565b600060ff821660ff8103612a9657612a966126e2565b60010192915050565b80820180821115612711576127116126e2565b60808101612711828460ff815116825260ff6020820151166020830152604081015161ffff808216604085015280606084015116606085015250505050565b600060408284031215612b0357600080fd5b612b0b611f2c565b8251612b1681611fc3565b8152602083015161264781611fc3565b600060808284031215612b3857600080fd5b612b40611ec4565b90508151612b4d81611fe3565b81526020820151612b5d81611fe3565b60208201526040820151612b7081611fc3565b604082015260608201516120e781611fc3565b600060808284031215612b9557600080fd5b6106f08383612b26565b600060a08284031215612bb157600080fd5b612bb9611f4e565b8251612bc481611fe3565b81526020830151612bd481611fe3565b60208201526040830151612be781612653565b60408201526060830151612bfa81612653565b606082015260808301516126d681611fe3565b600060c08284031215612c1f57600080fd5b612c27611e9c565b8251612c3281611fc3565b81526020830151612c4281611fc3565b60208201526040830151612c5581611fe3565b60408201526060830151612c6881611fe3565b60608201526080830151612c7b81611fc3565b608082015260a083015161207e81611fc3565b60006101a08284031215612ca157600080fd5b612ca9611ee6565b612cb283612789565b8152612cc06020840161277e565b6020820152612cd160408401612789565b6040820152612ce260608401612789565b6060820152612cf360808401612789565b6080820152612d0460a08401612789565b60a0820152612d1560c08401612789565b60c0820152612d2660e08401612789565b60e0820152610100612d39818501612789565b90820152610120612d4b848201612789565b90820152610140612d5d848201612954565b90820152610160612d6f848201612954565b9082015261018061221a848201612954565b60006101608284031215612d9457600080fd5b612d9c611f09565b612da583612789565b8152612db360208401612789565b6020820152612dc46040840161277e565b6040820152612dd56060840161277e565b6060820152612de660808401612789565b6080820152612df760a08401612789565b60a0820152612e0860c08401612789565b60c0820152612e1960e08401612789565b60e0820152610100612e2c818501612789565b90820152610120612a1c848201612954565b60006020808385031215612e5157600080fd5b82516001600160401b03811115612e6757600080fd5b8301601f81018513612e7857600080fd5b8051612e8661237c82612326565b81815260059190911b82018301908381019087831115612ea557600080fd5b928401925b82841015612ecc578351612ebd816122f4565b82529284019290840190612eaa565b979650505050505050565b634e487b7160e01b600052602160045260246000fd5b815160ff1681526101a081016020830151612f0e602084018261ffff169052565b506040830151612f23604084018260ff169052565b506060830151612f38606084018260ff169052565b506080830151612f4d608084018260ff169052565b5060a0830151612f6260a084018260ff169052565b5060c0830151612f7760c084018260ff169052565b5060e0830151612f8c60e084018260ff169052565b506101008381015160ff908116918401919091526101208085015190911690830152610140808401511515908301526101608084015115159083015261018080840151801515828501525b505092915050565b815160ff16815261016081016020830151612fff602084018260ff169052565b506040830151613015604084018261ffff169052565b50606083015161302b606084018261ffff169052565b506080830151613040608084018260ff169052565b5060a083015161305560a084018260ff169052565b5060c083015161306a60c084018260ff169052565b5060e083015161307f60e084018260ff169052565b506101008381015160ff1690830152610120808401511515908301526101408084015180151582850152612fd7565b600060ff8316806130c1576130c161272d565b8060ff84160491505092915050565b60006101008083850312156130e457600080fd5b604051908101906001600160401b038211818310171561310657613106611e86565b816040528351915061311782611fc3565b8181526131266020850161277e565b602082015261313760408501612789565b604082015261314860608501612789565b606082015261315960808501612789565b608082015261316a60a08501612954565b60a082015261317b60c08501612954565b60c082015261318c60e08501612794565b60e082015294935050505056fe60806040526040516105503803806105508339810160408190526100229161030d565b818161002e8282610042565b5061003a9050836100a1565b5050506103f9565b61004b8261010f565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115610095576100908282610153565b505050565b61009d6101ca565b5050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6100e1600080516020610530833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a161010c816101eb565b50565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080846001600160a01b03168460405161017091906103dd565b600060405180830381855af49150503d80600081146101ab576040519150601f19603f3d011682016040523d82523d6000602084013e6101b0565b606091505b5090925090506101c185838361022f565b95945050505050565b34156101e95760405163b398979f60e01b815260040160405180910390fd5b565b6001600160a01b03811661021a57604051633173bdd160e11b8152600060048201526024015b60405180910390fd5b80600080516020610530833981519152610132565b6060826102445761023f8261028e565b610287565b815115801561025b57506001600160a01b0384163b155b1561028457604051639996b31560e01b81526001600160a01b0385166004820152602401610211565b50805b9392505050565b80511561029e5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b03811681146102ce57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103045781810151838201526020016102ec565b50506000910152565b60008060006060848603121561032257600080fd5b61032b846102b7565b9250610339602085016102b7565b60408501519092506001600160401b038082111561035657600080fd5b818601915086601f83011261036a57600080fd5b81518181111561037c5761037c6102d3565b604051601f8201601f19908116603f011681019083821181831017156103a4576103a46102d3565b816040528281528960208487010111156103bd57600080fd5b6103ce8360208301602088016102e9565b80955050505050509250925092565b600082516103ef8184602087016102e9565b9190910192915050565b610128806104086000396000f3fe608060405233301480602757506012603a565b6001600160a01b0316336001600160a01b0316145b156033576031606d565b005b603130607b565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b6079607560a0565b60ad565b565b60603660008037600080366000855afa3d6000803e808015609b573d6000f35b3d6000fd5b600060a860cb565b905090565b3660008037600080366000845af43d6000803e808015609b573d6000f35b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc605e56fea264697066735822122057dec10b14e1b5a2675fb25a09f631b5267e5914398ef99beeb1950e80f3910b64736f6c63430008190033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103a2646970667358221220905645a0244fc2e317267062470da4f824a6a709ca06dff82c0aa5c3a5fd85aa64736f6c63430008190033",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// GetPlayerAddress is a free data retrieval call binding the contract method 0xe2ce0beb.
//
// Solidity: function getPlayerAddress(uint8 playerId) view returns(address)
func (_Contract *ContractCaller) GetPlayerAddress(opts *bind.CallOpts, playerId uint8) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getPlayerAddress", playerId)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetPlayerAddress is a free data retrieval call binding the contract method 0xe2ce0beb.
//
// Solidity: function getPlayerAddress(uint8 playerId) view returns(address)
func (_Contract *ContractSession) GetPlayerAddress(playerId uint8) (common.Address, error) {
	return _Contract.Contract.GetPlayerAddress(&_Contract.CallOpts, playerId)
}

// GetPlayerAddress is a free data retrieval call binding the contract method 0xe2ce0beb.
//
// Solidity: function getPlayerAddress(uint8 playerId) view returns(address)
func (_Contract *ContractCallerSession) GetPlayerAddress(playerId uint8) (common.Address, error) {
	return _Contract.Contract.GetPlayerAddress(&_Contract.CallOpts, playerId)
}

// GetPlayerId is a free data retrieval call binding the contract method 0xc4ae16a8.
//
// Solidity: function getPlayerId(address playerAddress) view returns(uint8)
func (_Contract *ContractCaller) GetPlayerId(opts *bind.CallOpts, playerAddress common.Address) (uint8, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getPlayerId", playerAddress)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetPlayerId is a free data retrieval call binding the contract method 0xc4ae16a8.
//
// Solidity: function getPlayerId(address playerAddress) view returns(uint8)
func (_Contract *ContractSession) GetPlayerId(playerAddress common.Address) (uint8, error) {
	return _Contract.Contract.GetPlayerId(&_Contract.CallOpts, playerAddress)
}

// GetPlayerId is a free data retrieval call binding the contract method 0xc4ae16a8.
//
// Solidity: function getPlayerId(address playerAddress) view returns(uint8)
func (_Contract *ContractCallerSession) GetPlayerId(playerAddress common.Address) (uint8, error) {
	return _Contract.Contract.GetPlayerId(&_Contract.CallOpts, playerAddress)
}

// LastTickBlockNumber is a free data retrieval call binding the contract method 0xff280198.
//
// Solidity: function lastTickBlockNumber() view returns(uint256)
func (_Contract *ContractCaller) LastTickBlockNumber(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "lastTickBlockNumber")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// LastTickBlockNumber is a free data retrieval call binding the contract method 0xff280198.
//
// Solidity: function lastTickBlockNumber() view returns(uint256)
func (_Contract *ContractSession) LastTickBlockNumber() (*big.Int, error) {
	return _Contract.Contract.LastTickBlockNumber(&_Contract.CallOpts)
}

// LastTickBlockNumber is a free data retrieval call binding the contract method 0xff280198.
//
// Solidity: function lastTickBlockNumber() view returns(uint256)
func (_Contract *ContractCallerSession) LastTickBlockNumber() (*big.Int, error) {
	return _Contract.Contract.LastTickBlockNumber(&_Contract.CallOpts)
}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Contract *ContractCaller) Proxy(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "proxy")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Contract *ContractSession) Proxy() (common.Address, error) {
	return _Contract.Contract.Proxy(&_Contract.CallOpts)
}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Contract *ContractCallerSession) Proxy() (common.Address, error) {
	return _Contract.Contract.Proxy(&_Contract.CallOpts)
}

// AddBuildingPrototype is a paid mutator transaction binding the contract method 0x982d778d.
//
// Solidity: function addBuildingPrototype((uint8,uint8,uint16,uint16,uint8,uint8,uint8,uint8,uint8,bool,bool) action) returns()
func (_Contract *ContractTransactor) AddBuildingPrototype(opts *bind.TransactOpts, action ActionDataAddBuildingPrototype) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "addBuildingPrototype", action)
}

// AddBuildingPrototype is a paid mutator transaction binding the contract method 0x982d778d.
//
// Solidity: function addBuildingPrototype((uint8,uint8,uint16,uint16,uint8,uint8,uint8,uint8,uint8,bool,bool) action) returns()
func (_Contract *ContractSession) AddBuildingPrototype(action ActionDataAddBuildingPrototype) (*types.Transaction, error) {
	return _Contract.Contract.AddBuildingPrototype(&_Contract.TransactOpts, action)
}

// AddBuildingPrototype is a paid mutator transaction binding the contract method 0x982d778d.
//
// Solidity: function addBuildingPrototype((uint8,uint8,uint16,uint16,uint8,uint8,uint8,uint8,uint8,bool,bool) action) returns()
func (_Contract *ContractTransactorSession) AddBuildingPrototype(action ActionDataAddBuildingPrototype) (*types.Transaction, error) {
	return _Contract.Contract.AddBuildingPrototype(&_Contract.TransactOpts, action)
}

// AddPlayer is a paid mutator transaction binding the contract method 0x0f4c47cb.
//
// Solidity: function addPlayer((uint16,uint16,uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactor) AddPlayer(opts *bind.TransactOpts, action ActionDataAddPlayer) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "addPlayer", action)
}

// AddPlayer is a paid mutator transaction binding the contract method 0x0f4c47cb.
//
// Solidity: function addPlayer((uint16,uint16,uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractSession) AddPlayer(action ActionDataAddPlayer) (*types.Transaction, error) {
	return _Contract.Contract.AddPlayer(&_Contract.TransactOpts, action)
}

// AddPlayer is a paid mutator transaction binding the contract method 0x0f4c47cb.
//
// Solidity: function addPlayer((uint16,uint16,uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactorSession) AddPlayer(action ActionDataAddPlayer) (*types.Transaction, error) {
	return _Contract.Contract.AddPlayer(&_Contract.TransactOpts, action)
}

// AddUnitPrototype is a paid mutator transaction binding the contract method 0x7b6add86.
//
// Solidity: function addUnitPrototype((uint8,uint16,uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8,bool,bool,bool) action) returns()
func (_Contract *ContractTransactor) AddUnitPrototype(opts *bind.TransactOpts, action ActionDataAddUnitPrototype) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "addUnitPrototype", action)
}

// AddUnitPrototype is a paid mutator transaction binding the contract method 0x7b6add86.
//
// Solidity: function addUnitPrototype((uint8,uint16,uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8,bool,bool,bool) action) returns()
func (_Contract *ContractSession) AddUnitPrototype(action ActionDataAddUnitPrototype) (*types.Transaction, error) {
	return _Contract.Contract.AddUnitPrototype(&_Contract.TransactOpts, action)
}

// AddUnitPrototype is a paid mutator transaction binding the contract method 0x7b6add86.
//
// Solidity: function addUnitPrototype((uint8,uint16,uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8,bool,bool,bool) action) returns()
func (_Contract *ContractTransactorSession) AddUnitPrototype(action ActionDataAddUnitPrototype) (*types.Transaction, error) {
	return _Contract.Contract.AddUnitPrototype(&_Contract.TransactOpts, action)
}

// AssignUnit is a paid mutator transaction binding the contract method 0xf8613b59.
//
// Solidity: function assignUnit((uint8,uint8,uint64,uint64,uint8) action) returns()
func (_Contract *ContractTransactor) AssignUnit(opts *bind.TransactOpts, action ActionDataAssignUnit) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "assignUnit", action)
}

// AssignUnit is a paid mutator transaction binding the contract method 0xf8613b59.
//
// Solidity: function assignUnit((uint8,uint8,uint64,uint64,uint8) action) returns()
func (_Contract *ContractSession) AssignUnit(action ActionDataAssignUnit) (*types.Transaction, error) {
	return _Contract.Contract.AssignUnit(&_Contract.TransactOpts, action)
}

// AssignUnit is a paid mutator transaction binding the contract method 0xf8613b59.
//
// Solidity: function assignUnit((uint8,uint8,uint64,uint64,uint8) action) returns()
func (_Contract *ContractTransactorSession) AssignUnit(action ActionDataAssignUnit) (*types.Transaction, error) {
	return _Contract.Contract.AssignUnit(&_Contract.TransactOpts, action)
}

// CreateUnit is a paid mutator transaction binding the contract method 0x143ca15f.
//
// Solidity: function createUnit((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactor) CreateUnit(opts *bind.TransactOpts, action ActionDataCreateUnit) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "createUnit", action)
}

// CreateUnit is a paid mutator transaction binding the contract method 0x143ca15f.
//
// Solidity: function createUnit((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractSession) CreateUnit(action ActionDataCreateUnit) (*types.Transaction, error) {
	return _Contract.Contract.CreateUnit(&_Contract.TransactOpts, action)
}

// CreateUnit is a paid mutator transaction binding the contract method 0x143ca15f.
//
// Solidity: function createUnit((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactorSession) CreateUnit(action ActionDataCreateUnit) (*types.Transaction, error) {
	return _Contract.Contract.CreateUnit(&_Contract.TransactOpts, action)
}

// ExecuteMultipleActions is a paid mutator transaction binding the contract method 0xd0b36171.
//
// Solidity: function executeMultipleActions(uint32[] actionIds, uint8[] actionCount, bytes[] actionData) returns()
func (_Contract *ContractTransactor) ExecuteMultipleActions(opts *bind.TransactOpts, actionIds []uint32, actionCount []uint8, actionData [][]byte) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "executeMultipleActions", actionIds, actionCount, actionData)
}

// ExecuteMultipleActions is a paid mutator transaction binding the contract method 0xd0b36171.
//
// Solidity: function executeMultipleActions(uint32[] actionIds, uint8[] actionCount, bytes[] actionData) returns()
func (_Contract *ContractSession) ExecuteMultipleActions(actionIds []uint32, actionCount []uint8, actionData [][]byte) (*types.Transaction, error) {
	return _Contract.Contract.ExecuteMultipleActions(&_Contract.TransactOpts, actionIds, actionCount, actionData)
}

// ExecuteMultipleActions is a paid mutator transaction binding the contract method 0xd0b36171.
//
// Solidity: function executeMultipleActions(uint32[] actionIds, uint8[] actionCount, bytes[] actionData) returns()
func (_Contract *ContractTransactorSession) ExecuteMultipleActions(actionIds []uint32, actionCount []uint8, actionData [][]byte) (*types.Transaction, error) {
	return _Contract.Contract.ExecuteMultipleActions(&_Contract.TransactOpts, actionIds, actionCount, actionData)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _logic, bytes data) returns()
func (_Contract *ContractTransactor) Initialize(opts *bind.TransactOpts, _logic common.Address, data []byte) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "initialize", _logic, data)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _logic, bytes data) returns()
func (_Contract *ContractSession) Initialize(_logic common.Address, data []byte) (*types.Transaction, error) {
	return _Contract.Contract.Initialize(&_Contract.TransactOpts, _logic, data)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _logic, bytes data) returns()
func (_Contract *ContractTransactorSession) Initialize(_logic common.Address, data []byte) (*types.Transaction, error) {
	return _Contract.Contract.Initialize(&_Contract.TransactOpts, _logic, data)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xeaba9837.
//
// Solidity: function initialize((uint16,uint16) action) returns()
func (_Contract *ContractTransactor) Initialize0(opts *bind.TransactOpts, action ActionDataInitialize) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "initialize0", action)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xeaba9837.
//
// Solidity: function initialize((uint16,uint16) action) returns()
func (_Contract *ContractSession) Initialize0(action ActionDataInitialize) (*types.Transaction, error) {
	return _Contract.Contract.Initialize0(&_Contract.TransactOpts, action)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xeaba9837.
//
// Solidity: function initialize((uint16,uint16) action) returns()
func (_Contract *ContractTransactorSession) Initialize0(action ActionDataInitialize) (*types.Transaction, error) {
	return _Contract.Contract.Initialize0(&_Contract.TransactOpts, action)
}

// PlaceBuilding is a paid mutator transaction binding the contract method 0xd74de075.
//
// Solidity: function placeBuilding((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactor) PlaceBuilding(opts *bind.TransactOpts, action ActionDataPlaceBuilding) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "placeBuilding", action)
}

// PlaceBuilding is a paid mutator transaction binding the contract method 0xd74de075.
//
// Solidity: function placeBuilding((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractSession) PlaceBuilding(action ActionDataPlaceBuilding) (*types.Transaction, error) {
	return _Contract.Contract.PlaceBuilding(&_Contract.TransactOpts, action)
}

// PlaceBuilding is a paid mutator transaction binding the contract method 0xd74de075.
//
// Solidity: function placeBuilding((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactorSession) PlaceBuilding(action ActionDataPlaceBuilding) (*types.Transaction, error) {
	return _Contract.Contract.PlaceBuilding(&_Contract.TransactOpts, action)
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_Contract *ContractTransactor) Start(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "start")
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_Contract *ContractSession) Start() (*types.Transaction, error) {
	return _Contract.Contract.Start(&_Contract.TransactOpts)
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_Contract *ContractTransactorSession) Start() (*types.Transaction, error) {
	return _Contract.Contract.Start(&_Contract.TransactOpts)
}

// Tick is a paid mutator transaction binding the contract method 0x3eaf5d9f.
//
// Solidity: function tick() returns()
func (_Contract *ContractTransactor) Tick(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "tick")
}

// Tick is a paid mutator transaction binding the contract method 0x3eaf5d9f.
//
// Solidity: function tick() returns()
func (_Contract *ContractSession) Tick() (*types.Transaction, error) {
	return _Contract.Contract.Tick(&_Contract.TransactOpts)
}

// Tick is a paid mutator transaction binding the contract method 0x3eaf5d9f.
//
// Solidity: function tick() returns()
func (_Contract *ContractTransactorSession) Tick() (*types.Transaction, error) {
	return _Contract.Contract.Tick(&_Contract.TransactOpts)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Contract *ContractTransactor) Fallback(opts *bind.TransactOpts, calldata []byte) (*types.Transaction, error) {
	return _Contract.contract.RawTransact(opts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Contract *ContractSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Contract.Contract.Fallback(&_Contract.TransactOpts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Contract *ContractTransactorSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Contract.Contract.Fallback(&_Contract.TransactOpts, calldata)
}

// ContractActionExecutedIterator is returned from FilterActionExecuted and is used to iterate over the raw logs and unpacked data for ActionExecuted events raised by the Contract contract.
type ContractActionExecutedIterator struct {
	Event *ContractActionExecuted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractActionExecutedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractActionExecuted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractActionExecuted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractActionExecutedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractActionExecutedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractActionExecuted represents a ActionExecuted event raised by the Contract contract.
type ContractActionExecuted struct {
	ActionId [4]byte
	Data     []byte
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterActionExecuted is a free log retrieval operation binding the contract event 0x45065f461aede1b904079823f6d858e465fa8c25fcf1654bb4a89e6dee320a1a.
//
// Solidity: event ActionExecuted(bytes4 actionId, bytes data)
func (_Contract *ContractFilterer) FilterActionExecuted(opts *bind.FilterOpts) (*ContractActionExecutedIterator, error) {

	logs, sub, err := _Contract.contract.FilterLogs(opts, "ActionExecuted")
	if err != nil {
		return nil, err
	}
	return &ContractActionExecutedIterator{contract: _Contract.contract, event: "ActionExecuted", logs: logs, sub: sub}, nil
}

// WatchActionExecuted is a free log subscription operation binding the contract event 0x45065f461aede1b904079823f6d858e465fa8c25fcf1654bb4a89e6dee320a1a.
//
// Solidity: event ActionExecuted(bytes4 actionId, bytes data)
func (_Contract *ContractFilterer) WatchActionExecuted(opts *bind.WatchOpts, sink chan<- *ContractActionExecuted) (event.Subscription, error) {

	logs, sub, err := _Contract.contract.WatchLogs(opts, "ActionExecuted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractActionExecuted)
				if err := _Contract.contract.UnpackLog(event, "ActionExecuted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseActionExecuted is a log parse operation binding the contract event 0x45065f461aede1b904079823f6d858e465fa8c25fcf1654bb4a89e6dee320a1a.
//
// Solidity: event ActionExecuted(bytes4 actionId, bytes data)
func (_Contract *ContractFilterer) ParseActionExecuted(log types.Log) (*ContractActionExecuted, error) {
	event := new(ContractActionExecuted)
	if err := _Contract.contract.UnpackLog(event, "ActionExecuted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the Contract contract.
type ContractInitializedIterator struct {
	Event *ContractInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractInitialized represents a Initialized event raised by the Contract contract.
type ContractInitialized struct {
	Version uint64
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_Contract *ContractFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractInitializedIterator, error) {

	logs, sub, err := _Contract.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractInitializedIterator{contract: _Contract.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_Contract *ContractFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractInitialized) (event.Subscription, error) {

	logs, sub, err := _Contract.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractInitialized)
				if err := _Contract.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_Contract *ContractFilterer) ParseInitialized(log types.Log) (*ContractInitialized, error) {
	event := new(ContractInitialized)
	if err := _Contract.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
