// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ActionDataAddBuildingPrototype is an auto generated low-level Go binding around an user-defined struct.
type ActionDataAddBuildingPrototype struct {
	Width            uint8
	Height           uint8
	ResourceCost     uint16
	ResourceCapacity uint16
	ComputeCapacity  uint8
	ResourceMine     uint8
	MineTime         uint8
	MaxIntegrity     uint8
	BuildingTime     uint8
	IsArmory         bool
	IsEnvironment    bool
}

// ActionDataAddPlayer is an auto generated low-level Go binding around an user-defined struct.
type ActionDataAddPlayer struct {
	SpawnAreaX           uint16
	SpawnAreaY           uint16
	SpawnAreaWidth       uint8
	SpawnAreaHeight      uint8
	WorkerPortX          uint16
	WorkerPortY          uint16
	UnpurgeableUnitCount uint8
}

// ActionDataAddUnitPrototype is an auto generated low-level Go binding around an user-defined struct.
type ActionDataAddUnitPrototype struct {
	Layer             uint8
	ResourceCost      uint16
	ComputeCost       uint8
	SpawnTime         uint8
	MaxIntegrity      uint8
	LandStrength      uint8
	HoverStrength     uint8
	AirStrength       uint8
	AttackRange       uint8
	AttackCooldown    uint8
	IsAssault         bool
	IsConfrontational bool
	IsWorker          bool
	IsPurgeable       bool
}

// ActionDataAssignUnit is an auto generated low-level Go binding around an user-defined struct.
type ActionDataAssignUnit struct {
	PlayerId     uint8
	UnitId       uint8
	Command      uint64
	CommandExtra uint64
	CommandMeta  uint8
}

// ActionDataCreateUnit is an auto generated low-level Go binding around an user-defined struct.
type ActionDataCreateUnit struct {
	PlayerId uint8
	UnitType uint8
	X        uint16
	Y        uint16
}

// ActionDataInitialize is an auto generated low-level Go binding around an user-defined struct.
type ActionDataInitialize struct {
	Width  uint16
	Height uint16
}

// ActionDataPlaceBuilding is an auto generated low-level Go binding around an user-defined struct.
type ActionDataPlaceBuilding struct {
	PlayerId     uint8
	BuildingType uint8
	X            uint16
	Y            uint16
}

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"fallback\",\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"addBuildingPrototype\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_AddBuildingPrototype\",\"components\":[{\"name\":\"width\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"height\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"resourceCost\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"resourceCapacity\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"computeCapacity\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"resourceMine\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"mineTime\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"maxIntegrity\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"buildingTime\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"isArmory\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"isEnvironment\",\"type\":\"bool\",\"internalType\":\"bool\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"addPlayer\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_AddPlayer\",\"components\":[{\"name\":\"spawnAreaX\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"spawnAreaY\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"spawnAreaWidth\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"spawnAreaHeight\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"workerPortX\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"workerPortY\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"unpurgeableUnitCount\",\"type\":\"uint8\",\"internalType\":\"uint8\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"addUnitPrototype\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_AddUnitPrototype\",\"components\":[{\"name\":\"layer\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"resourceCost\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"computeCost\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"spawnTime\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"maxIntegrity\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"landStrength\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"hoverStrength\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"airStrength\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"attackRange\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"attackCooldown\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"isAssault\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"isConfrontational\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"isWorker\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"isPurgeable\",\"type\":\"bool\",\"internalType\":\"bool\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"archTick\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"assignUnit\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_AssignUnit\",\"components\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"unitId\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"command\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"commandExtra\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"commandMeta\",\"type\":\"uint8\",\"internalType\":\"uint8\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"createUnit\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_CreateUnit\",\"components\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"unitType\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"x\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"y\",\"type\":\"uint16\",\"internalType\":\"uint16\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"executeMultipleActions\",\"inputs\":[{\"name\":\"actionIds\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"actionCount\",\"type\":\"uint8[]\",\"internalType\":\"uint8[]\"},{\"name\":\"actionData\",\"type\":\"bytes[]\",\"internalType\":\"bytes[]\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"getPlayerAddress\",\"inputs\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getPlayerId\",\"inputs\":[{\"name\":\"playerAddress\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"_logic\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"data\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_Initialize\",\"components\":[{\"name\":\"width\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"height\",\"type\":\"uint16\",\"internalType\":\"uint16\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"lastTickBlockNumber\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"placeBuilding\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_PlaceBuilding\",\"components\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"buildingType\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"x\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"y\",\"type\":\"uint16\",\"internalType\":\"uint16\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"proxy\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"purge\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"start\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"tick\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"ActionExecuted\",\"inputs\":[{\"name\":\"actionId\",\"type\":\"bytes4\",\"indexed\":false,\"internalType\":\"bytes4\"},{\"name\":\"data\",\"type\":\"bytes\",\"indexed\":false,\"internalType\":\"bytes\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint64\",\"indexed\":false,\"internalType\":\"uint64\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"InvalidInitialization\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"NotInitializing\",\"inputs\":[]}]",
	Bin: "0x6080604052348015600f57600080fd5b5061380e8061001f6000396000f3fe608060405234801561001057600080fd5b506004361061010b5760003560e01c8063c4ae16a8116100a2578063e2ce0beb11610071578063e2ce0beb146101da578063eaba983714610205578063ec55688914610213578063f8613b5914610226578063ff280198146102345761010b565b8063c4ae16a814610177578063d0b36171146101a1578063d1f57894146101b4578063d74de075146101c75761010b565b8063a5e592f4116100de578063a5e592f41461014b578063b44ff0c514610159578063b8546a7d14610167578063be9a65551461016f5761010b565b8063143ca15f146101155780633eaf5d9f1461012857806370f0c35114610130578063982d778d14610138575b61011361024b565b005b610113610123366004612116565b6102c0565b61011361033b565b6101136106d7565b61011361014636600461214b565b6106d7565b610113610146366004612225565b61011361014636600461232a565b610113610711565b61011361071b565b61018a6101853660046123df565b610776565b60405160ff90911681526020015b60405180910390f35b6101136101af366004612597565b6107e3565b6101136101c236600461267c565b610889565b6101136101d5366004612116565b6109fb565b6101ed6101e83660046126cb565b610a72565b6040516001600160a01b039091168152602001610198565b6101136101463660046126e8565b6000546101ed906001600160a01b031681565b6101136101d536600461273e565b61023d60025481565b604051908152602001610198565b6000546001600160a01b03166102a85760405162461bcd60e51b815260206004820152601d60248201527f4172636850726f787941646d696e3a2070726f7879206e6f742073657400000060448201526064015b60405180910390fd5b6000546102bd906001600160a01b0316610aa5565b50565b805160036102cf6001836127ce565b60ff16600281106102e2576102e26127e7565b01546001600160a01b0316331461032e5760405162461bcd60e51b815260206004820152601060248201526f23b0b6b29d1037b7363ca83630bcb2b960811b604482015260640161029f565b61033782610acb565b5050565b6000306127105a61034c91906127fd565b60408051600481526024810182526020810180516001600160e01b031663b8546a7d60e01b17905290516103809190612810565b60006040518083038160008787f1925050503d80600081146103be576040519150601f19603f3d011682016040523d82523d6000602084013e6103c3565b606091505b50509050806103d157600080fd5b6002600154036103de5750565b60015b60028160ff1611610337576127105a10156103fa575050565b600061040760028361283f565b61041290600161286f565b6000805460405163eed886d960e01b815260ff841660048201526001602482015292935090916001600160a01b039091169063eed886d99060440160c060405180830381865afa15801561046a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061048e91906128a9565b6080015190508060ff166000036104a65750506106c5565b600080546040516301473f3960e21b815260ff861660048201526001600160a01b039091169063051cfce49060240161022060405180830381865afa1580156104f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105179190612953565b6101600151905060045b8160ff168160ff16116106c0576127105a101561054057505050505050565b60008054604051623be62d60e11b815260ff8089166004830152841660248201526001600160a01b03909116906277cc5a9060440161016060405180830381865afa158015610593573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105b79190612aa4565b9050806060015160ff166003146105ce57506106ae565b60006105dd8260e00151610d7c565b50909150600090508160028111156105f7576105f7612b73565b036106ab576040805160a081018252600091810182905260608101829052608081019190915260ff888116825284166020820152610636876001610db1565b6001600160401b0316604080830191909152600054905163f8613b5960e01b81526001600160a01b039091169063f8613b5990610677908490600401612b89565b600060405180830381600087803b15801561069157600080fd5b505af11580156106a5573d6000803e3d6000fd5b50505050505b50505b806106b881612bdb565b915050610521565b505050505b806106cf81612bdb565b9150506103e1565b60405162461bcd60e51b815260206004820152600f60248201526e1b9bdd081a5b5c1b195b595b9d1959608a1b604482015260640161029f565b610719610dce565b565b6003600001546001600160a01b0316331461076e5760405162461bcd60e51b815260206004820152601360248201527247616d653a206f6e6c79506c617965724f6e6560681b604482015260640161029f565b610719610f2f565b6000805b60028160ff1610156107da57826001600160a01b031660038260ff16600281106107a6576107a66127e7565b01546001600160a01b0316036107c8576107c181600161286f565b9392505050565b806107d281612bdb565b91505061077a565b50600092915050565b6000805b8451811015610882576000848281518110610804576108046127e7565b602002602001015160ff16905060008390505b6108218285612bfa565b81101561086c5761086487848151811061083d5761083d6127e7565b6020026020010151868381518110610857576108576127e7565b6020026020010151610f8a565b600101610817565b506108778184612bfa565b9250506001016107e7565b5050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b03166000811580156108ce5750825b90506000826001600160401b031660011480156108ea5750303b155b9050811580156108f8575080155b156109165760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561094057845460ff60401b1916600160401b1785555b6000308860405161095090611f2a565b6001600160a01b03928316815291166020820152606060408201819052600090820152608001604051809103906000f080158015610992573d6000803e3d6000fd5b50905061099e81611154565b6109a78761123d565b506001805583156109f257845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b80516003610a0a6001836127ce565b60ff1660028110610a1d57610a1d6127e7565b01546001600160a01b03163314610a695760405162461bcd60e51b815260206004820152601060248201526f23b0b6b29d1037b7363ca83630bcb2b960811b604482015260640161029f565b610337826106d7565b60006003610a816001846127ce565b60ff1660028110610a9457610a946127e7565b01546001600160a01b031692915050565b60603660008037600080366000855afa3d6000803e808015610ac6573d6000f35b3d6000fd5b60005460405163143ca15f60e01b81526001600160a01b039091169063143ca15f90610afb908490600401612c0d565b600060405180830381600087803b158015610b1557600080fd5b505af1158015610b29573d6000803e3d6000fd5b50505050610b5e6040805160a08101825260008082526020820181905291810182905260608101829052608081019190915290565b815160ff168082526000546040516301473f3960e21b815260048101929092526001600160a01b03169063051cfce49060240161022060405180830381865afa158015610baf573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd39190612953565b610160015160ff1660208201528151600090610bf19060029061283f565b610bfc90600161286f565b905060006003846060015161ffff1610158015610c2257506004846060015161ffff1611155b15610c3957610c32826001610db1565b9050610d02565b60006003856060015161ffff161015610c5457506002610c58565b5060035b60008054604051623be62d60e11b815260ff8087166004830152841660248201526001600160a01b03909116906277cc5a9060440161016060405180830381865afa158015610cab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ccf9190612aa4565b6060015190508060ff16600503610cf257610ceb846001610db1565b9250610cff565b610cfc84836112fa565b92505b50505b6001600160401b038116604080850191909152600054905163f8613b5960e01b81526001600160a01b039091169063f8613b5990610d44908690600401612b89565b600060405180830381600087803b158015610d5e57600080fd5b505af1158015610d72573d6000803e3d6000fd5b5050505050505050565b600080808060ff602086901c166002811115610d9a57610d9a612b73565b95601086901c65ffffffffffff1695945092505050565b6000610dc560018460ff168460ff1661130a565b90505b92915050565b6002544311610e105760405162461bcd60e51b815260206004820152600e60248201526d185b1c9958591e481d1a58dad95960921b604482015260640161029f565b600260015403610e795760008054604080516370f0c35160e01b815290516001600160a01b03909216926370f0c3519260048084019382900301818387803b158015610e5b57600080fd5b505af1158015610e6f573d6000803e3d6000fd5b5050600180555050565b600080546001600160a01b03166127105a610e9491906127fd565b60408051600481526024810182526020810180516001600160e01b0316633eaf5d9f60e01b1790529051610ec89190612810565b60006040518083038160008787f1925050503d8060008114610f06576040519150601f19603f3d011682016040523d82523d6000602084013e610f0b565b606091505b505090508015610f185750565b6175305a1015610f2a57600260015550565b600080fd5b600080546040805163be9a655560e01b815290516001600160a01b039092169263be9a65559260048084019382900301818387803b158015610f7057600080fd5b505af1158015610f84573d6000803e3d6000fd5b50505050565b8163ffffffff16633eaf5d9f03610fa35761033761033b565b8163ffffffff166370f0c35103610fbc576103376106d7565b8163ffffffff1663eaba983703610ff357600081806020019051810190610fe39190612c4c565b9050610fee816106d7565b505050565b8163ffffffff1663be9a65550361100c5761033761071b565b8163ffffffff1663143ca15f0361103e576000818060200190518101906110339190612cde565b9050610fee816102c0565b8163ffffffff1663f8613b5903611070576000818060200190518101906110659190612cfa565b9050610fee816109fb565b8163ffffffff1663d74de07503611097576000818060200190518101906110659190612cde565b8163ffffffff1663b44ff0c5036110be57600081806020019051810190610fe39190612d68565b8163ffffffff1663a5e592f4036110e557600081806020019051810190610fe39190612dfc565b8163ffffffff1663982d778d0361110c57600081806020019051810190610fe39190612f01565b60405162461bcd60e51b815260206004820152601d60248201527f456e747279706f696e743a20496e76616c696420616374696f6e204944000000604482015260640161029f565b6001600160a01b0381166111b85760405162461bcd60e51b815260206004820152602560248201527f4172636850726f787941646d696e3a20696e76616c69642070726f7879206164604482015264647265737360d81b606482015260840161029f565b6000546001600160a01b03161561121b5760405162461bcd60e51b815260206004820152602160248201527f4172636850726f787941646d696e3a2070726f787920616c72656164792073656044820152601d60fa1b606482015260840161029f565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600054611252906001600160a01b031661134b565b600054611267906001600160a01b03166117f4565b60005461127c906001600160a01b03166119d9565b6000818060200190518101906112929190612fbe565b905061129d816119ef565b600080546040805163be9a655560e01b815290516001600160a01b039092169263be9a65559260048084019382900301818387803b1580156112de57600080fd5b505af11580156112f2573d6000803e3d6000fd5b505050505050565b6000610dc560028460ff168460ff165b600080602085600281111561132157611321612b73565b6001600160401b0316901b1760109390931b63ffff0000169290921761ffff919091161792915050565b806001600160a01b031663a5e592f4604051806101c001604052806000600381111561137957611379612b73565b60ff168152609660208201526001604080830182905260046060840181905260646080850152600560a0850152600a60c0850152600f60e080860191909152610100850182905260036101208601526000610140860181905261016086018590526101808601526101a090940192909252519184901b6001600160e01b0319168252611406929101613057565b600060405180830381600087803b15801561142057600080fd5b505af1158015611434573d6000803e3d6000fd5b50505050806001600160a01b031663a5e592f4604051806101c001604052806002600381111561146657611466612b73565b60ff168152606460208201526001604080830182905260026060840181905260196080850152600560a0850152600060c08501819052600360e0808701919091526101008601839052610120860192909252610140850184905261016085018490526101808501526101a090930191909152519083901b6001600160e01b03191681526114f69190600401613057565b600060405180830381600087803b15801561151057600080fd5b505af1158015611524573d6000803e3d6000fd5b50505050806001600160a01b031663a5e592f4604051806101c001604052806000600381111561155657611556612b73565b60ff16815261012c6020820152600160408083018290526008606084015260966080840152600a60a0840152600060c08401819052600360e080860182905261010086019190915260046101208601819052610140860183905261016086018390526101808601929092526101a090940192909252519184901b6001600160e01b03191682526115e7929101613057565b600060405180830381600087803b15801561160157600080fd5b505af1158015611615573d6000803e3d6000fd5b50505050806001600160a01b031663a5e592f4604051806101c001604052806001600381111561164757611647612b73565b60ff16815260006020820181905260408083018290526060830182905260016080840181905260a0840183905260c0840183905260e080850184905261010085018490526101208501849052610140850193909352610160840181905261018084018190526101a09093019290925290519083901b6001600160e01b03191681526116d59190600401613057565b600060405180830381600087803b1580156116ef57600080fd5b505af1158015611703573d6000803e3d6000fd5b50505050806001600160a01b031663a5e592f4604051806101c001604052806000600381111561173557611735612b73565b60ff16815261012c6020820152600060408083018290526008606084015260966080840152600360a0840181905260c0840183905260e080850182905261010085019190915260016101208501819052610140850184905261016085018190526101808501939093526101a090930191909152519083901b6001600160e01b03191681526117c69190600401613057565b600060405180830381600087803b1580156117e057600080fd5b505af1158015610882573d6000803e3d6000fd5b604080516101608101825260028082526020820152600081830181905261012c60608301526008608083015260a0820181905260c0820181905260fa60e083015261010082018190526101208201819052610140820152905163982d778d60e01b81526001600160a01b0383169163982d778d916118759190600401613156565b600060405180830381600087803b15801561188f57600080fd5b505af11580156118a3573d6000803e3d6000fd5b505060408051610160810182526001808252602082018190526000828401819052606083018190526080830181905260a0830181905260c0830181905260e083018190526101008301819052610120830152610140820152905163982d778d60e01b81526001600160a01b038516935063982d778d92506119279190600401613156565b600060405180830381600087803b15801561194157600080fd5b505af1158015611955573d6000803e3d6000fd5b5050604080516101608101825260018082526020820181905260008284018190526060830181905260808301819052601960a084015260c0830181905260e083018190526101008301819052610120830152610140820152905163982d778d60e01b81526001600160a01b038516935063982d778d92506117c69190600401613156565b6119e681600f6008611a84565b6102bd81611ad6565b60005b81518160ff16101561033757600054611a20906001600160a01b0316611a1983600161286f565b6003611b5d565b818160ff1681518110611a3557611a356127e7565b602002602001015160038260ff1660028110611a5357611a536127e7565b0180546001600160a01b0319166001600160a01b039290921691909117905580611a7c81612bdb565b9150506119f2565b60408051808201825261ffff848116825283811660208301908152925163eaba983760e01b81528251821660048201529251166024830152906001600160a01b0385169063eaba983790604401610d44565b611ae7816000600260076000611db0565b611af8816000600260076002611db0565b611b09816000600260076003611db0565b611b1a816000600260076004611db0565b611b2b816000600260076005611db0565b611b3b8160006002600780611db0565b611b4c816000600360006002611db0565b6102bd8160006003600e6002611db0565b6040805160e081018252600080825260208201819052918101829052606081018290526080810182905260a081019190915260ff82811660c08301528316600103611ca657600281526000602082018190526005604080840191909152600860608401526080830191909152600360a08301525163b44ff0c560e01b81526001600160a01b0385169063b44ff0c590611bfa908490600401613225565b600060405180830381600087803b158015611c1457600080fd5b505af1158015611c28573d6000803e3d6000fd5b50505050611c3c8460018060006003611db0565b611c4d846001600460026003611e3e565b611c5d8460018062010007611e92565b611c6e846001600560026001611e3e565b611c7f846001600262020001611e92565b611c90846001600560026006611e3e565b611ca1846001600362020006611e92565b610f84565b8260ff16600203610f2a5760088082526000602083015260056040808401919091526060830191909152600e6080830152600360a08301525163b44ff0c560e01b81526001600160a01b0385169063b44ff0c590611d08908490600401613225565b600060405180830381600087803b158015611d2257600080fd5b505af1158015611d36573d6000803e3d6000fd5b50505050611d4b8460026001600d6003611db0565b611d5c8460026004600c6003611e3e565b611d6d846002600162010008611e92565b611d7e8460026005600c6001611e3e565b611d8e84600280620c0001611e92565b611d9f8460026005600c6006611e3e565b611ca18460026003620c0006611e92565b6040805160808101825260ff86811682528516602082015261ffff8481168284015283166060820152905163d74de07560e01b81526001600160a01b0387169063d74de07590611e04908490600401612c0d565b600060405180830381600087803b158015611e1e57600080fd5b505af1158015611e32573d6000803e3d6000fd5b50505050505050505050565b6040805160808101825260ff86811682528516602082015261ffff8481168284015283166060820152905163143ca15f60e01b81526001600160a01b0387169063143ca15f90611e04908490600401612c0d565b6040805160a081018252600060608201819052608082015260ff8581168252841660208201526001600160401b03831681830152905163f8613b5960e01b81526001600160a01b0386169063f8613b5990611ef1908490600401612b89565b600060405180830381600087803b158015611f0b57600080fd5b505af1158015611f1f573d6000803e3d6000fd5b505050505050505050565b6105508061328983390190565b634e487b7160e01b600052604160045260246000fd5b604051608081016001600160401b0381118282101715611f6f57611f6f611f37565b60405290565b60405161016081016001600160401b0381118282101715611f6f57611f6f611f37565b6040516101c081016001600160401b0381118282101715611f6f57611f6f611f37565b60405160e081016001600160401b0381118282101715611f6f57611f6f611f37565b604080519081016001600160401b0381118282101715611f6f57611f6f611f37565b60405160a081016001600160401b0381118282101715611f6f57611f6f611f37565b60405161022081016001600160401b0381118282101715611f6f57611f6f611f37565b604051601f8201601f191681016001600160401b038111828210171561206c5761206c611f37565b604052919050565b60ff811681146102bd57600080fd5b803561208e81612074565b919050565b61ffff811681146102bd57600080fd5b803561208e81612093565b6000608082840312156120c057600080fd5b6120c8611f4d565b905081356120d581612074565b815260208201356120e581612074565b602082015260408201356120f881612093565b6040820152606082013561210b81612093565b606082015292915050565b60006080828403121561212857600080fd5b610dc583836120ae565b80151581146102bd57600080fd5b803561208e81612132565b6000610160828403121561215e57600080fd5b612166611f75565b61216f83612083565b815261217d60208401612083565b602082015261218e604084016120a3565b604082015261219f606084016120a3565b60608201526121b060808401612083565b60808201526121c160a08401612083565b60a08201526121d260c08401612083565b60c08201526121e360e08401612083565b60e08201526101006121f6818501612083565b90820152610120612208848201612140565b9082015261014061221a848201612140565b908201529392505050565b60006101c0828403121561223857600080fd5b612240611f98565b61224983612083565b8152612257602084016120a3565b602082015261226860408401612083565b604082015261227960608401612083565b606082015261228a60808401612083565b608082015261229b60a08401612083565b60a08201526122ac60c08401612083565b60c08201526122bd60e08401612083565b60e08201526101006122d0818501612083565b908201526101206122e2848201612083565b908201526101406122f4848201612140565b90820152610160612306848201612140565b90820152610180612318848201612140565b908201526101a061221a848201612140565b600060e0828403121561233c57600080fd5b612344611fbb565b823561234f81612093565b8152602083013561235f81612093565b6020820152604083013561237281612074565b6040820152606083013561238581612074565b6060820152608083013561239881612093565b608082015260a08301356123ab81612093565b60a082015260c08301356123be81612074565b60c08201529392505050565b6001600160a01b03811681146102bd57600080fd5b6000602082840312156123f157600080fd5b81356107c1816123ca565b60006001600160401b0382111561241557612415611f37565b5060051b60200190565b63ffffffff811681146102bd57600080fd5b600082601f83011261244257600080fd5b81356020612457612452836123fc565b612044565b8083825260208201915060208460051b87010193508684111561247957600080fd5b602086015b8481101561249e57803561249181612074565b835291830191830161247e565b509695505050505050565b600082601f8301126124ba57600080fd5b81356001600160401b038111156124d3576124d3611f37565b6124e6601f8201601f1916602001612044565b8181528460208386010111156124fb57600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261252957600080fd5b81356020612539612452836123fc565b82815260059290921b8401810191818101908684111561255857600080fd5b8286015b8481101561249e5780356001600160401b0381111561257b5760008081fd5b6125898986838b01016124a9565b84525091830191830161255c565b6000806000606084860312156125ac57600080fd5b83356001600160401b03808211156125c357600080fd5b818601915086601f8301126125d757600080fd5b813560206125e7612452836123fc565b82815260059290921b8401810191818101908a84111561260657600080fd5b948201945b8386101561262d57853561261e8161241f565b8252948201949082019061260b565b9750508701359250508082111561264357600080fd5b61264f87838801612431565b9350604086013591508082111561266557600080fd5b5061267286828701612518565b9150509250925092565b6000806040838503121561268f57600080fd5b823561269a816123ca565b915060208301356001600160401b038111156126b557600080fd5b6126c1858286016124a9565b9150509250929050565b6000602082840312156126dd57600080fd5b81356107c181612074565b6000604082840312156126fa57600080fd5b612702611fdd565b823561270d81612093565b8152602083013561271d81612093565b60208201529392505050565b6001600160401b03811681146102bd57600080fd5b600060a0828403121561275057600080fd5b612758611fff565b823561276381612074565b8152602083013561277381612074565b6020820152604083013561278681612729565b6040820152606083013561279981612729565b606082015260808301356127ac81612074565b60808201529392505050565b634e487b7160e01b600052601160045260246000fd5b60ff8281168282160390811115610dc857610dc86127b8565b634e487b7160e01b600052603260045260246000fd5b81810381811115610dc857610dc86127b8565b6000825160005b818110156128315760208186018101518583015201612817565b506000920191825250919050565b600060ff83168061286057634e487b7160e01b600052601260045260246000fd5b8060ff84160691505092915050565b60ff8181168382160190811115610dc857610dc86127b8565b805161208e81612093565b805161208e81612074565b805161208e8161241f565b600060c082840312156128bb57600080fd5b60405160c081018181106001600160401b03821117156128dd576128dd611f37565b60405282516128eb81612093565b815260208301516128fb81612093565b6020820152604083015161290e81612074565b6040820152606083015161292181612074565b6060820152608083015161293481612074565b608082015260a08301516129478161241f565b60a08201529392505050565b6000610220828403121561296657600080fd5b61296e612021565b61297783612888565b815261298560208401612888565b602082015261299660408401612893565b60408201526129a760608401612893565b60608201526129b860808401612888565b60808201526129c960a08401612888565b60a08201526129da60c08401612888565b60c08201526129eb60e08401612888565b60e08201526101006129fe818501612893565b90820152610120612a10848201612893565b90820152610140612a22848201612893565b90820152610160612a34848201612893565b90820152610180612a46848201612893565b908201526101a0612a58848201612893565b908201526101c0612a6a848201612893565b908201526101e0612a7c848201612893565b9082015261020061221a848201612893565b805161208e81612729565b805161208e81612132565b60006101608284031215612ab757600080fd5b612abf611f75565b612ac883612888565b8152612ad660208401612888565b6020820152612ae760408401612893565b6040820152612af860608401612893565b6060820152612b0960808401612893565b6080820152612b1a60a08401612893565b60a0820152612b2b60c0840161289e565b60c0820152612b3c60e08401612a8e565b60e0820152610100612b4f818501612a8e565b90820152610120612b61848201612893565b9082015261014061221a848201612a99565b634e487b7160e01b600052602160045260246000fd5b600060a08201905060ff835116825260ff602084015116602083015260408301516001600160401b038082166040850152806060860151166060850152505060ff608084015116608083015292915050565b600060ff821660ff8103612bf157612bf16127b8565b60010192915050565b80820180821115610dc857610dc86127b8565b60808101610dc8828460ff815116825260ff6020820151166020830152604081015161ffff808216604085015280606084015116606085015250505050565b600060408284031215612c5e57600080fd5b612c66611fdd565b8251612c7181612093565b8152602083015161271d81612093565b600060808284031215612c9357600080fd5b612c9b611f4d565b90508151612ca881612074565b81526020820151612cb881612074565b60208201526040820151612ccb81612093565b6040820152606082015161210b81612093565b600060808284031215612cf057600080fd5b610dc58383612c81565b600060a08284031215612d0c57600080fd5b612d14611fff565b8251612d1f81612074565b81526020830151612d2f81612074565b60208201526040830151612d4281612729565b60408201526060830151612d5581612729565b606082015260808301516127ac81612074565b600060e08284031215612d7a57600080fd5b612d82611fbb565b8251612d8d81612093565b81526020830151612d9d81612093565b60208201526040830151612db081612074565b60408201526060830151612dc381612074565b60608201526080830151612dd681612093565b608082015260a0830151612de981612093565b60a082015260c08301516123be81612074565b60006101c08284031215612e0f57600080fd5b612e17611f98565b612e2083612893565b8152612e2e60208401612888565b6020820152612e3f60408401612893565b6040820152612e5060608401612893565b6060820152612e6160808401612893565b6080820152612e7260a08401612893565b60a0820152612e8360c08401612893565b60c0820152612e9460e08401612893565b60e0820152610100612ea7818501612893565b90820152610120612eb9848201612893565b90820152610140612ecb848201612a99565b90820152610160612edd848201612a99565b90820152610180612eef848201612a99565b908201526101a061221a848201612a99565b60006101608284031215612f1457600080fd5b612f1c611f75565b612f2583612893565b8152612f3360208401612893565b6020820152612f4460408401612888565b6040820152612f5560608401612888565b6060820152612f6660808401612893565b6080820152612f7760a08401612893565b60a0820152612f8860c08401612893565b60c0820152612f9960e08401612893565b60e0820152610100612fac818501612893565b90820152610120612b61848201612a99565b60006020808385031215612fd157600080fd5b82516001600160401b03811115612fe757600080fd5b8301601f81018513612ff857600080fd5b8051613006612452826123fc565b81815260059190911b8201830190838101908783111561302557600080fd5b928401925b8284101561304c57835161303d816123ca565b8252928401929084019061302a565b979650505050505050565b815160ff1681526101c081016020830151613078602084018261ffff169052565b50604083015161308d604084018260ff169052565b5060608301516130a2606084018260ff169052565b5060808301516130b7608084018260ff169052565b5060a08301516130cc60a084018260ff169052565b5060c08301516130e160c084018260ff169052565b5060e08301516130f660e084018260ff169052565b506101008381015160ff9081169184019190915261012080850151909116908301526101408084015115159083015261016080840151151590830152610180808401511515908301526101a080840151801515828501525b505092915050565b815160ff16815261016081016020830151613176602084018260ff169052565b50604083015161318c604084018261ffff169052565b5060608301516131a2606084018261ffff169052565b5060808301516131b7608084018260ff169052565b5060a08301516131cc60a084018260ff169052565b5060c08301516131e160c084018260ff169052565b5060e08301516131f660e084018260ff169052565b506101008381015160ff169083015261012080840151151590830152610140808401518015158285015261314e565b600060e08201905061ffff80845116835280602085015116602084015260ff604085015116604084015260ff60608501511660608401528060808501511660808401528060a08501511660a08401525060ff60c08401511660c08301529291505056fe60806040526040516105503803806105508339810160408190526100229161030d565b818161002e8282610042565b5061003a9050836100a1565b5050506103f9565b61004b8261010f565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115610095576100908282610153565b505050565b61009d6101ca565b5050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6100e1600080516020610530833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a161010c816101eb565b50565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080846001600160a01b03168460405161017091906103dd565b600060405180830381855af49150503d80600081146101ab576040519150601f19603f3d011682016040523d82523d6000602084013e6101b0565b606091505b5090925090506101c185838361022f565b95945050505050565b34156101e95760405163b398979f60e01b815260040160405180910390fd5b565b6001600160a01b03811661021a57604051633173bdd160e11b8152600060048201526024015b60405180910390fd5b80600080516020610530833981519152610132565b6060826102445761023f8261028e565b610287565b815115801561025b57506001600160a01b0384163b155b1561028457604051639996b31560e01b81526001600160a01b0385166004820152602401610211565b50805b9392505050565b80511561029e5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b03811681146102ce57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103045781810151838201526020016102ec565b50506000910152565b60008060006060848603121561032257600080fd5b61032b846102b7565b9250610339602085016102b7565b60408501519092506001600160401b038082111561035657600080fd5b818601915086601f83011261036a57600080fd5b81518181111561037c5761037c6102d3565b604051601f8201601f19908116603f011681019083821181831017156103a4576103a46102d3565b816040528281528960208487010111156103bd57600080fd5b6103ce8360208301602088016102e9565b80955050505050509250925092565b600082516103ef8184602087016102e9565b9190910192915050565b610128806104086000396000f3fe608060405233301480602757506012603a565b6001600160a01b0316336001600160a01b0316145b156033576031606d565b005b603130607b565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b6079607560a0565b60ad565b565b60603660008037600080366000855afa3d6000803e808015609b573d6000f35b3d6000fd5b600060a860cb565b905090565b3660008037600080366000845af43d6000803e808015609b573d6000f35b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc605e56fea264697066735822122057dec10b14e1b5a2675fb25a09f631b5267e5914398ef99beeb1950e80f3910b64736f6c63430008190033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103a26469706673582212205ad2771acc14c56b78b19ebec0b7c41a7f74dec6ca9823a9449cb017c3ce27d064736f6c63430008190033",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// GetPlayerAddress is a free data retrieval call binding the contract method 0xe2ce0beb.
//
// Solidity: function getPlayerAddress(uint8 playerId) view returns(address)
func (_Contract *ContractCaller) GetPlayerAddress(opts *bind.CallOpts, playerId uint8) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getPlayerAddress", playerId)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetPlayerAddress is a free data retrieval call binding the contract method 0xe2ce0beb.
//
// Solidity: function getPlayerAddress(uint8 playerId) view returns(address)
func (_Contract *ContractSession) GetPlayerAddress(playerId uint8) (common.Address, error) {
	return _Contract.Contract.GetPlayerAddress(&_Contract.CallOpts, playerId)
}

// GetPlayerAddress is a free data retrieval call binding the contract method 0xe2ce0beb.
//
// Solidity: function getPlayerAddress(uint8 playerId) view returns(address)
func (_Contract *ContractCallerSession) GetPlayerAddress(playerId uint8) (common.Address, error) {
	return _Contract.Contract.GetPlayerAddress(&_Contract.CallOpts, playerId)
}

// GetPlayerId is a free data retrieval call binding the contract method 0xc4ae16a8.
//
// Solidity: function getPlayerId(address playerAddress) view returns(uint8)
func (_Contract *ContractCaller) GetPlayerId(opts *bind.CallOpts, playerAddress common.Address) (uint8, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getPlayerId", playerAddress)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetPlayerId is a free data retrieval call binding the contract method 0xc4ae16a8.
//
// Solidity: function getPlayerId(address playerAddress) view returns(uint8)
func (_Contract *ContractSession) GetPlayerId(playerAddress common.Address) (uint8, error) {
	return _Contract.Contract.GetPlayerId(&_Contract.CallOpts, playerAddress)
}

// GetPlayerId is a free data retrieval call binding the contract method 0xc4ae16a8.
//
// Solidity: function getPlayerId(address playerAddress) view returns(uint8)
func (_Contract *ContractCallerSession) GetPlayerId(playerAddress common.Address) (uint8, error) {
	return _Contract.Contract.GetPlayerId(&_Contract.CallOpts, playerAddress)
}

// LastTickBlockNumber is a free data retrieval call binding the contract method 0xff280198.
//
// Solidity: function lastTickBlockNumber() view returns(uint256)
func (_Contract *ContractCaller) LastTickBlockNumber(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "lastTickBlockNumber")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// LastTickBlockNumber is a free data retrieval call binding the contract method 0xff280198.
//
// Solidity: function lastTickBlockNumber() view returns(uint256)
func (_Contract *ContractSession) LastTickBlockNumber() (*big.Int, error) {
	return _Contract.Contract.LastTickBlockNumber(&_Contract.CallOpts)
}

// LastTickBlockNumber is a free data retrieval call binding the contract method 0xff280198.
//
// Solidity: function lastTickBlockNumber() view returns(uint256)
func (_Contract *ContractCallerSession) LastTickBlockNumber() (*big.Int, error) {
	return _Contract.Contract.LastTickBlockNumber(&_Contract.CallOpts)
}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Contract *ContractCaller) Proxy(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "proxy")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Contract *ContractSession) Proxy() (common.Address, error) {
	return _Contract.Contract.Proxy(&_Contract.CallOpts)
}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Contract *ContractCallerSession) Proxy() (common.Address, error) {
	return _Contract.Contract.Proxy(&_Contract.CallOpts)
}

// AddBuildingPrototype is a paid mutator transaction binding the contract method 0x982d778d.
//
// Solidity: function addBuildingPrototype((uint8,uint8,uint16,uint16,uint8,uint8,uint8,uint8,uint8,bool,bool) action) returns()
func (_Contract *ContractTransactor) AddBuildingPrototype(opts *bind.TransactOpts, action ActionDataAddBuildingPrototype) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "addBuildingPrototype", action)
}

// AddBuildingPrototype is a paid mutator transaction binding the contract method 0x982d778d.
//
// Solidity: function addBuildingPrototype((uint8,uint8,uint16,uint16,uint8,uint8,uint8,uint8,uint8,bool,bool) action) returns()
func (_Contract *ContractSession) AddBuildingPrototype(action ActionDataAddBuildingPrototype) (*types.Transaction, error) {
	return _Contract.Contract.AddBuildingPrototype(&_Contract.TransactOpts, action)
}

// AddBuildingPrototype is a paid mutator transaction binding the contract method 0x982d778d.
//
// Solidity: function addBuildingPrototype((uint8,uint8,uint16,uint16,uint8,uint8,uint8,uint8,uint8,bool,bool) action) returns()
func (_Contract *ContractTransactorSession) AddBuildingPrototype(action ActionDataAddBuildingPrototype) (*types.Transaction, error) {
	return _Contract.Contract.AddBuildingPrototype(&_Contract.TransactOpts, action)
}

// AddPlayer is a paid mutator transaction binding the contract method 0xb44ff0c5.
//
// Solidity: function addPlayer((uint16,uint16,uint8,uint8,uint16,uint16,uint8) action) returns()
func (_Contract *ContractTransactor) AddPlayer(opts *bind.TransactOpts, action ActionDataAddPlayer) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "addPlayer", action)
}

// AddPlayer is a paid mutator transaction binding the contract method 0xb44ff0c5.
//
// Solidity: function addPlayer((uint16,uint16,uint8,uint8,uint16,uint16,uint8) action) returns()
func (_Contract *ContractSession) AddPlayer(action ActionDataAddPlayer) (*types.Transaction, error) {
	return _Contract.Contract.AddPlayer(&_Contract.TransactOpts, action)
}

// AddPlayer is a paid mutator transaction binding the contract method 0xb44ff0c5.
//
// Solidity: function addPlayer((uint16,uint16,uint8,uint8,uint16,uint16,uint8) action) returns()
func (_Contract *ContractTransactorSession) AddPlayer(action ActionDataAddPlayer) (*types.Transaction, error) {
	return _Contract.Contract.AddPlayer(&_Contract.TransactOpts, action)
}

// AddUnitPrototype is a paid mutator transaction binding the contract method 0xa5e592f4.
//
// Solidity: function addUnitPrototype((uint8,uint16,uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8,bool,bool,bool,bool) action) returns()
func (_Contract *ContractTransactor) AddUnitPrototype(opts *bind.TransactOpts, action ActionDataAddUnitPrototype) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "addUnitPrototype", action)
}

// AddUnitPrototype is a paid mutator transaction binding the contract method 0xa5e592f4.
//
// Solidity: function addUnitPrototype((uint8,uint16,uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8,bool,bool,bool,bool) action) returns()
func (_Contract *ContractSession) AddUnitPrototype(action ActionDataAddUnitPrototype) (*types.Transaction, error) {
	return _Contract.Contract.AddUnitPrototype(&_Contract.TransactOpts, action)
}

// AddUnitPrototype is a paid mutator transaction binding the contract method 0xa5e592f4.
//
// Solidity: function addUnitPrototype((uint8,uint16,uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8,bool,bool,bool,bool) action) returns()
func (_Contract *ContractTransactorSession) AddUnitPrototype(action ActionDataAddUnitPrototype) (*types.Transaction, error) {
	return _Contract.Contract.AddUnitPrototype(&_Contract.TransactOpts, action)
}

// ArchTick is a paid mutator transaction binding the contract method 0xb8546a7d.
//
// Solidity: function archTick() returns()
func (_Contract *ContractTransactor) ArchTick(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "archTick")
}

// ArchTick is a paid mutator transaction binding the contract method 0xb8546a7d.
//
// Solidity: function archTick() returns()
func (_Contract *ContractSession) ArchTick() (*types.Transaction, error) {
	return _Contract.Contract.ArchTick(&_Contract.TransactOpts)
}

// ArchTick is a paid mutator transaction binding the contract method 0xb8546a7d.
//
// Solidity: function archTick() returns()
func (_Contract *ContractTransactorSession) ArchTick() (*types.Transaction, error) {
	return _Contract.Contract.ArchTick(&_Contract.TransactOpts)
}

// AssignUnit is a paid mutator transaction binding the contract method 0xf8613b59.
//
// Solidity: function assignUnit((uint8,uint8,uint64,uint64,uint8) action) returns()
func (_Contract *ContractTransactor) AssignUnit(opts *bind.TransactOpts, action ActionDataAssignUnit) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "assignUnit", action)
}

// AssignUnit is a paid mutator transaction binding the contract method 0xf8613b59.
//
// Solidity: function assignUnit((uint8,uint8,uint64,uint64,uint8) action) returns()
func (_Contract *ContractSession) AssignUnit(action ActionDataAssignUnit) (*types.Transaction, error) {
	return _Contract.Contract.AssignUnit(&_Contract.TransactOpts, action)
}

// AssignUnit is a paid mutator transaction binding the contract method 0xf8613b59.
//
// Solidity: function assignUnit((uint8,uint8,uint64,uint64,uint8) action) returns()
func (_Contract *ContractTransactorSession) AssignUnit(action ActionDataAssignUnit) (*types.Transaction, error) {
	return _Contract.Contract.AssignUnit(&_Contract.TransactOpts, action)
}

// CreateUnit is a paid mutator transaction binding the contract method 0x143ca15f.
//
// Solidity: function createUnit((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactor) CreateUnit(opts *bind.TransactOpts, action ActionDataCreateUnit) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "createUnit", action)
}

// CreateUnit is a paid mutator transaction binding the contract method 0x143ca15f.
//
// Solidity: function createUnit((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractSession) CreateUnit(action ActionDataCreateUnit) (*types.Transaction, error) {
	return _Contract.Contract.CreateUnit(&_Contract.TransactOpts, action)
}

// CreateUnit is a paid mutator transaction binding the contract method 0x143ca15f.
//
// Solidity: function createUnit((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactorSession) CreateUnit(action ActionDataCreateUnit) (*types.Transaction, error) {
	return _Contract.Contract.CreateUnit(&_Contract.TransactOpts, action)
}

// ExecuteMultipleActions is a paid mutator transaction binding the contract method 0xd0b36171.
//
// Solidity: function executeMultipleActions(uint32[] actionIds, uint8[] actionCount, bytes[] actionData) returns()
func (_Contract *ContractTransactor) ExecuteMultipleActions(opts *bind.TransactOpts, actionIds []uint32, actionCount []uint8, actionData [][]byte) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "executeMultipleActions", actionIds, actionCount, actionData)
}

// ExecuteMultipleActions is a paid mutator transaction binding the contract method 0xd0b36171.
//
// Solidity: function executeMultipleActions(uint32[] actionIds, uint8[] actionCount, bytes[] actionData) returns()
func (_Contract *ContractSession) ExecuteMultipleActions(actionIds []uint32, actionCount []uint8, actionData [][]byte) (*types.Transaction, error) {
	return _Contract.Contract.ExecuteMultipleActions(&_Contract.TransactOpts, actionIds, actionCount, actionData)
}

// ExecuteMultipleActions is a paid mutator transaction binding the contract method 0xd0b36171.
//
// Solidity: function executeMultipleActions(uint32[] actionIds, uint8[] actionCount, bytes[] actionData) returns()
func (_Contract *ContractTransactorSession) ExecuteMultipleActions(actionIds []uint32, actionCount []uint8, actionData [][]byte) (*types.Transaction, error) {
	return _Contract.Contract.ExecuteMultipleActions(&_Contract.TransactOpts, actionIds, actionCount, actionData)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _logic, bytes data) returns()
func (_Contract *ContractTransactor) Initialize(opts *bind.TransactOpts, _logic common.Address, data []byte) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "initialize", _logic, data)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _logic, bytes data) returns()
func (_Contract *ContractSession) Initialize(_logic common.Address, data []byte) (*types.Transaction, error) {
	return _Contract.Contract.Initialize(&_Contract.TransactOpts, _logic, data)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _logic, bytes data) returns()
func (_Contract *ContractTransactorSession) Initialize(_logic common.Address, data []byte) (*types.Transaction, error) {
	return _Contract.Contract.Initialize(&_Contract.TransactOpts, _logic, data)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xeaba9837.
//
// Solidity: function initialize((uint16,uint16) action) returns()
func (_Contract *ContractTransactor) Initialize0(opts *bind.TransactOpts, action ActionDataInitialize) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "initialize0", action)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xeaba9837.
//
// Solidity: function initialize((uint16,uint16) action) returns()
func (_Contract *ContractSession) Initialize0(action ActionDataInitialize) (*types.Transaction, error) {
	return _Contract.Contract.Initialize0(&_Contract.TransactOpts, action)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xeaba9837.
//
// Solidity: function initialize((uint16,uint16) action) returns()
func (_Contract *ContractTransactorSession) Initialize0(action ActionDataInitialize) (*types.Transaction, error) {
	return _Contract.Contract.Initialize0(&_Contract.TransactOpts, action)
}

// PlaceBuilding is a paid mutator transaction binding the contract method 0xd74de075.
//
// Solidity: function placeBuilding((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactor) PlaceBuilding(opts *bind.TransactOpts, action ActionDataPlaceBuilding) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "placeBuilding", action)
}

// PlaceBuilding is a paid mutator transaction binding the contract method 0xd74de075.
//
// Solidity: function placeBuilding((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractSession) PlaceBuilding(action ActionDataPlaceBuilding) (*types.Transaction, error) {
	return _Contract.Contract.PlaceBuilding(&_Contract.TransactOpts, action)
}

// PlaceBuilding is a paid mutator transaction binding the contract method 0xd74de075.
//
// Solidity: function placeBuilding((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactorSession) PlaceBuilding(action ActionDataPlaceBuilding) (*types.Transaction, error) {
	return _Contract.Contract.PlaceBuilding(&_Contract.TransactOpts, action)
}

// Purge is a paid mutator transaction binding the contract method 0x70f0c351.
//
// Solidity: function purge() returns()
func (_Contract *ContractTransactor) Purge(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "purge")
}

// Purge is a paid mutator transaction binding the contract method 0x70f0c351.
//
// Solidity: function purge() returns()
func (_Contract *ContractSession) Purge() (*types.Transaction, error) {
	return _Contract.Contract.Purge(&_Contract.TransactOpts)
}

// Purge is a paid mutator transaction binding the contract method 0x70f0c351.
//
// Solidity: function purge() returns()
func (_Contract *ContractTransactorSession) Purge() (*types.Transaction, error) {
	return _Contract.Contract.Purge(&_Contract.TransactOpts)
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_Contract *ContractTransactor) Start(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "start")
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_Contract *ContractSession) Start() (*types.Transaction, error) {
	return _Contract.Contract.Start(&_Contract.TransactOpts)
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_Contract *ContractTransactorSession) Start() (*types.Transaction, error) {
	return _Contract.Contract.Start(&_Contract.TransactOpts)
}

// Tick is a paid mutator transaction binding the contract method 0x3eaf5d9f.
//
// Solidity: function tick() returns()
func (_Contract *ContractTransactor) Tick(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "tick")
}

// Tick is a paid mutator transaction binding the contract method 0x3eaf5d9f.
//
// Solidity: function tick() returns()
func (_Contract *ContractSession) Tick() (*types.Transaction, error) {
	return _Contract.Contract.Tick(&_Contract.TransactOpts)
}

// Tick is a paid mutator transaction binding the contract method 0x3eaf5d9f.
//
// Solidity: function tick() returns()
func (_Contract *ContractTransactorSession) Tick() (*types.Transaction, error) {
	return _Contract.Contract.Tick(&_Contract.TransactOpts)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Contract *ContractTransactor) Fallback(opts *bind.TransactOpts, calldata []byte) (*types.Transaction, error) {
	return _Contract.contract.RawTransact(opts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Contract *ContractSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Contract.Contract.Fallback(&_Contract.TransactOpts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Contract *ContractTransactorSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Contract.Contract.Fallback(&_Contract.TransactOpts, calldata)
}

// ContractActionExecutedIterator is returned from FilterActionExecuted and is used to iterate over the raw logs and unpacked data for ActionExecuted events raised by the Contract contract.
type ContractActionExecutedIterator struct {
	Event *ContractActionExecuted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractActionExecutedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractActionExecuted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractActionExecuted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractActionExecutedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractActionExecutedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractActionExecuted represents a ActionExecuted event raised by the Contract contract.
type ContractActionExecuted struct {
	ActionId [4]byte
	Data     []byte
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterActionExecuted is a free log retrieval operation binding the contract event 0x45065f461aede1b904079823f6d858e465fa8c25fcf1654bb4a89e6dee320a1a.
//
// Solidity: event ActionExecuted(bytes4 actionId, bytes data)
func (_Contract *ContractFilterer) FilterActionExecuted(opts *bind.FilterOpts) (*ContractActionExecutedIterator, error) {

	logs, sub, err := _Contract.contract.FilterLogs(opts, "ActionExecuted")
	if err != nil {
		return nil, err
	}
	return &ContractActionExecutedIterator{contract: _Contract.contract, event: "ActionExecuted", logs: logs, sub: sub}, nil
}

// WatchActionExecuted is a free log subscription operation binding the contract event 0x45065f461aede1b904079823f6d858e465fa8c25fcf1654bb4a89e6dee320a1a.
//
// Solidity: event ActionExecuted(bytes4 actionId, bytes data)
func (_Contract *ContractFilterer) WatchActionExecuted(opts *bind.WatchOpts, sink chan<- *ContractActionExecuted) (event.Subscription, error) {

	logs, sub, err := _Contract.contract.WatchLogs(opts, "ActionExecuted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractActionExecuted)
				if err := _Contract.contract.UnpackLog(event, "ActionExecuted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseActionExecuted is a log parse operation binding the contract event 0x45065f461aede1b904079823f6d858e465fa8c25fcf1654bb4a89e6dee320a1a.
//
// Solidity: event ActionExecuted(bytes4 actionId, bytes data)
func (_Contract *ContractFilterer) ParseActionExecuted(log types.Log) (*ContractActionExecuted, error) {
	event := new(ContractActionExecuted)
	if err := _Contract.contract.UnpackLog(event, "ActionExecuted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the Contract contract.
type ContractInitializedIterator struct {
	Event *ContractInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractInitialized represents a Initialized event raised by the Contract contract.
type ContractInitialized struct {
	Version uint64
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_Contract *ContractFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractInitializedIterator, error) {

	logs, sub, err := _Contract.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractInitializedIterator{contract: _Contract.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_Contract *ContractFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractInitialized) (event.Subscription, error) {

	logs, sub, err := _Contract.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractInitialized)
				if err := _Contract.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_Contract *ContractFilterer) ParseInitialized(log types.Log) (*ContractInitialized, error) {
	event := new(ContractInitialized)
	if err := _Contract.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
