// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package contract

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// ActionDataAddBuildingPrototype is an auto generated low-level Go binding around an user-defined struct.
type ActionDataAddBuildingPrototype struct {
	Width            uint8
	Height           uint8
	ResourceCost     uint16
	ResourceCapacity uint16
	ComputeCapacity  uint8
	ResourceMine     uint8
	MineTime         uint8
	MaxIntegrity     uint8
	BuildingTime     uint8
	IsArmory         bool
	IsEnvironment    bool
}

// ActionDataAddPlayer is an auto generated low-level Go binding around an user-defined struct.
type ActionDataAddPlayer struct {
	SpawnAreaX  uint16
	SpawnAreaY  uint16
	WorkerPortX uint16
	WorkerPortY uint16
}

// ActionDataAddUnitPrototype is an auto generated low-level Go binding around an user-defined struct.
type ActionDataAddUnitPrototype struct {
	Layer          uint8
	ResourceCost   uint16
	ComputeCost    uint8
	SpawnTime      uint8
	MaxIntegrity   uint8
	LandStrength   uint8
	HoverStrength  uint8
	AirStrength    uint8
	AttackRange    uint8
	AttackCooldown uint8
	IsAssault      bool
	IsWorker       bool
}

// ActionDataAssignUnit is an auto generated low-level Go binding around an user-defined struct.
type ActionDataAssignUnit struct {
	PlayerId     uint8
	UnitId       uint8
	Command      uint64
	CommandExtra uint64
	CommandMeta  uint8
}

// ActionDataCreateUnit is an auto generated low-level Go binding around an user-defined struct.
type ActionDataCreateUnit struct {
	PlayerId uint8
	UnitType uint8
}

// ActionDataInitialize is an auto generated low-level Go binding around an user-defined struct.
type ActionDataInitialize struct {
	Width  uint16
	Height uint16
}

// ActionDataPlaceBuilding is an auto generated low-level Go binding around an user-defined struct.
type ActionDataPlaceBuilding struct {
	PlayerId     uint8
	BuildingType uint8
	X            uint16
	Y            uint16
}

// ContractMetaData contains all meta data concerning the Contract contract.
var ContractMetaData = &bind.MetaData{
	ABI: "[{\"type\":\"fallback\",\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"addBuildingPrototype\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_AddBuildingPrototype\",\"components\":[{\"name\":\"width\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"height\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"resourceCost\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"resourceCapacity\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"computeCapacity\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"resourceMine\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"mineTime\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"maxIntegrity\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"buildingTime\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"isArmory\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"isEnvironment\",\"type\":\"bool\",\"internalType\":\"bool\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"addPlayer\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_AddPlayer\",\"components\":[{\"name\":\"spawnAreaX\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"spawnAreaY\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"workerPortX\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"workerPortY\",\"type\":\"uint16\",\"internalType\":\"uint16\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"addUnitPrototype\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_AddUnitPrototype\",\"components\":[{\"name\":\"layer\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"resourceCost\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"computeCost\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"spawnTime\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"maxIntegrity\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"landStrength\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"hoverStrength\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"airStrength\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"attackRange\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"attackCooldown\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"isAssault\",\"type\":\"bool\",\"internalType\":\"bool\"},{\"name\":\"isWorker\",\"type\":\"bool\",\"internalType\":\"bool\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"assignUnit\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_AssignUnit\",\"components\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"unitId\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"command\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"commandExtra\",\"type\":\"uint64\",\"internalType\":\"uint64\"},{\"name\":\"commandMeta\",\"type\":\"uint8\",\"internalType\":\"uint8\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"createUnit\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_CreateUnit\",\"components\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"unitType\",\"type\":\"uint8\",\"internalType\":\"uint8\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"executeMultipleActions\",\"inputs\":[{\"name\":\"actionIds\",\"type\":\"uint32[]\",\"internalType\":\"uint32[]\"},{\"name\":\"actionCount\",\"type\":\"uint8[]\",\"internalType\":\"uint8[]\"},{\"name\":\"actionData\",\"type\":\"bytes[]\",\"internalType\":\"bytes[]\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"getPlayerAddress\",\"inputs\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"getPlayerId\",\"inputs\":[{\"name\":\"playerAddress\",\"type\":\"address\",\"internalType\":\"address\"}],\"outputs\":[{\"name\":\"\",\"type\":\"uint8\",\"internalType\":\"uint8\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"_logic\",\"type\":\"address\",\"internalType\":\"address\"},{\"name\":\"data\",\"type\":\"bytes\",\"internalType\":\"bytes\"}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"initialize\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_Initialize\",\"components\":[{\"name\":\"width\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"height\",\"type\":\"uint16\",\"internalType\":\"uint16\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"lastTickBlockNumber\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"uint256\",\"internalType\":\"uint256\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"placeBuilding\",\"inputs\":[{\"name\":\"action\",\"type\":\"tuple\",\"internalType\":\"structActionData_PlaceBuilding\",\"components\":[{\"name\":\"playerId\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"buildingType\",\"type\":\"uint8\",\"internalType\":\"uint8\"},{\"name\":\"x\",\"type\":\"uint16\",\"internalType\":\"uint16\"},{\"name\":\"y\",\"type\":\"uint16\",\"internalType\":\"uint16\"}]}],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"proxy\",\"inputs\":[],\"outputs\":[{\"name\":\"\",\"type\":\"address\",\"internalType\":\"address\"}],\"stateMutability\":\"view\"},{\"type\":\"function\",\"name\":\"start\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"function\",\"name\":\"tick\",\"inputs\":[],\"outputs\":[],\"stateMutability\":\"nonpayable\"},{\"type\":\"event\",\"name\":\"ActionExecuted\",\"inputs\":[{\"name\":\"actionId\",\"type\":\"bytes4\",\"indexed\":false,\"internalType\":\"bytes4\"},{\"name\":\"data\",\"type\":\"bytes\",\"indexed\":false,\"internalType\":\"bytes\"}],\"anonymous\":false},{\"type\":\"event\",\"name\":\"Initialized\",\"inputs\":[{\"name\":\"version\",\"type\":\"uint64\",\"indexed\":false,\"internalType\":\"uint64\"}],\"anonymous\":false},{\"type\":\"error\",\"name\":\"InvalidInitialization\",\"inputs\":[]},{\"type\":\"error\",\"name\":\"NotInitializing\",\"inputs\":[]}]",
	Bin: "0x6080604052348015600f57600080fd5b506132e88061001f6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063d0b3617111610097578063eaba983711610066578063eaba9837146101df578063ec556889146101ed578063f8613b5914610200578063ff28019814610213576100f5565b8063d0b361711461017b578063d1f578941461018e578063d74de075146101a1578063e2ce0beb146101b4576100f5565b8063982d778d116100d3578063982d778d1461012d578063a76b2b541461013b578063be9a655514610149578063c4ae16a814610151576100f5565b8063251eb4c0146100ff5780633eaf5d9f1461011257806397b1de791461011a575b6100fd61022a565b005b6100fd61010d366004611d8c565b61029f565b6100fd6102d5565b6100fd610128366004611e78565b610372565b6100fd61010d366004611eb9565b6100fd61010d366004611f88565b6100fd6103ca565b61016461015f366004612004565b610427565b60405160ff90911681526020015b60405180910390f35b6100fd6101893660046121bc565b610494565b6100fd61019c3660046122a1565b61053a565b6100fd6101af3660046122f0565b6106a8565b6101c76101c2366004612325565b6106fc565b6040516001600160a01b039091168152602001610172565b6100fd61010d366004612342565b6000546101c7906001600160a01b031681565b6100fd61020e36600461238c565b61072f565b61021c60015481565b604051908152602001610172565b6000546001600160a01b03166102875760405162461bcd60e51b815260206004820152601d60248201527f4172636850726f787941646d696e3a2070726f7879206e6f742073657400000060448201526064015b60405180910390fd5b60005461029c906001600160a01b0316610783565b50565b60405162461bcd60e51b815260206004820152600b60248201526a1b9bdd08185b1b1bddd95960aa1b604482015260640161027e565b60015443116103175760405162461bcd60e51b815260206004820152600e60248201526d185b1c9958591e481d1a58dad95960921b604482015260640161027e565b6000805460408051633eaf5d9f60e01b815290516001600160a01b0390921692633eaf5d9f9260048084019382900301818387803b15801561035857600080fd5b505af115801561036c573d6000803e3d6000fd5b50505050565b8051600261038160018361241c565b60ff16600481106103945761039461243b565b01546001600160a01b031633146103bd5760405162461bcd60e51b815260040161027e90612451565b6103c6826107a9565b5050565b6002600001546001600160a01b0316331461041d5760405162461bcd60e51b815260206004820152601360248201527247616d653a206f6e6c79506c617965724f6e6560681b604482015260640161027e565b6104256108e6565b565b6000805b60048160ff16101561048b57826001600160a01b031660028260ff16600481106104575761045761243b565b01546001600160a01b0316036104795761047281600161247b565b9392505050565b8061048381612494565b91505061042b565b50600092915050565b6000805b84518110156105335760008482815181106104b5576104b561243b565b602002602001015160ff16905060008390505b6104d282856124b3565b81101561051d576105158784815181106104ee576104ee61243b565b60200260200101518683815181106105085761050861243b565b6020026020010151610927565b6001016104c8565b5061052881846124b3565b925050600101610498565b5050505050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff1615906001600160401b031660008115801561057f5750825b90506000826001600160401b0316600114801561059b5750303b155b9050811580156105a9575080155b156105c75760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156105f157845460ff60401b1916600160401b1785555b6000308860405161060190611c11565b6001600160a01b03928316815291166020820152606060408201819052600090820152608001604051809103906000f080158015610643573d6000803e3d6000fd5b50905061064f81610ae3565b61065887610bcc565b50831561069f57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50505050505050565b805160026106b760018361241c565b60ff16600481106106ca576106ca61243b565b01546001600160a01b031633146106f35760405162461bcd60e51b815260040161027e90612451565b6103c682610cef565b6000600261070b60018461241c565b60ff166004811061071e5761071e61243b565b01546001600160a01b031692915050565b8051600261073e60018361241c565b60ff16600481106107515761075161243b565b01546001600160a01b0316331461077a5760405162461bcd60e51b815260040161027e90612451565b6103c682610df7565b60603660008037600080366000855afa3d6000803e8080156107a4573d6000f35b3d6000fd5b602081015160ff1660011461087b576000805482516040516301473f3960e21b815260ff90911660048201526001600160a01b039091169063051cfce4906024016101c060405180830381865afa158015610808573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082c91906124f2565b905060008160c0015160ff16116108795760405162461bcd60e51b815260206004820152601160248201527047616d653a206e6f2061726d6f7269657360781b604482015260640161027e565b505b6000546040516397b1de7960e01b8152825160ff908116600483015260208401511660248201526001600160a01b03909116906397b1de79906044015b600060405180830381600087803b1580156108d257600080fd5b505af1158015610533573d6000803e3d6000fd5b600080546040805163be9a655560e01b815290516001600160a01b039092169263be9a65559260048084019382900301818387803b15801561035857600080fd5b8163ffffffff16633eaf5d9f03610940576103c66102d5565b8163ffffffff1663eaba9837036109775760008180602001905181019061096791906125f7565b90506109728161029f565b505050565b8163ffffffff1663be9a655503610990576103c66103ca565b8163ffffffff166397b1de79036109c2576000818060200190518101906109b7919061262c565b905061097281610372565b8163ffffffff1663f8613b59036109f4576000818060200190518101906109e99190612661565b90506109728161072f565b8163ffffffff1663d74de07503610a2657600081806020019051810190610a1b91906126cf565b9050610972816106a8565b8163ffffffff1663a76b2b5403610a4d57600081806020019051810190610967919061272a565b8163ffffffff1663251eb4c003610a7457600081806020019051810190610967919061276a565b8163ffffffff1663982d778d03610a9b57600081806020019051810190610967919061284b565b60405162461bcd60e51b815260206004820152601d60248201527f456e747279706f696e743a20496e76616c696420616374696f6e204944000000604482015260640161027e565b6001600160a01b038116610b475760405162461bcd60e51b815260206004820152602560248201527f4172636850726f787941646d696e3a20696e76616c69642070726f7879206164604482015264647265737360d81b606482015260840161027e565b6000546001600160a01b031615610baa5760405162461bcd60e51b815260206004820152602160248201527f4172636850726f787941646d696e3a2070726f787920616c72656164792073656044820152601d60fa1b606482015260840161027e565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b604080518082018252601a80825260208201908152600054925163eaba983760e01b8152825161ffff90811660048301529151909116602482015290916001600160a01b03169063eaba983790604401600060405180830381600087803b158015610c3657600080fd5b505af1158015610c4a573d6000803e3d6000fd5b5050600054610c6492506001600160a01b03169050610e66565b600054610c79906001600160a01b03166111c5565b600082806020019051810190610c8f919061291a565b9050610c9a81611510565b600080546040805163be9a655560e01b815290516001600160a01b039092169263be9a65559260048084019382900301818387803b158015610cdb57600080fd5b505af115801561069f573d6000803e3d6000fd5b600160ff16816020015160ff1603610d555760405162461bcd60e51b8152602060048201526024808201527f47616d653a206d61696e206275696c64696e672063616e6e6f7420626520706c6044820152631858d95960e21b606482015260840161027e565b610d6f81600001518260400151836060015160028061158b565b610dc75760405162461bcd60e51b8152602060048201526024808201527f47616d653a206275696c64696e67206f757473696465206f66206275696c64206044820152636172656160e01b606482015260840161027e565b60005460405163d74de07560e01b81526001600160a01b039091169063d74de075906108b89084906004016129b3565b6000546040805163f8613b5960e01b8152835160ff9081166004830152602085015181166024830152918401516001600160401b0390811660448301526060850151166064820152608084015190911660848201526001600160a01b039091169063f8613b599060a4016108b8565b806001600160a01b031663251eb4c060405180610180016040528060016003811115610e9457610e946124c6565b60ff16815260966020820152600160408083018290526060830182905260196080840152600060a0840181905260c0840181905260e08085018290526101008501829052610120850182905261014085019190915261016090930191909152519083901b6001600160e01b0319168152610f1191906004016129f3565b600060405180830381600087803b158015610f2b57600080fd5b505af1158015610f3f573d6000803e3d6000fd5b50505050806001600160a01b031663251eb4c060405180610180016040528060026003811115610f7157610f716124c6565b60ff168152602001606461ffff168152602001600160ff168152602001600260ff168152602001601960ff168152602001600560ff168152602001600360ff168152602001600360ff168152602001600260ff168152602001600260ff168152602001600115158152602001600015158152506040518263ffffffff1660e01b815260040161100091906129f3565b600060405180830381600087803b15801561101a57600080fd5b505af115801561102e573d6000803e3d6000fd5b50505050806001600160a01b031663251eb4c060405180610180016040528060006003811115611060576110606124c6565b60ff16815260966020820152600160408083019190915260046060830181905260646080840152600560a0840152600f60c0840181905260e08085019190915261010084018290526003610120850152600061014085018190526101609094019390935290519184901b6001600160e01b03191682526110e19291016129f3565b600060405180830381600087803b1580156110fb57600080fd5b505af115801561110f573d6000803e3d6000fd5b50505050806001600160a01b031663251eb4c060405180610180016040528060006003811115611141576111416124c6565b60ff16815261012c602082015260016040808301919091526008606083015260966080830152600f60a0830152600360c08301819052600560e08085019190915261010084019190915260066101208401526000610140840181905261016090930192909252519083901b6001600160e01b03191681526108b891906004016129f3565b6040805161016081018252600280825260208201819052600082840181905260646060840152608083019190915260a0820181905260c0820181905260c860e083015261010082018190526101208201819052610140820152905163982d778d60e01b81526001600160a01b0383169163982d778d916112489190600401612ad8565b600060405180830381600087803b15801561126257600080fd5b505af1158015611276573d6000803e3d6000fd5b50506040805161016081018252600280825260208201526064818301526032606082015260006080820181905260a0820181905260c08201819052609660e083015260056101008301526101208201819052610140820152905163982d778d60e01b81526001600160a01b038516935063982d778d92506112fa9190600401612ad8565b600060405180830381600087803b15801561131457600080fd5b505af1158015611328573d6000803e3d6000fd5b50506040805161016081018252600280825260208201526096818301526000606082018190526003608083015260a0820181905260c08201819052604b60e083015260056101008301526101208201819052610140820152905163982d778d60e01b81526001600160a01b038516935063982d778d92506113ac9190600401612ad8565b600060405180830381600087803b1580156113c657600080fd5b505af11580156113da573d6000803e3d6000fd5b505060408051610160810182526002808252602082015260c8818301526000606082018190526080820181905260a0820181905260c08201819052606460e083015260056101008301526001610120830152610140820152905163982d778d60e01b81526001600160a01b038516935063982d778d925061145e9190600401612ad8565b600060405180830381600087803b15801561147857600080fd5b505af115801561148c573d6000803e3d6000fd5b5050604080516101608101825260018082526020820181905260008284018190526060830181905260808301819052601460a0840152600260c084015260e083018190526101008301819052610120830152610140820152905163982d778d60e01b81526001600160a01b038516935063982d778d92506108b89190600401612ad8565b60005b81518160ff1610156103c6576115276116cc565b818160ff168151811061153c5761153c61243b565b602002602001015160028260ff166004811061155a5761155a61243b565b0180546001600160a01b0319166001600160a01b03929092169190911790558061158381612494565b915050611513565b6000805460405163eed886d960e01b815260ff881660048201526001602482015282916001600160a01b03169063eed886d99060440160c060405180830381865afa1580156115de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116029190612bb2565b8051602082015191925090600061161a600484612c5c565b90506000611629600484612c5c565b90506000600461163a866002612c7e565b6116449190612c7e565b905060006004611655866002612c7e565b61165f9190612c7e565b90508361ffff168c61ffff161015801561168a575061ffff82166116838b8e612c7e565b61ffff1611155b801561169e57508261ffff168b61ffff1610155b80156116bb575061ffff81166116b48a8d612c7e565b61ffff1611155b9d9c50505050505050505050505050565b60008060009054906101000a90046001600160a01b03166001600160a01b031663422f7e1d6040518163ffffffff1660e01b815260040161010060405180830381865afa158015611721573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117459190612c99565b6040015161175490600161247b565b604080516080810182526000808252602082018190529181018290526060810182905291925090819061178684611a7d565b60ff80831684528116602084015290935091506117a284611acc565b60ff82811660408581019182529183166060860190815260005492516329dacad560e21b8152865161ffff9081166004830152602088015181166024830152925183166044820152905190911660648201529295509093506001600160a01b03169063a76b2b5490608401600060405180830381600087803b15801561182757600080fd5b505af115801561183b573d6000803e3d6000fd5b5050505061184884611af4565b6000546040805160808101825260ff8981168252600160208301528581168284015284166060820152905163d74de07560e01b81529396509194506001600160a01b03169163d74de0759161189f916004016129b3565b600060405180830381600087803b1580156118b957600080fd5b505af11580156118cd573d6000803e3d6000fd5b505050506118da84611b07565b60008054604080516080810182529283526005602084015260ff80861684830152841660608401525163d74de07560e01b81529396509194506001600160a01b039091169163d74de07591611931916004016129b3565b600060405180830381600087803b15801561194b57600080fd5b505af115801561195f573d6000803e3d6000fd5b5050505061196c84611b1a565b60008054604080516080810182529283526005602084015260ff80861684830152841660608401525163d74de07560e01b81529396509194506001600160a01b039091169163d74de075916119c3916004016129b3565b600060405180830381600087803b1580156119dd57600080fd5b505af11580156119f1573d6000803e3d6000fd5b505060005460408051808201825260ff898116825260016020830190815292516397b1de7960e01b8152915181166004830152915190911660248201526001600160a01b0390911692506397b1de799150604401600060405180830381600087803b158015611a5f57600080fd5b505af1158015611a73573d6000803e3d6000fd5b5050505050505050565b60008080611a8d6004600261247b565b90506000600280611aa06004601a61241c565b611aaa919061241c565b611ab4919061241c565b9050611ac1858383611b6a565b935093505050915091565b6000806004816002611adf83601a61241c565b611ae9919061241c565b611ab490600161247b565b6000806004816002611aaa83601a61241c565b60008060028181611aaa6001601a61241c565b60008080611b2a6004600261247b565b611b3590600261247b565b611b4090600161247b565b9050600060016002806004611b5684601a61241c565b611b60919061241c565b611aa0919061241c565b6000808460ff16600103611b82575082905080611c09565b8460ff16600203611b97575081905080611c09565b8460ff16600303611bac575082905081611c09565b8460ff16600403611bc1575081905082611c09565b60405162461bcd60e51b815260206004820152601760248201527f47616d653a20696e76616c696420706c61796572206964000000000000000000604482015260640161027e565b935093915050565b61055080612d6383390190565b634e487b7160e01b600052604160045260246000fd5b60405161018081016001600160401b0381118282101715611c5757611c57611c1e565b60405290565b604080519081016001600160401b0381118282101715611c5757611c57611c1e565b60405161016081016001600160401b0381118282101715611c5757611c57611c1e565b604051608081016001600160401b0381118282101715611c5757611c57611c1e565b60405160a081016001600160401b0381118282101715611c5757611c57611c1e565b6040516101c081016001600160401b0381118282101715611c5757611c57611c1e565b604051601f8201601f191681016001600160401b0381118282101715611d3157611d31611c1e565b604052919050565b60ff8116811461029c57600080fd5b8035611d5381611d39565b919050565b61ffff8116811461029c57600080fd5b8035611d5381611d58565b801515811461029c57600080fd5b8035611d5381611d73565b60006101808284031215611d9f57600080fd5b611da7611c34565b611db083611d48565b8152611dbe60208401611d68565b6020820152611dcf60408401611d48565b6040820152611de060608401611d48565b6060820152611df160808401611d48565b6080820152611e0260a08401611d48565b60a0820152611e1360c08401611d48565b60c0820152611e2460e08401611d48565b60e0820152610100611e37818501611d48565b90820152610120611e49848201611d48565b90820152610140611e5b848201611d81565b90820152610160611e6d848201611d81565b908201529392505050565b600060408284031215611e8a57600080fd5b611e92611c5d565b8235611e9d81611d39565b81526020830135611ead81611d39565b60208201529392505050565b60006101608284031215611ecc57600080fd5b611ed4611c7f565b611edd83611d48565b8152611eeb60208401611d48565b6020820152611efc60408401611d68565b6040820152611f0d60608401611d68565b6060820152611f1e60808401611d48565b6080820152611f2f60a08401611d48565b60a0820152611f4060c08401611d48565b60c0820152611f5160e08401611d48565b60e0820152610100611f64818501611d48565b90820152610120611f76848201611d81565b90820152610140611e6d848201611d81565b600060808284031215611f9a57600080fd5b611fa2611ca2565b8235611fad81611d58565b81526020830135611fbd81611d58565b60208201526040830135611fd081611d58565b60408201526060830135611fe381611d58565b60608201529392505050565b6001600160a01b038116811461029c57600080fd5b60006020828403121561201657600080fd5b813561047281611fef565b60006001600160401b0382111561203a5761203a611c1e565b5060051b60200190565b63ffffffff8116811461029c57600080fd5b600082601f83011261206757600080fd5b8135602061207c61207783612021565b611d09565b8083825260208201915060208460051b87010193508684111561209e57600080fd5b602086015b848110156120c35780356120b681611d39565b83529183019183016120a3565b509695505050505050565b600082601f8301126120df57600080fd5b81356001600160401b038111156120f8576120f8611c1e565b61210b601f8201601f1916602001611d09565b81815284602083860101111561212057600080fd5b816020850160208301376000918101602001919091529392505050565b600082601f83011261214e57600080fd5b8135602061215e61207783612021565b82815260059290921b8401810191818101908684111561217d57600080fd5b8286015b848110156120c35780356001600160401b038111156121a05760008081fd5b6121ae8986838b01016120ce565b845250918301918301612181565b6000806000606084860312156121d157600080fd5b83356001600160401b03808211156121e857600080fd5b818601915086601f8301126121fc57600080fd5b8135602061220c61207783612021565b82815260059290921b8401810191818101908a84111561222b57600080fd5b948201945b8386101561225257853561224381612044565b82529482019490820190612230565b9750508701359250508082111561226857600080fd5b61227487838801612056565b9350604086013591508082111561228a57600080fd5b506122978682870161213d565b9150509250925092565b600080604083850312156122b457600080fd5b82356122bf81611fef565b915060208301356001600160401b038111156122da57600080fd5b6122e6858286016120ce565b9150509250929050565b60006080828403121561230257600080fd5b61230a611ca2565b823561231581611d39565b81526020830135611fbd81611d39565b60006020828403121561233757600080fd5b813561047281611d39565b60006040828403121561235457600080fd5b61235c611c5d565b823561236781611d58565b81526020830135611ead81611d58565b6001600160401b038116811461029c57600080fd5b600060a0828403121561239e57600080fd5b6123a6611cc4565b82356123b181611d39565b815260208301356123c181611d39565b602082015260408301356123d481612377565b604082015260608301356123e781612377565b606082015260808301356123fa81611d39565b60808201529392505050565b634e487b7160e01b600052601160045260246000fd5b60ff828116828216039081111561243557612435612406565b92915050565b634e487b7160e01b600052603260045260246000fd5b60208082526010908201526f23b0b6b29d1037b7363ca83630bcb2b960811b604082015260600190565b60ff818116838216019081111561243557612435612406565b600060ff821660ff81036124aa576124aa612406565b60010192915050565b8082018082111561243557612435612406565b634e487b7160e01b600052602160045260246000fd5b8051611d5381611d58565b8051611d5381611d39565b60006101c0828403121561250557600080fd5b61250d611ce6565b612516836124dc565b8152612524602084016124dc565b6020820152612535604084016124dc565b6040820152612546606084016124dc565b6060820152612557608084016124dc565b608082015261256860a084016124dc565b60a082015261257960c084016124e7565b60c082015261258a60e084016124e7565b60e082015261010061259d8185016124e7565b908201526101206125af8482016124e7565b908201526101406125c18482016124e7565b908201526101606125d38482016124e7565b908201526101806125e58482016124e7565b908201526101a0611e6d8482016124e7565b60006040828403121561260957600080fd5b612611611c5d565b825161261c81611d58565b81526020830151611ead81611d58565b60006040828403121561263e57600080fd5b612646611c5d565b825161265181611d39565b81526020830151611ead81611d39565b600060a0828403121561267357600080fd5b61267b611cc4565b825161268681611d39565b8152602083015161269681611d39565b602082015260408301516126a981612377565b604082015260608301516126bc81612377565b606082015260808301516123fa81611d39565b6000608082840312156126e157600080fd5b6126e9611ca2565b82516126f481611d39565b8152602083015161270481611d39565b6020820152604083015161271781611d58565b60408201526060830151611fe381611d58565b60006080828403121561273c57600080fd5b612744611ca2565b825161274f81611d58565b8152602083015161270481611d58565b8051611d5381611d73565b6000610180828403121561277d57600080fd5b612785611c34565b61278e836124e7565b815261279c602084016124dc565b60208201526127ad604084016124e7565b60408201526127be606084016124e7565b60608201526127cf608084016124e7565b60808201526127e060a084016124e7565b60a08201526127f160c084016124e7565b60c082015261280260e084016124e7565b60e08201526101006128158185016124e7565b908201526101206128278482016124e7565b9082015261014061283984820161275f565b90820152610160611e6d84820161275f565b6000610160828403121561285e57600080fd5b612866611c7f565b61286f836124e7565b815261287d602084016124e7565b602082015261288e604084016124dc565b604082015261289f606084016124dc565b60608201526128b0608084016124e7565b60808201526128c160a084016124e7565b60a08201526128d260c084016124e7565b60c08201526128e360e084016124e7565b60e08201526101006128f68185016124e7565b9082015261012061290884820161275f565b90820152610140611e6d84820161275f565b6000602080838503121561292d57600080fd5b82516001600160401b0381111561294357600080fd5b8301601f8101851361295457600080fd5b805161296261207782612021565b81815260059190911b8201830190838101908783111561298157600080fd5b928401925b828410156129a857835161299981611fef565b82529284019290840190612986565b979650505050505050565b600060808201905060ff835116825260ff6020840151166020830152604083015161ffff8082166040850152806060860151166060850152505092915050565b815160ff16815261018081016020830151612a14602084018261ffff169052565b506040830151612a29604084018260ff169052565b506060830151612a3e606084018260ff169052565b506080830151612a53608084018260ff169052565b5060a0830151612a6860a084018260ff169052565b5060c0830151612a7d60c084018260ff169052565b5060e0830151612a9260e084018260ff169052565b506101008381015160ff9081169184019190915261012080850151909116908301526101408084015115159083015261016080840151801515828501525b505092915050565b815160ff16815261016081016020830151612af8602084018260ff169052565b506040830151612b0e604084018261ffff169052565b506060830151612b24606084018261ffff169052565b506080830151612b39608084018260ff169052565b5060a0830151612b4e60a084018260ff169052565b5060c0830151612b6360c084018260ff169052565b5060e0830151612b7860e084018260ff169052565b506101008381015160ff1690830152610120808401511515908301526101408084015180151582850152612ad0565b8051611d5381612044565b600060c08284031215612bc457600080fd5b60405160c081018181106001600160401b0382111715612be657612be6611c1e565b6040528251612bf481611d58565b81526020830151612c0481611d58565b60208201526040830151612c1781611d39565b60408201526060830151612c2a81611d39565b60608201526080830151612c3d81611d39565b608082015260a0830151612c5081612044565b60a08201529392505050565b61ffff828116828216039080821115612c7757612c77612406565b5092915050565b61ffff818116838216019080821115612c7757612c77612406565b6000610100808385031215612cad57600080fd5b604051908101906001600160401b0382118183101715612ccf57612ccf611c1e565b8160405283519150612ce082611d58565b818152612cef602085016124dc565b6020820152612d00604085016124e7565b6040820152612d11606085016124e7565b6060820152612d22608085016124e7565b6080820152612d3360a0850161275f565b60a0820152612d4460c0850161275f565b60c0820152612d5560e08501612ba7565b60e082015294935050505056fe60806040526040516105503803806105508339810160408190526100229161030d565b818161002e8282610042565b5061003a9050836100a1565b5050506103f9565b61004b8261010f565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a2805115610095576100908282610153565b505050565b61009d6101ca565b5050565b7f7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f6100e1600080516020610530833981519152546001600160a01b031690565b604080516001600160a01b03928316815291841660208301520160405180910390a161010c816101eb565b50565b807f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc5b80546001600160a01b0319166001600160a01b039290921691909117905550565b6060600080846001600160a01b03168460405161017091906103dd565b600060405180830381855af49150503d80600081146101ab576040519150601f19603f3d011682016040523d82523d6000602084013e6101b0565b606091505b5090925090506101c185838361022f565b95945050505050565b34156101e95760405163b398979f60e01b815260040160405180910390fd5b565b6001600160a01b03811661021a57604051633173bdd160e11b8152600060048201526024015b60405180910390fd5b80600080516020610530833981519152610132565b6060826102445761023f8261028e565b610287565b815115801561025b57506001600160a01b0384163b155b1561028457604051639996b31560e01b81526001600160a01b0385166004820152602401610211565b50805b9392505050565b80511561029e5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b80516001600160a01b03811681146102ce57600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b60005b838110156103045781810151838201526020016102ec565b50506000910152565b60008060006060848603121561032257600080fd5b61032b846102b7565b9250610339602085016102b7565b60408501519092506001600160401b038082111561035657600080fd5b818601915086601f83011261036a57600080fd5b81518181111561037c5761037c6102d3565b604051601f8201601f19908116603f011681019083821181831017156103a4576103a46102d3565b816040528281528960208487010111156103bd57600080fd5b6103ce8360208301602088016102e9565b80955050505050509250925092565b600082516103ef8184602087016102e9565b9190910192915050565b610128806104086000396000f3fe608060405233301480602757506012603a565b6001600160a01b0316336001600160a01b0316145b156033576031606d565b005b603130607b565b60007fb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d61035b546001600160a01b0316919050565b6079607560a0565b60ad565b565b60603660008037600080366000855afa3d6000803e808015609b573d6000f35b3d6000fd5b600060a860cb565b905090565b3660008037600080366000845af43d6000803e808015609b573d6000f35b60007f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc605e56fea26469706673582212206c51ec3f0fc6e0617b8e6024c348f66428101329951d5704cad053a0274d45d864736f6c63430008190033b53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103a26469706673582212204ff6205aef2a941ed99e696c724bceafa41aaa50f83f4c62eebcfe3e7ef518dd64736f6c63430008190033",
}

// ContractABI is the input ABI used to generate the binding from.
// Deprecated: Use ContractMetaData.ABI instead.
var ContractABI = ContractMetaData.ABI

// ContractBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use ContractMetaData.Bin instead.
var ContractBin = ContractMetaData.Bin

// DeployContract deploys a new Ethereum contract, binding an instance of Contract to it.
func DeployContract(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *Contract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(ContractBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// Contract is an auto generated Go binding around an Ethereum contract.
type Contract struct {
	ContractCaller     // Read-only binding to the contract
	ContractTransactor // Write-only binding to the contract
	ContractFilterer   // Log filterer for contract events
}

// ContractCaller is an auto generated read-only Go binding around an Ethereum contract.
type ContractCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractTransactor is an auto generated write-only Go binding around an Ethereum contract.
type ContractTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type ContractFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// ContractSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type ContractSession struct {
	Contract     *Contract         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// ContractCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type ContractCallerSession struct {
	Contract *ContractCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// ContractTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type ContractTransactorSession struct {
	Contract     *ContractTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// ContractRaw is an auto generated low-level Go binding around an Ethereum contract.
type ContractRaw struct {
	Contract *Contract // Generic contract binding to access the raw methods on
}

// ContractCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type ContractCallerRaw struct {
	Contract *ContractCaller // Generic read-only contract binding to access the raw methods on
}

// ContractTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type ContractTransactorRaw struct {
	Contract *ContractTransactor // Generic write-only contract binding to access the raw methods on
}

// NewContract creates a new instance of Contract, bound to a specific deployed contract.
func NewContract(address common.Address, backend bind.ContractBackend) (*Contract, error) {
	contract, err := bindContract(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Contract{ContractCaller: ContractCaller{contract: contract}, ContractTransactor: ContractTransactor{contract: contract}, ContractFilterer: ContractFilterer{contract: contract}}, nil
}

// NewContractCaller creates a new read-only instance of Contract, bound to a specific deployed contract.
func NewContractCaller(address common.Address, caller bind.ContractCaller) (*ContractCaller, error) {
	contract, err := bindContract(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &ContractCaller{contract: contract}, nil
}

// NewContractTransactor creates a new write-only instance of Contract, bound to a specific deployed contract.
func NewContractTransactor(address common.Address, transactor bind.ContractTransactor) (*ContractTransactor, error) {
	contract, err := bindContract(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &ContractTransactor{contract: contract}, nil
}

// NewContractFilterer creates a new log filterer instance of Contract, bound to a specific deployed contract.
func NewContractFilterer(address common.Address, filterer bind.ContractFilterer) (*ContractFilterer, error) {
	contract, err := bindContract(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &ContractFilterer{contract: contract}, nil
}

// bindContract binds a generic wrapper to an already deployed contract.
func bindContract(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := ContractMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.ContractCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.ContractTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Contract *ContractCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _Contract.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Contract *ContractTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Contract *ContractTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _Contract.Contract.contract.Transact(opts, method, params...)
}

// GetPlayerAddress is a free data retrieval call binding the contract method 0xe2ce0beb.
//
// Solidity: function getPlayerAddress(uint8 playerId) view returns(address)
func (_Contract *ContractCaller) GetPlayerAddress(opts *bind.CallOpts, playerId uint8) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getPlayerAddress", playerId)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetPlayerAddress is a free data retrieval call binding the contract method 0xe2ce0beb.
//
// Solidity: function getPlayerAddress(uint8 playerId) view returns(address)
func (_Contract *ContractSession) GetPlayerAddress(playerId uint8) (common.Address, error) {
	return _Contract.Contract.GetPlayerAddress(&_Contract.CallOpts, playerId)
}

// GetPlayerAddress is a free data retrieval call binding the contract method 0xe2ce0beb.
//
// Solidity: function getPlayerAddress(uint8 playerId) view returns(address)
func (_Contract *ContractCallerSession) GetPlayerAddress(playerId uint8) (common.Address, error) {
	return _Contract.Contract.GetPlayerAddress(&_Contract.CallOpts, playerId)
}

// GetPlayerId is a free data retrieval call binding the contract method 0xc4ae16a8.
//
// Solidity: function getPlayerId(address playerAddress) view returns(uint8)
func (_Contract *ContractCaller) GetPlayerId(opts *bind.CallOpts, playerAddress common.Address) (uint8, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "getPlayerId", playerAddress)

	if err != nil {
		return *new(uint8), err
	}

	out0 := *abi.ConvertType(out[0], new(uint8)).(*uint8)

	return out0, err

}

// GetPlayerId is a free data retrieval call binding the contract method 0xc4ae16a8.
//
// Solidity: function getPlayerId(address playerAddress) view returns(uint8)
func (_Contract *ContractSession) GetPlayerId(playerAddress common.Address) (uint8, error) {
	return _Contract.Contract.GetPlayerId(&_Contract.CallOpts, playerAddress)
}

// GetPlayerId is a free data retrieval call binding the contract method 0xc4ae16a8.
//
// Solidity: function getPlayerId(address playerAddress) view returns(uint8)
func (_Contract *ContractCallerSession) GetPlayerId(playerAddress common.Address) (uint8, error) {
	return _Contract.Contract.GetPlayerId(&_Contract.CallOpts, playerAddress)
}

// LastTickBlockNumber is a free data retrieval call binding the contract method 0xff280198.
//
// Solidity: function lastTickBlockNumber() view returns(uint256)
func (_Contract *ContractCaller) LastTickBlockNumber(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "lastTickBlockNumber")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// LastTickBlockNumber is a free data retrieval call binding the contract method 0xff280198.
//
// Solidity: function lastTickBlockNumber() view returns(uint256)
func (_Contract *ContractSession) LastTickBlockNumber() (*big.Int, error) {
	return _Contract.Contract.LastTickBlockNumber(&_Contract.CallOpts)
}

// LastTickBlockNumber is a free data retrieval call binding the contract method 0xff280198.
//
// Solidity: function lastTickBlockNumber() view returns(uint256)
func (_Contract *ContractCallerSession) LastTickBlockNumber() (*big.Int, error) {
	return _Contract.Contract.LastTickBlockNumber(&_Contract.CallOpts)
}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Contract *ContractCaller) Proxy(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _Contract.contract.Call(opts, &out, "proxy")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Contract *ContractSession) Proxy() (common.Address, error) {
	return _Contract.Contract.Proxy(&_Contract.CallOpts)
}

// Proxy is a free data retrieval call binding the contract method 0xec556889.
//
// Solidity: function proxy() view returns(address)
func (_Contract *ContractCallerSession) Proxy() (common.Address, error) {
	return _Contract.Contract.Proxy(&_Contract.CallOpts)
}

// AddBuildingPrototype is a paid mutator transaction binding the contract method 0x982d778d.
//
// Solidity: function addBuildingPrototype((uint8,uint8,uint16,uint16,uint8,uint8,uint8,uint8,uint8,bool,bool) action) returns()
func (_Contract *ContractTransactor) AddBuildingPrototype(opts *bind.TransactOpts, action ActionDataAddBuildingPrototype) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "addBuildingPrototype", action)
}

// AddBuildingPrototype is a paid mutator transaction binding the contract method 0x982d778d.
//
// Solidity: function addBuildingPrototype((uint8,uint8,uint16,uint16,uint8,uint8,uint8,uint8,uint8,bool,bool) action) returns()
func (_Contract *ContractSession) AddBuildingPrototype(action ActionDataAddBuildingPrototype) (*types.Transaction, error) {
	return _Contract.Contract.AddBuildingPrototype(&_Contract.TransactOpts, action)
}

// AddBuildingPrototype is a paid mutator transaction binding the contract method 0x982d778d.
//
// Solidity: function addBuildingPrototype((uint8,uint8,uint16,uint16,uint8,uint8,uint8,uint8,uint8,bool,bool) action) returns()
func (_Contract *ContractTransactorSession) AddBuildingPrototype(action ActionDataAddBuildingPrototype) (*types.Transaction, error) {
	return _Contract.Contract.AddBuildingPrototype(&_Contract.TransactOpts, action)
}

// AddPlayer is a paid mutator transaction binding the contract method 0xa76b2b54.
//
// Solidity: function addPlayer((uint16,uint16,uint16,uint16) action) returns()
func (_Contract *ContractTransactor) AddPlayer(opts *bind.TransactOpts, action ActionDataAddPlayer) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "addPlayer", action)
}

// AddPlayer is a paid mutator transaction binding the contract method 0xa76b2b54.
//
// Solidity: function addPlayer((uint16,uint16,uint16,uint16) action) returns()
func (_Contract *ContractSession) AddPlayer(action ActionDataAddPlayer) (*types.Transaction, error) {
	return _Contract.Contract.AddPlayer(&_Contract.TransactOpts, action)
}

// AddPlayer is a paid mutator transaction binding the contract method 0xa76b2b54.
//
// Solidity: function addPlayer((uint16,uint16,uint16,uint16) action) returns()
func (_Contract *ContractTransactorSession) AddPlayer(action ActionDataAddPlayer) (*types.Transaction, error) {
	return _Contract.Contract.AddPlayer(&_Contract.TransactOpts, action)
}

// AddUnitPrototype is a paid mutator transaction binding the contract method 0x251eb4c0.
//
// Solidity: function addUnitPrototype((uint8,uint16,uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8,bool,bool) action) returns()
func (_Contract *ContractTransactor) AddUnitPrototype(opts *bind.TransactOpts, action ActionDataAddUnitPrototype) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "addUnitPrototype", action)
}

// AddUnitPrototype is a paid mutator transaction binding the contract method 0x251eb4c0.
//
// Solidity: function addUnitPrototype((uint8,uint16,uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8,bool,bool) action) returns()
func (_Contract *ContractSession) AddUnitPrototype(action ActionDataAddUnitPrototype) (*types.Transaction, error) {
	return _Contract.Contract.AddUnitPrototype(&_Contract.TransactOpts, action)
}

// AddUnitPrototype is a paid mutator transaction binding the contract method 0x251eb4c0.
//
// Solidity: function addUnitPrototype((uint8,uint16,uint8,uint8,uint8,uint8,uint8,uint8,uint8,uint8,bool,bool) action) returns()
func (_Contract *ContractTransactorSession) AddUnitPrototype(action ActionDataAddUnitPrototype) (*types.Transaction, error) {
	return _Contract.Contract.AddUnitPrototype(&_Contract.TransactOpts, action)
}

// AssignUnit is a paid mutator transaction binding the contract method 0xf8613b59.
//
// Solidity: function assignUnit((uint8,uint8,uint64,uint64,uint8) action) returns()
func (_Contract *ContractTransactor) AssignUnit(opts *bind.TransactOpts, action ActionDataAssignUnit) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "assignUnit", action)
}

// AssignUnit is a paid mutator transaction binding the contract method 0xf8613b59.
//
// Solidity: function assignUnit((uint8,uint8,uint64,uint64,uint8) action) returns()
func (_Contract *ContractSession) AssignUnit(action ActionDataAssignUnit) (*types.Transaction, error) {
	return _Contract.Contract.AssignUnit(&_Contract.TransactOpts, action)
}

// AssignUnit is a paid mutator transaction binding the contract method 0xf8613b59.
//
// Solidity: function assignUnit((uint8,uint8,uint64,uint64,uint8) action) returns()
func (_Contract *ContractTransactorSession) AssignUnit(action ActionDataAssignUnit) (*types.Transaction, error) {
	return _Contract.Contract.AssignUnit(&_Contract.TransactOpts, action)
}

// CreateUnit is a paid mutator transaction binding the contract method 0x97b1de79.
//
// Solidity: function createUnit((uint8,uint8) action) returns()
func (_Contract *ContractTransactor) CreateUnit(opts *bind.TransactOpts, action ActionDataCreateUnit) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "createUnit", action)
}

// CreateUnit is a paid mutator transaction binding the contract method 0x97b1de79.
//
// Solidity: function createUnit((uint8,uint8) action) returns()
func (_Contract *ContractSession) CreateUnit(action ActionDataCreateUnit) (*types.Transaction, error) {
	return _Contract.Contract.CreateUnit(&_Contract.TransactOpts, action)
}

// CreateUnit is a paid mutator transaction binding the contract method 0x97b1de79.
//
// Solidity: function createUnit((uint8,uint8) action) returns()
func (_Contract *ContractTransactorSession) CreateUnit(action ActionDataCreateUnit) (*types.Transaction, error) {
	return _Contract.Contract.CreateUnit(&_Contract.TransactOpts, action)
}

// ExecuteMultipleActions is a paid mutator transaction binding the contract method 0xd0b36171.
//
// Solidity: function executeMultipleActions(uint32[] actionIds, uint8[] actionCount, bytes[] actionData) returns()
func (_Contract *ContractTransactor) ExecuteMultipleActions(opts *bind.TransactOpts, actionIds []uint32, actionCount []uint8, actionData [][]byte) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "executeMultipleActions", actionIds, actionCount, actionData)
}

// ExecuteMultipleActions is a paid mutator transaction binding the contract method 0xd0b36171.
//
// Solidity: function executeMultipleActions(uint32[] actionIds, uint8[] actionCount, bytes[] actionData) returns()
func (_Contract *ContractSession) ExecuteMultipleActions(actionIds []uint32, actionCount []uint8, actionData [][]byte) (*types.Transaction, error) {
	return _Contract.Contract.ExecuteMultipleActions(&_Contract.TransactOpts, actionIds, actionCount, actionData)
}

// ExecuteMultipleActions is a paid mutator transaction binding the contract method 0xd0b36171.
//
// Solidity: function executeMultipleActions(uint32[] actionIds, uint8[] actionCount, bytes[] actionData) returns()
func (_Contract *ContractTransactorSession) ExecuteMultipleActions(actionIds []uint32, actionCount []uint8, actionData [][]byte) (*types.Transaction, error) {
	return _Contract.Contract.ExecuteMultipleActions(&_Contract.TransactOpts, actionIds, actionCount, actionData)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _logic, bytes data) returns()
func (_Contract *ContractTransactor) Initialize(opts *bind.TransactOpts, _logic common.Address, data []byte) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "initialize", _logic, data)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _logic, bytes data) returns()
func (_Contract *ContractSession) Initialize(_logic common.Address, data []byte) (*types.Transaction, error) {
	return _Contract.Contract.Initialize(&_Contract.TransactOpts, _logic, data)
}

// Initialize is a paid mutator transaction binding the contract method 0xd1f57894.
//
// Solidity: function initialize(address _logic, bytes data) returns()
func (_Contract *ContractTransactorSession) Initialize(_logic common.Address, data []byte) (*types.Transaction, error) {
	return _Contract.Contract.Initialize(&_Contract.TransactOpts, _logic, data)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xeaba9837.
//
// Solidity: function initialize((uint16,uint16) action) returns()
func (_Contract *ContractTransactor) Initialize0(opts *bind.TransactOpts, action ActionDataInitialize) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "initialize0", action)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xeaba9837.
//
// Solidity: function initialize((uint16,uint16) action) returns()
func (_Contract *ContractSession) Initialize0(action ActionDataInitialize) (*types.Transaction, error) {
	return _Contract.Contract.Initialize0(&_Contract.TransactOpts, action)
}

// Initialize0 is a paid mutator transaction binding the contract method 0xeaba9837.
//
// Solidity: function initialize((uint16,uint16) action) returns()
func (_Contract *ContractTransactorSession) Initialize0(action ActionDataInitialize) (*types.Transaction, error) {
	return _Contract.Contract.Initialize0(&_Contract.TransactOpts, action)
}

// PlaceBuilding is a paid mutator transaction binding the contract method 0xd74de075.
//
// Solidity: function placeBuilding((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactor) PlaceBuilding(opts *bind.TransactOpts, action ActionDataPlaceBuilding) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "placeBuilding", action)
}

// PlaceBuilding is a paid mutator transaction binding the contract method 0xd74de075.
//
// Solidity: function placeBuilding((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractSession) PlaceBuilding(action ActionDataPlaceBuilding) (*types.Transaction, error) {
	return _Contract.Contract.PlaceBuilding(&_Contract.TransactOpts, action)
}

// PlaceBuilding is a paid mutator transaction binding the contract method 0xd74de075.
//
// Solidity: function placeBuilding((uint8,uint8,uint16,uint16) action) returns()
func (_Contract *ContractTransactorSession) PlaceBuilding(action ActionDataPlaceBuilding) (*types.Transaction, error) {
	return _Contract.Contract.PlaceBuilding(&_Contract.TransactOpts, action)
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_Contract *ContractTransactor) Start(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "start")
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_Contract *ContractSession) Start() (*types.Transaction, error) {
	return _Contract.Contract.Start(&_Contract.TransactOpts)
}

// Start is a paid mutator transaction binding the contract method 0xbe9a6555.
//
// Solidity: function start() returns()
func (_Contract *ContractTransactorSession) Start() (*types.Transaction, error) {
	return _Contract.Contract.Start(&_Contract.TransactOpts)
}

// Tick is a paid mutator transaction binding the contract method 0x3eaf5d9f.
//
// Solidity: function tick() returns()
func (_Contract *ContractTransactor) Tick(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Contract.contract.Transact(opts, "tick")
}

// Tick is a paid mutator transaction binding the contract method 0x3eaf5d9f.
//
// Solidity: function tick() returns()
func (_Contract *ContractSession) Tick() (*types.Transaction, error) {
	return _Contract.Contract.Tick(&_Contract.TransactOpts)
}

// Tick is a paid mutator transaction binding the contract method 0x3eaf5d9f.
//
// Solidity: function tick() returns()
func (_Contract *ContractTransactorSession) Tick() (*types.Transaction, error) {
	return _Contract.Contract.Tick(&_Contract.TransactOpts)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Contract *ContractTransactor) Fallback(opts *bind.TransactOpts, calldata []byte) (*types.Transaction, error) {
	return _Contract.contract.RawTransact(opts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Contract *ContractSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Contract.Contract.Fallback(&_Contract.TransactOpts, calldata)
}

// Fallback is a paid mutator transaction binding the contract fallback function.
//
// Solidity: fallback() returns()
func (_Contract *ContractTransactorSession) Fallback(calldata []byte) (*types.Transaction, error) {
	return _Contract.Contract.Fallback(&_Contract.TransactOpts, calldata)
}

// ContractActionExecutedIterator is returned from FilterActionExecuted and is used to iterate over the raw logs and unpacked data for ActionExecuted events raised by the Contract contract.
type ContractActionExecutedIterator struct {
	Event *ContractActionExecuted // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractActionExecutedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractActionExecuted)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractActionExecuted)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractActionExecutedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractActionExecutedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractActionExecuted represents a ActionExecuted event raised by the Contract contract.
type ContractActionExecuted struct {
	ActionId [4]byte
	Data     []byte
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterActionExecuted is a free log retrieval operation binding the contract event 0x45065f461aede1b904079823f6d858e465fa8c25fcf1654bb4a89e6dee320a1a.
//
// Solidity: event ActionExecuted(bytes4 actionId, bytes data)
func (_Contract *ContractFilterer) FilterActionExecuted(opts *bind.FilterOpts) (*ContractActionExecutedIterator, error) {

	logs, sub, err := _Contract.contract.FilterLogs(opts, "ActionExecuted")
	if err != nil {
		return nil, err
	}
	return &ContractActionExecutedIterator{contract: _Contract.contract, event: "ActionExecuted", logs: logs, sub: sub}, nil
}

// WatchActionExecuted is a free log subscription operation binding the contract event 0x45065f461aede1b904079823f6d858e465fa8c25fcf1654bb4a89e6dee320a1a.
//
// Solidity: event ActionExecuted(bytes4 actionId, bytes data)
func (_Contract *ContractFilterer) WatchActionExecuted(opts *bind.WatchOpts, sink chan<- *ContractActionExecuted) (event.Subscription, error) {

	logs, sub, err := _Contract.contract.WatchLogs(opts, "ActionExecuted")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractActionExecuted)
				if err := _Contract.contract.UnpackLog(event, "ActionExecuted", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseActionExecuted is a log parse operation binding the contract event 0x45065f461aede1b904079823f6d858e465fa8c25fcf1654bb4a89e6dee320a1a.
//
// Solidity: event ActionExecuted(bytes4 actionId, bytes data)
func (_Contract *ContractFilterer) ParseActionExecuted(log types.Log) (*ContractActionExecuted, error) {
	event := new(ContractActionExecuted)
	if err := _Contract.contract.UnpackLog(event, "ActionExecuted", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// ContractInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the Contract contract.
type ContractInitializedIterator struct {
	Event *ContractInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *ContractInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(ContractInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(ContractInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *ContractInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *ContractInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// ContractInitialized represents a Initialized event raised by the Contract contract.
type ContractInitialized struct {
	Version uint64
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_Contract *ContractFilterer) FilterInitialized(opts *bind.FilterOpts) (*ContractInitializedIterator, error) {

	logs, sub, err := _Contract.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &ContractInitializedIterator{contract: _Contract.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_Contract *ContractFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *ContractInitialized) (event.Subscription, error) {

	logs, sub, err := _Contract.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(ContractInitialized)
				if err := _Contract.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2.
//
// Solidity: event Initialized(uint64 version)
func (_Contract *ContractFilterer) ParseInitialized(log types.Log) (*ContractInitialized, error) {
	event := new(ContractInitialized)
	if err := _Contract.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
